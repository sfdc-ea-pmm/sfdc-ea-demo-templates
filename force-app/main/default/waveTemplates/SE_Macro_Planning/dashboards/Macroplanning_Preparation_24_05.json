{
  "name" : "Macroplanning_Preparation_24_05_tp",
  "label" : "Saur Macroplanning - Preparation",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "dateVersion" : 1,
  "mobileDisabled" : false,
  "xmd" : {
    "measures" : [
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "TauxCharge",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#00B531",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#E84340",
                  "bin" : "1"
                }
              ]
            }
          }
        },
        "field" : "lens_5.TauxCharge",
        "format" : {
          "delimiters" : {
            "decimal" : "."
          },
          "customFormat" : "[\"# ###%\",100]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Capacite_ETP_Date_We_1.C",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"#,###\",1]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Capacite_Date_Week_a_2.C",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"#,###\",1]"
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Taux_Charge",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#00B531",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#E84340",
                  "bin" : "100"
                }
              ]
            }
          }
        },
        "field" : "lens_4.Taux_Charge",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Capacite_Date_Week_a_1.MoyenneCapacite",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"# ### h\",1]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Capacite_Date_Week_a_1.C",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"#,###\",1]"
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Activite",
            "type" : "categories",
            "parameters" : {
              "values" : [ ]
            }
          }
        },
        "field" : "ChargeParActivite.Charges_Totales",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Diff",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#E84340",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Date_Week_1_1.Diff",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Diff",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#00B531",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#E84340",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Date_Week_1.Diff",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "TauxChargeChart",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#00B531",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#E84340",
                  "bin" : "1"
                }
              ]
            }
          }
        },
        "field" : "lens_6.TauxChargeChart",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "lens_6.Capacite",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"# ### h\",1]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "lens_6.Diff√©rence",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"# ### h\",1]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "lens_6.TauxCharge",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"#,###.##%\",100]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Val_Renou_Compteurs.sum_Renouvellement_Compteurs",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"# ### h\",1]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Val_Interim.sum_Interim",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"# ### h\",1]"
        }
      }
    ],
    "derivedDimensions" : [ ],
    "organizations" : [ ],
    "showDetailsDefaultFields" : [ ],
    "dates" : [ ],
    "derivedMeasures" : [ ],
    "dimensions" : [
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Activite",
            "type" : "categories",
            "parameters" : {
              "values" : [ ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "ChargeParActivite.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Diff",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#E84340",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Date_Week_1_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Diff",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#00B531",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#E84340",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Date_Week_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      }
    ]
  },
  "state" : {
    "dataSourceLinks" : [
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CHARGE_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Ann_e"
          },
          {
            "dataSourceName" : "${App.Datasets.CAPACITE_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Ann_e"
          }
        ],
        "label" : "Annee",
        "name" : "Link_6200"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CHARGE_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Date"
          },
          {
            "dataSourceName" : "${App.Datasets.CAPACITE_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Date"
          }
        ],
        "label" : "Date",
        "name" : "Link_9363"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CAPACITE_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Profil"
          },
          {
            "dataSourceName" : "${App.Datasets.CHARGE_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Profil"
          }
        ],
        "label" : "Profil",
        "name" : "Link_5737"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CHARGE_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Secteur"
          },
          {
            "dataSourceName" : "${App.Datasets.VARIABLES_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Secteur"
          },
          {
            "dataSourceName" : "${App.Datasets.CAPACITE_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Secteur"
          },
          {
            "dataSourceName" : "${App.Datasets.INTELLIGENT_MACRO_PLANNING_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Secteur"
          }
        ],
        "label" : "Secteur",
        "name" : "Link_11355"
      }
    ],
    "filters" : [
      {
        "dataset" : {
          "name" : "${App.Datasets.CHARGE_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "Secteur"
        ],
        "locked" : false,
        "operator" : "in"
      }
    ],
    "gridLayouts" : [
      {
        "maxWidth" : 1800,
        "name" : "Default",
        "numColumns" : 49,
        "pages" : [
          {
            "label" : "CH_H_ALL",
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_4",
                "row" : 28,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_5",
                "row" : 103,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(240, 244, 247)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_3",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_7",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_8",
                "row" : 104,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 21,
                "column" : 3,
                "name" : "text_9",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "container_7",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "container_8",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "container_9",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_2",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "chart_2",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "chart_4",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "chart_5",
                "row" : 34,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_20",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 2,
                "name" : "text_21",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "text_22",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 38,
                "name" : "text_24",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 43,
                "name" : "number_7",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "table_2",
                "row" : 109,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 10,
                "name" : "chart_7",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "text_25",
                "row" : 69,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 37,
                "name" : "text_23",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_2",
                "row" : 20,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(5, 16, 39)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "text_4",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "chart_9",
                "row" : 74,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_6",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 240)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 28,
                "name" : "number_3",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 12,
                "name" : "number_6",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 6,
                "name" : "number_8",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 0,
                "name" : "link_21",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 95, 178, 0.05)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 11,
                "name" : "link_22",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 20,
                "name" : "link_23",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 29,
                "name" : "link_24",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 38,
                "name" : "link_25",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 41,
                "name" : "link_26",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "link_27",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_2",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 25,
                "name" : "listselector_3",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "listselector_4",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 37,
                "name" : "listselector_5",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 42,
                "name" : "link_2",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 95, 178)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 45,
                "name" : "link_3",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              }
            ]
          },
          {
            "label" : "CH_H_ACT",
            "name" : "1b6cfd74-4125-4fb7-97d4-f0d8a1662d82",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_4",
                "row" : 28,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_5",
                "row" : 103,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(240, 244, 247)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_3",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_7",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_8",
                "row" : 104,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 21,
                "column" : 3,
                "name" : "text_9",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "container_7",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "container_8",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "container_9",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_2",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "chart_2",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "chart_4",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_20",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 2,
                "name" : "text_21",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "text_22",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 38,
                "name" : "text_24",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 43,
                "name" : "number_7",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "table_2",
                "row" : 109,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 10,
                "name" : "chart_7",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "text_25",
                "row" : 69,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 37,
                "name" : "text_23",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_2",
                "row" : 20,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(5, 16, 39)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "text_4",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "chart_9",
                "row" : 74,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_6",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 240)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 28,
                "name" : "number_3",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 12,
                "name" : "number_6",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 6,
                "name" : "number_8",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 41,
                "name" : "link_11",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "link_12",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "chart_12",
                "row" : 34,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 20,
                "name" : "link_30",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 29,
                "name" : "link_31",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 38,
                "name" : "link_32",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 0,
                "name" : "link_33",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 95, 178, 0.05)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 11,
                "name" : "link_34",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_2",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "listselector_4",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 25,
                "name" : "listselector_3",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 37,
                "name" : "listselector_5",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 42,
                "name" : "link_4",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 95, 178)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 45,
                "name" : "link_6",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              }
            ]
          },
          {
            "label" : "CH_H_ALL_SIMUL",
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_4",
                "row" : 28,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_5",
                "row" : 103,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(240, 244, 247)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_3",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_7",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_8",
                "row" : 104,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 21,
                "column" : 3,
                "name" : "text_9",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "container_7",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "container_8",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "container_9",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_2",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "chart_2",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "chart_4",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 37,
                "column" : 11,
                "name" : "chart_5",
                "row" : 34,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_20",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 2,
                "name" : "text_21",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "text_22",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 38,
                "name" : "text_24",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 43,
                "name" : "number_7",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "table_2",
                "row" : 109,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 10,
                "name" : "chart_7",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "text_25",
                "row" : 69,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 37,
                "name" : "text_23",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_2",
                "row" : 20,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(5, 16, 39)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "text_4",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "chart_9",
                "row" : 74,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_6",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 240)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "pillbox_2",
                "row" : 51,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "text_28",
                "row" : 49,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "text_29",
                "row" : 43,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "pillbox_3",
                "row" : 45,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "text_33",
                "row" : 35,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 17,
                "column" : 11,
                "name" : "text_14",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 36,
                "name" : "number_3",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 28,
                "name" : "number_6",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 6,
                "name" : "number_8",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 41,
                "name" : "link_9",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "link_10",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 20,
                "name" : "link_19",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 38,
                "name" : "link_20",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_2",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "listselector_4",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 25,
                "name" : "listselector_3",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 37,
                "name" : "listselector_5",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 11,
                "name" : "link_14",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 95, 178, 0.05)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 11,
                "column" : 0,
                "name" : "link_15",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 29,
                "name" : "link_16",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 42,
                "name" : "link_7",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 95, 178)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 45,
                "name" : "link_57",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              }
            ]
          },
          {
            "label" : "CH_H_ACT_SIMUL",
            "name" : "8def404a-bab0-4779-9495-e2d2c0c3ede3",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_4",
                "row" : 28,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_5",
                "row" : 103,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(240, 244, 247)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_3",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_7",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_8",
                "row" : 104,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 21,
                "column" : 3,
                "name" : "text_9",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "container_7",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "container_8",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "container_9",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_2",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "chart_2",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "chart_4",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_20",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 2,
                "name" : "text_21",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "text_22",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 38,
                "name" : "text_24",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 43,
                "name" : "number_7",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "table_2",
                "row" : 109,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 10,
                "name" : "chart_7",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "text_25",
                "row" : 69,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 37,
                "name" : "text_23",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 45,
                "name" : "link_1",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_2",
                "row" : 20,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(5, 16, 39)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "text_4",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "chart_9",
                "row" : 74,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_6",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 240)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "pillbox_2",
                "row" : 51,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "text_28",
                "row" : 49,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "text_29",
                "row" : 43,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "pillbox_3",
                "row" : 45,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "text_33",
                "row" : 35,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 17,
                "column" : 11,
                "name" : "text_14",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 36,
                "name" : "number_3",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 28,
                "name" : "number_6",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 42,
                "name" : "link_8",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 95, 178)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 4,
                "column" : 6,
                "name" : "number_8",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "link_28",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 3,
                "column" : 41,
                "name" : "link_29",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 37,
                "column" : 11,
                "name" : "chart_12",
                "row" : 34,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_2",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "listselector_4",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 25,
                "name" : "listselector_3",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 37,
                "name" : "listselector_5",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 0,
                "name" : "link_42",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 11,
                "name" : "link_43",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 95, 178, 0.05)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 20,
                "name" : "link_44",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 29,
                "name" : "link_45",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 38,
                "name" : "link_46",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "CP_H_ALL",
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_4",
                "row" : 28,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_5",
                "row" : 103,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(240, 244, 247)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_3",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_7",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_8",
                "row" : 104,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 21,
                "column" : 3,
                "name" : "text_9",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "container_7",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "container_8",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "container_9",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_2",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_20",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "text_22",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "text_25",
                "row" : 69,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 37,
                "name" : "text_23",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_2",
                "row" : 20,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(5, 16, 39)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_6",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 240)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 6,
                "name" : "number_12",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 38,
                "name" : "text_35",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 2,
                "name" : "text_36",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "chart_19",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 29,
                "name" : "link_13",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 0,
                "name" : "link_47",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 11,
                "name" : "link_48",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 20,
                "name" : "link_49",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 95, 178, 0.05)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 11,
                "column" : 38,
                "name" : "link_50",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 10,
                "name" : "chart_10",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "link_51",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 3,
                "column" : 41,
                "name" : "link_52",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_6",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 25,
                "name" : "listselector_7",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "listselector_8",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "chart_22",
                "row" : 34,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 43,
                "name" : "number_16",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "chart_23",
                "row" : 74,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 45,
                "name" : "link_53",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 42,
                "name" : "link_54",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 95, 178)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "chart_11",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "chart_25",
                "row" : 109,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "text_30",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "CP_ETP_ALL",
            "name" : "d8e11d09-96d5-435c-95f5-5ace2f9eb220",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_4",
                "row" : 28,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_5",
                "row" : 103,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(240, 244, 247)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_3",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_7",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_8",
                "row" : 104,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 21,
                "column" : 3,
                "name" : "text_9",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "container_7",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "container_8",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "container_9",
                "row" : 69,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_2",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_20",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "text_22",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "text_25",
                "row" : 69,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 37,
                "name" : "text_23",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_2",
                "row" : 20,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(5, 16, 39)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_6",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 240)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 0,
                "name" : "link_35",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 11,
                "name" : "link_36",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 20,
                "name" : "link_37",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 95, 178, 0.05)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 11,
                "column" : 38,
                "name" : "link_39",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 10,
                "name" : "chart_13",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 43,
                "name" : "number_15",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "chart_17",
                "row" : 34,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 41,
                "name" : "link_40",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "link_41",
                "row" : 30,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 5,
                "column" : 38,
                "name" : "text_35",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 2,
                "name" : "text_36",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "chart_18",
                "row" : 74,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "listselector_8",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_6",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 25,
                "name" : "listselector_7",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 6,
                "name" : "number_17",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "chart_24",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 45,
                "name" : "link_55",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 95, 178)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 42,
                "name" : "link_56",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "chart_26",
                "row" : 74,
                "rowspan" : 25,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 15,
                "column" : 33,
                "name" : "text_13",
                "row" : 69,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "chart_27",
                "row" : 108,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 29,
                "name" : "link_62",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "TAUX_CHARGE",
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_4",
                "row" : 28,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(240, 244, 247)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_3",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 21,
                "column" : 3,
                "name" : "text_9",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_2",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_20",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 37,
                "name" : "text_23",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_2",
                "row" : 20,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(5, 16, 39)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_6",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 240)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 0,
                "name" : "link_35",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 11,
                "name" : "link_36",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 29,
                "name" : "link_38",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 95, 178, 0.05)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 11,
                "column" : 38,
                "name" : "link_39",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "listselector_8",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_6",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 25,
                "name" : "listselector_7",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 20,
                "name" : "link_63",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 45,
                "name" : "link_64",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 42,
                "name" : "link_65",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 95, 178)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 4,
                "column" : 19,
                "name" : "text_32",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 23,
                "name" : "number_2",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 38,
                "name" : "text_34",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 43,
                "name" : "number_9",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "chart_21",
                "row" : 34,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 2,
                "name" : "text_46",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 6,
                "name" : "number_10",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_14",
                "row" : 63,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_47",
                "row" : 64,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "table_3",
                "row" : 68,
                "rowspan" : 32,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              }
            ]
          },
          {
            "label" : "PLAN2",
            "name" : "3db0fdf1-f83a-4b58-992c-2710a9382ddb",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_4",
                "row" : 20,
                "rowspan" : 55,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_5",
                "row" : 75,
                "rowspan" : 81,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(240, 244, 247)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_3",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 21,
                "column" : 3,
                "name" : "text_9",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_2",
                "row" : 5,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 17,
                "column" : 1,
                "name" : "text_26",
                "row" : 22,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 1,
                "name" : "text_27",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_31",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_37",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 17,
                "name" : "text_38",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 33,
                "name" : "text_39",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 34,
                "name" : "text_40",
                "row" : 23,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 34,
                "name" : "text_41",
                "row" : 26,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_13",
                "row" : 23,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_14",
                "row" : 26,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 8,
                "name" : "pillbox_5",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 24,
                "name" : "pillbox_6",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 40,
                "name" : "pillbox_7",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 2,
                "name" : "text_43",
                "row" : 70,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 18,
                "name" : "text_44",
                "row" : 70,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 34,
                "name" : "text_45",
                "row" : 70,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 49,
                "column" : 0,
                "name" : "container_6",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 240)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 38,
                "name" : "link_5",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 95, 178, 0.05)",
                  "borderColor" : "rgb(0, 95, 178)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 29,
                "name" : "link_17",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 20,
                "name" : "link_18",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 11,
                "name" : "link_58",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 0,
                "name" : "link_59",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 37,
                "name" : "text_23",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 42,
                "name" : "link_60",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 95, 178)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 45,
                "name" : "link_61",
                "row" : 7,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "listselector_10",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_11",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "text_48",
                "row" : 76,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "chart_20",
                "row" : 29,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "table_4",
                "row" : 81,
                "rowspan" : 54,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 22,
                "column" : 26,
                "name" : "table_5",
                "row" : 81,
                "rowspan" : 54,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 22,
                "column" : 26,
                "name" : "text_49",
                "row" : 76,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "rgb(228, 234, 240)",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "rgb(240, 244, 247)"
        },
        "version" : 1.0
      },
      {
        "maxWidth" : 375,
        "name" : "iphone",
        "numColumns" : 24,
        "pages" : [
          {
            "label" : "Effectiveness",
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 24,
                "column" : 0,
                "name" : "filterpanel_1",
                "row" : 1,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(242, 246, 250, 0)",
                  "borderColor" : "rgba(242, 246, 250, 0)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 24,
                "column" : 0,
                "name" : "container_4",
                "row" : 7,
                "rowspan" : 83,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 0,
                "name" : "text_10",
                "row" : 12,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 24,
                "column" : 0,
                "name" : "text_11",
                "row" : 19,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(9, 26, 62, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 24,
                "column" : 0,
                "name" : "text_12",
                "row" : 27,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(9, 26, 62, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 10,
                "column" : 0,
                "name" : "number_4",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 10,
                "column" : 0,
                "name" : "number_1",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(9, 26, 62, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 10,
                "column" : 0,
                "name" : "number_5",
                "row" : 23,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(9, 26, 62, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 24,
                "column" : 0,
                "name" : "text_6",
                "row" : 31,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "text_5",
                "row" : 57,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "listselector_1",
                "row" : 59,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "text_7",
                "row" : 91,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "container_7",
                "row" : 95,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "container_8",
                "row" : 127,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "container_9",
                "row" : 159,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "container_5",
                "row" : 191,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 21,
                "column" : 2,
                "name" : "text_8",
                "row" : 192,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "chart_1",
                "row" : 36,
                "rowspan" : 18,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 0,
                "name" : "text_1",
                "row" : 33,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 24,
                "column" : 0,
                "name" : "text_2",
                "row" : 55,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0.16)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "text_3",
                "row" : 95,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 16,
                "column" : 1,
                "name" : "text_15",
                "row" : 98,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "chart_3",
                "row" : 133,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left",
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "text_16",
                "row" : 127,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 16,
                "column" : 1,
                "name" : "text_17",
                "row" : 130,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "chart_6",
                "row" : 165,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left",
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "text_18",
                "row" : 159,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 16,
                "column" : 1,
                "name" : "text_19",
                "row" : 162,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(9, 26, 62, 0)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 21,
                "column" : 2,
                "name" : "table_1",
                "row" : 197,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 11,
                "column" : 11,
                "name" : "chart_15",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 11,
                "name" : "chart_14",
                "row" : 15,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 11,
                "name" : "chart_16",
                "row" : 23,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [
          "maxWidth(599)"
        ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "rgb(228, 234, 240)",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "rgb(240, 244, 247)"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "Capacite_Date_Week_a_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "CapaciteMoyenne",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite",
                "A"
              ],
              [
                "unique",
                "Date_Week",
                "B"
              ],
              [
                "count",
                "*",
                "MoyenneCapacite"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Capacite"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "unique",
                      "Date_Week"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "A/B"
                },
                "name" : "MoyenneCapacite",
                "header" : "MoyenneCapacite"
              }
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [
              "MoyenneCapacite"
            ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "Capacite_Date_Week_a_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite",
                "A"
              ],
              [
                "unique",
                "Date_Week",
                "B"
              ],
              [
                "count",
                "*",
                "Moyenne_Capacite"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Capacite"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "unique",
                      "Date_Week"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "A/B"
                },
                "name" : "Moyenne_Capacite",
                "header" : "Moyenne_Capacite"
              }
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "ChargeParSecteur" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "ChargeParSecteur",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q = group q by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q = foreach q generate 'Secteur', 'Date_Week' as 'Date_Week', 'Profil', 'Activite', sum('Charge') as 'Charge';  q = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"] then sum('Charge') else 0 end as 'Charge_Activites', case when 'Activite' == \"ADMINISTRATIF\" then sum('Charge') else 0 end as 'Charge_Admin', case when 'Activite' == \"TRAJET\" then sum('Charge') else 0 end as 'Charge_Trajet';  q = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Secteur', 'Date_Week', 'Profil', 'Activite', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  q_Activite = filter result by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q_Activite = foreach q_Activite generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charge_Activites') as 'Charges_Totales';  q_Admin = foreach result generate 'Secteur', 'Date_Week', \"AUTRES\" as 'Profil', \"ADMINISTRATIF\" as 'Activite', sum('Charge_Admin') as 'Charges_Totales';  q_Admin = group q_Admin by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q_Admin = foreach q_Admin generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  q_Trajet = foreach result generate 'Secteur', 'Date_Week', \"AUTRES\" as 'Profil', \"TRAJET\" as 'Activite', sum('Charge_Trajet') as 'Charges_Totales';  q_Trajet = group q_Trajet by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q_Trajet = foreach q_Trajet generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = union q_Activite, q_Admin, q_Trajet;  final = group final by ('Secteur', 'Date_Week', 'Profil', 'Activite');  final = foreach final generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = group final by 'Secteur';  final = foreach final generate 'Secteur', sum('Charges_Totales') as 'Charges_Totales';  final = order final by 'Charges_Totales' desc;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Secteur_Profil_Date__2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Secteur_Profil_Date__2",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ],
            "groups" : [
              "Secteur",
              "Profil",
              "Date_Month"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "highColor" : "#009DDF",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "lowColor" : "#E2F4FC",
            "visualizationType" : "matrix",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "columnMap" : {
              "r" : [
                "sum_Capacite"
              ],
              "color" : [
                "sum_Capacite"
              ],
              "x" : [
                "Date_Month"
              ],
              "y" : [
                "Secteur",
                "Profil"
              ]
            },
            "showActionMenu" : true,
            "x" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "y" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Secteur_Profil_Activ_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Secteur_Profil_Activ_1",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.INTELLIGENT_MACRO_PLANNING_tp.FullyQualifiedName}\";\nresult = group q by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nresult = foreach result generate q.'Secteur' as 'Secteur', q.'Date_Week' as 'Date_Week', q.'Profil' as 'Profil', q.'Activite' as 'Activite', sum(q.'Prediction_Charge') as 'Pr√©diction';\nresult = order result by ('Secteur' asc, 'Date_Week' asc, 'Profil' asc, 'Activite' asc);",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "pivoted" : false,
            "showActionMenu" : false,
            "totals" : true,
            "verticalPadding" : 4
          },
          "type" : "table"
        }
      },
      "Secteur_Profil_Date__1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Secteur_Profil_Date__1",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\nresult = group q by ('Secteur', 'Date_Year', 'Date_Week', 'Activite');\nresult = foreach result generate q.'Secteur' as 'Secteur', q.'Date_Year' + \"~~~\" + q.'Date_Week' as 'Date_Year~~~Date_Week', q.'Activite' as 'Activite', sum(q.'Charge') as 'Charge';\nresult = group result by ('Secteur', 'Date_Year~~~Date_Week', 'Activite');\nresult = foreach result generate 'Secteur', 'Date_Year~~~Date_Week', 'Activite', first('Charge') as 'Charge', sum('Charge')/sum(sum('Charge')) over ([..] partition by ('Secteur', 'Date_Year~~~Date_Week')) as 'Repartition';\nresult = order result by ('Secteur' asc, 'Date_Year~~~Date_Week' asc, 'Activite' asc);",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "mode" : "fittocontainer",
            "numberOfLines" : 1,
            "pivoted" : false,
            "showActionMenu" : true,
            "subtotals" : true,
            "totals" : false,
            "verticalPadding" : 4
          },
          "type" : "table"
        }
      },
      "Profil_4" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite_ETP"
              ]
            ],
            "groups" : [
              "Profil"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "centerText" : "",
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "showMeasureTitle" : true,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "pie",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "inner" : 60,
            "columnMap" : {
              "trellis" : [ ],
              "dimension" : [
                "Profil"
              ],
              "plots" : [
                "sum_Capacite_ETP"
              ]
            },
            "showActionMenu" : true,
            "centerValueType" : "number",
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "CapaciteTotale_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "CapaciteTotale",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "sum_Capacite"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "ListAnneePlan" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListAnneePlan",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Ann_e"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "Profil_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "CapaciteParProfil",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ],
            "groups" : [
              "Profil"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "centerText" : "",
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "showMeasureTitle" : true,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "pie",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "inner" : 60,
            "columnMap" : {
              "trellis" : [ ],
              "dimension" : [
                "Profil"
              ],
              "plots" : [
                "sum_Capacite"
              ]
            },
            "showActionMenu" : true,
            "centerValueType" : "number",
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "PlanParProfilAggr" : {
        "broadcastFacet" : true,
        "groups" : [
          "Profil"
        ],
        "label" : "PlanParProfilAggr",
        "numbers" : [
          "ChargeAllouee"
        ],
        "query" : "\n-- On r√©cup√®re les charges pour cette ann√©e par profil\n--\ncharge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n\ncharge = filter charge by 'Profil' in [\"RESEAU\", \"STATION\"];\ncharge = group charge by ('Secteur', 'Date_Week', 'Profil');\ncharge = foreach charge generate 'Secteur', 'Date_Week', 'Profil', sum('Charge') as 'Charge';\n\n\n-- On r√©cup√®re les capacit√©s par profil de cette ann√©e pour les profils RESEAU et STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n\ncapacite = filter capacite by 'Profil' != \"POLYVALENT\";\ncapacite = group capacite by ('Secteur', 'Date_Week', 'Profil');\ncapacite = foreach capacite generate 'Secteur', 'Date_Week', 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec POLYVALENT.  Si charge <= capacite, on prend charge\n--\ncompare1 = group charge by ('Secteur', 'Date_Week', 'Profil') left, capacite by ('Secteur', 'Date_Week', 'Profil');\ncompare1 = foreach compare1 generate charge.'Secteur' as 'Secteur', charge.'Date_Week' as 'Date_Week', charge.'Profil' as 'Profil', sum(charge.'Charge') as 'ChargePrevue', sum(capacite.'Capacite') as 'CapaciteDisponible';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedPolyvalent\" else \"OK\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK : celles qu'on a pu allouer √† la premi√®re √©tape.  \n--\nplan1 = filter compare1 by 'Statut' == \"OK\";\nplan1 = foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n\n\n-- Apr√®s la premi√®re √©tape, on met de c√¥t√© les capacit√©s disponibles pour les allouer pour d'autres activit√©s\n--\n--dispoApresPlan1 =  foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n-- On pr√©pare la deuxi√®me √©tape : on filtre et on r√©cup√©re toutes celles qui ne pouvaient pas √™tre allou√©es compl√©tement √† la premi√®re √©tape\n--\ncomplement = filter compare1 by 'Statut' == \"NeedPolyvalent\";\ncomplement = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Deficit', 'Statut';\n\n\n-- On utilise la capacit√© disponible pour chaque profil\n--\nplan2_Partial = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', \"Partial\" as 'Statut';\n\n\n\n-- On essaie de compl√®ter avec du \"POLYVALENT\" si disponible\n--\nplan2_ToFill = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', sum('Deficit') as 'ChargePrevue', \"ToFill\" as 'Statut';\nplan2_ToFill = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2_ToFill = foreach plan2_ToFill generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('ChargePrevue') as 'ChargePrevue';\n\n\n\n-- On r√©cup√®re les capacit√©s polyvalentes pour compl√®ter\n--\ncapacite2 = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n\ncapacite2 = filter capacite2 by 'Profil' == \"POLYVALENT\";\ncapacite2 = group capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncapacite2 = foreach capacite2 generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec de l'INTERIM.  Si charge <= capacite, on prend charge\n--\ncompare2 = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil') left, capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncompare2 = foreach compare2 generate plan2_ToFill.'Secteur' as 'Secteur', plan2_ToFill.'Date_Week' as 'Date_Week', plan2_ToFill.'Profil' as 'Profil', sum(plan2_ToFill.'ChargePrevue') as 'ChargePrevue', sum(capacite2.'Capacite') as 'CapaciteDisponible';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedInterim\" else \"Filled\" end as 'Statut';\n\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK : celles partiellement allou√©es √† la premi√®re passe et compl√®t√©es √† la deuxi√®me avec POLYVALENT\n--\nplan2_Filled = filter compare2 by 'Statut' == \"Filled\";\nplan2_Filled = foreach plan2_Filled generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n--\nplan2_Polyvalent = filter compare2 by 'Statut' == \"NeedInterim\";\nplan2_Polyvalent = foreach plan2_Polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', 'Statut';\n\n\n\n-- On consolide les charges planifi√©es √† la deuxi√®me passe : celles qui sont compl√®t√©es avec du POLYVALENT\n--\nplan2 = union plan2_Partial, plan2_Filled, plan2_Polyvalent;\nplan2 = group plan2 by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2 = foreach plan2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan', 'Statut' ;\n\n\n\n\n\n--\n-- On filtre et on r√©cup√©re les charges qui n√©cessitent de l'INTERIM\n--\n--plan2_Interim = filter compare2 by 'Statut' == \"NeedInterim\";\n--plan2_Interim = foreach plan2_Interim generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde')*-1 as 'DisponibleApresPlan',  'Statut';\n\n-- On alloue de l'INTERIM l√† o√π c'est n√©cessaire\ninterim = filter compare2 by 'Statut' == \"NeedInterim\";\ninterim = foreach interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', sum('Solde') as 'ChargeAllouee', 'Statut';\n\n\n\n\n-- On fait le total des charges allou√©es auxquelles on additionne le TRAJET et l'ADMIN\n--\nautres = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n\n autres = filter autres by 'Profil' == \"AUTRES\";\nautres = group autres by ('Secteur', 'Date_Week', 'Profil');\nautres_Positif = foreach autres generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Charge') as 'ChargePrevue', sum('Charge') as 'CapaciteDisponible', sum('Charge') as 'ChargeAllouee', 0 as 'DisponibleApresPlan',  \"OK\" as 'Statut';\nautres_Negatif = foreach autres generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', 0 as 'ChargePrevue', 0 as 'CapaciteDisponible', 0 as 'ChargeAllouee', sum('Charge')*-1 as 'DisponibleApresPlan',  \"OK\" as 'Statut';\n\n\nplan = union plan1, plan2, autres_Positif, autres_Negatif;\nplan = group plan by ('Secteur', 'Date_Week', 'Profil');\nplan = foreach plan generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', case when sum('DisponibleApresPlan') < 0 then abs(sum('DisponibleApresPlan')) else 0 end as 'ChargeInterim', case when sum('DisponibleApresPlan') > 0 then abs(sum('DisponibleApresPlan')) end as 'DisponibleApresPlan';\n\n\n\nplan_Core = foreach plan generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan')as 'DisponibleApresPlan';\n\nplan_Interim = filter plan by 'ChargeInterim' > 0;\nplan_Interim = foreach plan_Interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', 0 as 'ChargePrevue', 0 as 'CapaciteDisponible', sum('ChargeInterim') as 'ChargeAllouee', 0 as 'DisponibleApresPlan';\n\nplan_Next = union plan_Core, plan_Interim;\nplan_Next = group plan_Next by ('Secteur', 'Date_Week', 'Profil');\nplan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\nplan_Next = group plan_Next by 'Profil';\nplan_Next = foreach plan_Next generate 'Profil' as 'Profil', sum('ChargeAllouee') as 'ChargeAllouee'; ",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "multi",
        "strings" : [
          "Profil"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "multi",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "stackvbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : false,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "static_PR" : {
        "broadcastFacet" : true,
        "columns" : {
          "Texte2" : {
            "type" : "string"
          },
          "Affichage" : {
            "type" : "string"
          }
        },
        "label" : "static_PR",
        "selectMode" : "single",
        "type" : "staticflex",
        "values" : [
          {
            "Affichage" : "1",
            "Value" : "1"
          },
          {
            "Affichage" : "2",
            "Value" : "2"
          },
          {
            "Affichage" : "3",
            "Value" : "3"
          },
          {
            "Affichage" : "4",
            "Value" : "4"
          }
        ]
      },
      "ChargeMoyenne_ETP" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "ChargeMoyenne_ETP",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q1 = filter q by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q1 = group q1 by ('Date_Year', 'Date_Week');  q1 = foreach q1 generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  q_admin = filter q by 'Activite' == \"ADMINISTRATIF\";  q_admin = group q_admin by ('Date_Year', 'Date_Week');  q_admin = foreach q_admin generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  q_trajet = filter q by 'Activite' == \"TRAJET\";  q_trajet = group q_trajet by ('Date_Year', 'Date_Week');  q_trajet = foreach q_trajet generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  result = group q1 by 'Date_Year~~~Date_Week', q_admin by 'Date_Year~~~Date_Week', q_trajet by 'Date_Year~~~Date_Week';  result = foreach result generate q1.'Date_Year~~~Date_Week' as 'Date_Year~~~Date_Week', sum(q1.'Charge_ETP') as 'Charge_Activites', sum(q_admin.'Charge_ETP') as 'Charge_Admin', sum(q_trajet.'Charge_ETP') as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', 'Taux_Trajet' as 'Taux_Trajet', 'Taux_Admin' as 'Taux_Admin', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet', sum('Charge_Activites') + sum('Charge_Admin') + sum('Charge_Trajet') as 'Charges_Totales';  result = group result by all;  result = foreach result generate unique('Date_Year~~~Date_Week') as 'Counter', sum('Charges_Totales') as 'Charges_Totales';  result = foreach result generate sum('Charges_Totales')/'Counter' as 'Charge_Moyenne';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "ChargeParActivite" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "ChargeParActivite",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q = group q by ('Date_Week','Activite');  q = foreach q generate 'Date_Week' as 'Date_Week', 'Activite', sum('Charge') as 'Charge';  q = foreach q generate 'Date_Week', 'Activite', case when 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"] then sum('Charge') else 0 end as 'Charge_Activites', case when 'Activite' == \"ADMINISTRATIF\" then sum('Charge') else 0 end as 'Charge_Admin', case when 'Activite' == \"TRAJET\" then sum('Charge') else 0 end as 'Charge_Trajet';  q = foreach q generate 'Date_Week', 'Activite', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach q generate 'Date_Week', 'Activite', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Date_Week', 'Activite', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  q_Activite = filter result by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q_Activite = foreach q_Activite generate 'Date_Week', 'Activite', sum('Charge_Activites') as 'Charges_Totales';  q_Admin = foreach result generate 'Date_Week', \"ADMINISTRATIF\" as 'Activite', sum('Charge_Admin') as 'Charges_Totales';  q_Admin = group q_Admin by ('Date_Week', 'Activite');  q_Admin = foreach q_Admin generate 'Date_Week', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  q_Trajet = foreach result generate 'Date_Week', \"TRAJET\" as 'Activite', sum('Charge_Trajet') as 'Charges_Totales';  q_Trajet = group q_Trajet by ('Date_Week', 'Activite');  q_Trajet = foreach q_Trajet generate 'Date_Week', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = union q_Activite, q_Admin, q_Trajet;  final = group final by 'Activite';  final = foreach final generate 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = order final by 'Charges_Totales' desc;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "treemap",
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "TauxMoyenTrajet" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "TauxMoyenTrajet ",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Charge",
                "Total"
              ],
              [
                "sum",
                "Charge",
                "Trajet"
              ],
              [
                "count",
                "*",
                "VarDefTrajet"
              ],
              [
                "count",
                "*",
                "D"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Charge"
                    ]
                  ],
                  "filters" : [
                    [
                      "Profil",
                      [
                        "RESEAU",
                        "STATION"
                      ],
                      "in"
                    ]
                  ]
                },
                "name" : "Total",
                "header" : "Total"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Charge"
                    ]
                  ],
                  "filters" : [
                    [
                      "Activite",
                      [
                        "TRAJET"
                      ],
                      "in"
                    ]
                  ]
                },
                "name" : "Trajet",
                "header" : "Trajet"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "'Trajet' / 'Total'"
                },
                "name" : "VarDefTrajet",
                "header" : "VarDefTrajet"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ]
                }
              }
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "ChargeParSecteur",
            "EvolChargeParMois",
            "EvolutionCharge"
          ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "ListProfilCP" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListProfilCP",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Profil"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "ChargeTotale_ETP" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "ChargeTotale_ETP",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\"; q1 = filter q by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q1 = group q1 by ('Date_Year', 'Date_Week');  q1 = foreach q1 generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  q_admin = filter q by 'Activite' == \"ADMINISTRATIF\";  q_admin = group q_admin by ('Date_Year', 'Date_Week');  q_admin = foreach q_admin generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  q_trajet = filter q by 'Activite' == \"TRAJET\";  q_trajet = group q_trajet by ('Date_Year', 'Date_Week');  q_trajet = foreach q_trajet generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  result = group q1 by 'Date_Year~~~Date_Week', q_admin by 'Date_Year~~~Date_Week', q_trajet by 'Date_Year~~~Date_Week';  result = foreach result generate q1.'Date_Year~~~Date_Week' as 'Date_Year~~~Date_Week', sum(q1.'Charge_ETP') as 'Charge_Activites', sum(q_admin.'Charge_ETP') as 'Charge_Admin', sum(q_trajet.'Charge_ETP') as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet', sum('Charge_Activites') + sum('Charge_Admin') + sum('Charge_Trajet') as 'Charges_Totales';  result = group result by all; result = foreach result generate sum('Charges_Totales') as 'Charges_Totales';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "sum_Charge"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "ListSecteurCP" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListSecteurCP",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Secteur"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "EvolChargeParMois" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "EvolChargeParMois",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q = group q by ('Secteur', 'Date_Month', 'Profil', 'Activite');  q = foreach q generate 'Secteur', 'Date_Month' as 'Date_Month', 'Profil', 'Activite', sum('Charge') as 'Charge';  q = foreach q generate 'Secteur', 'Date_Month', 'Profil', 'Activite', case when 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"] then sum('Charge') else 0 end as 'Charge_Activites', case when 'Activite' == \"ADMINISTRATIF\" then sum('Charge') else 0 end as 'Charge_Admin', case when 'Activite' == \"TRAJET\" then sum('Charge') else 0 end as 'Charge_Trajet';  q = foreach q generate 'Secteur', 'Date_Month', 'Profil', 'Activite', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach q generate 'Secteur', 'Date_Month', 'Profil', 'Activite', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Secteur', 'Date_Month', 'Profil', 'Activite', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  q_Activite = filter result by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q_Activite = foreach q_Activite generate 'Secteur', 'Date_Month', 'Profil', 'Activite', sum('Charge_Activites') as 'Charges_Totales';  q_Admin = foreach result generate 'Secteur', 'Date_Month', \"AUTRES\" as 'Profil', \"ADMINISTRATIF\" as 'Activite', sum('Charge_Admin') as 'Charges_Totales';  q_Admin = group q_Admin by ('Secteur', 'Date_Month', 'Profil', 'Activite');  q_Admin = foreach q_Admin generate 'Secteur', 'Date_Month', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  q_Trajet = foreach result generate 'Secteur', 'Date_Month', \"AUTRES\" as 'Profil', \"TRAJET\" as 'Activite', sum('Charge_Trajet') as 'Charges_Totales';  q_Trajet = group q_Trajet by ('Secteur', 'Date_Month', 'Profil', 'Activite');  q_Trajet = foreach q_Trajet generate 'Secteur', 'Date_Month', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = union q_Activite, q_Admin, q_Trajet;  final = group final by ('Secteur', 'Date_Month', 'Profil', 'Activite');  final = foreach final generate 'Secteur', 'Date_Month', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = group final by 'Date_Month';  final = foreach final generate 'Date_Month', sum('Charges_Totales') as 'Charges_Totales';  final = order final by 'Date_Month' asc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "EvolutionCharge",
            "EvolutionChargeParActivite"
          ]
        },
        "selectMode" : "multi",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "fit",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "vbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : false,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : false,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "EvolutionCharge" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "EvolutionCharge",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\nq = group q by ('Date_Week','Activite');\nq = foreach q generate 'Date_Week' as 'Date_Week', 'Activite', sum('Charge') as 'Charge';\nq = foreach q generate 'Date_Week', 'Activite', case when 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"] then sum('Charge') else 0 end as 'Charge_Activites', case when 'Activite' == \"ADMINISTRATIF\" then sum('Charge') else 0 end as 'Charge_Admin', case when 'Activite' == \"TRAJET\" then sum('Charge') else 0 end as 'Charge_Trajet';\nq = foreach q generate 'Date_Week', 'Activite', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';\nresult = foreach q generate 'Date_Week', 'Activite', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';\nresult = foreach result generate 'Date_Week', 'Activite', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';\nq_Activite = filter result by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];\nq_Activite = foreach q_Activite generate 'Date_Week', 'Activite', sum('Charge_Activites') as 'Charges_Totales';\nq_Admin = foreach result generate 'Date_Week', \"ADMINISTRATIF\" as 'Activite', sum('Charge_Admin') as 'Charges_Totales';\nq_Admin = group q_Admin by ('Date_Week', 'Activite');\nq_Admin = foreach q_Admin generate 'Date_Week', 'Activite', sum('Charges_Totales') as 'Charges_Totales';\nq_Trajet = foreach result generate 'Date_Week', \"TRAJET\" as 'Activite', sum('Charge_Trajet') as 'Charges_Totales';\nq_Trajet = group q_Trajet by ('Date_Week', 'Activite');\nq_Trajet = foreach q_Trajet generate 'Date_Week', 'Activite', sum('Charges_Totales') as 'Charges_Totales';\nfinal = union q_Activite, q_Admin, q_Trajet;\nfinal = group final by 'Date_Week';\nfinal = foreach final generate 'Date_Week', sum('Charges_Totales') as 'Charges_Totales';\nfinal = order final by 'Date_Week' asc;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "columnMap" : {
              "split" : [ ],
              "timeAxis" : [
                "Date_Week"
              ],
              "trellis" : [ ],
              "plots" : [
                "Charges_Totales"
              ]
            },
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "Val_Interim" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.VARIABLES_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Val_Interim",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Interim"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "sum_Interim"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "PlanParProfil" : {
        "broadcastFacet" : true,
        "groups" : [
          "Secteur",
          "Date_Week",
          "Profil"
        ],
        "label" : "PlanParProfil",
        "numbers" : [
          "ChargeAllouee"
        ],
        "query" : "\n-- On r√©cup√®re les charges pour cette ann√©e par profil\n--\ncharge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n\ncharge = filter charge by 'Profil' in [\"RESEAU\", \"STATION\"];\ncharge = group charge by ('Secteur', 'Date_Week', 'Profil');\ncharge = foreach charge generate 'Secteur', 'Date_Week', 'Profil', sum('Charge') as 'Charge';\n\n\n-- On r√©cup√®re les capacit√©s par profil de cette ann√©e pour les profils RESEAU et STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n\ncapacite = filter capacite by 'Profil' != \"POLYVALENT\";\ncapacite = group capacite by ('Secteur', 'Date_Week', 'Profil');\ncapacite = foreach capacite generate 'Secteur', 'Date_Week', 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec POLYVALENT.  Si charge <= capacite, on prend charge\n--\ncompare1 = group charge by ('Secteur', 'Date_Week', 'Profil') left, capacite by ('Secteur', 'Date_Week', 'Profil');\ncompare1 = foreach compare1 generate charge.'Secteur' as 'Secteur', charge.'Date_Week' as 'Date_Week', charge.'Profil' as 'Profil', sum(charge.'Charge') as 'ChargePrevue', sum(capacite.'Capacite') as 'CapaciteDisponible';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedPolyvalent\" else \"OK\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK : celles qu'on a pu allouer √† la premi√®re √©tape.  \n--\nplan1 = filter compare1 by 'Statut' == \"OK\";\nplan1 = foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n\n\n-- Apr√®s la premi√®re √©tape, on met de c√¥t√© les capacit√©s disponibles pour les allouer pour d'autres activit√©s\n--\n--dispoApresPlan1 =  foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n-- On pr√©pare la deuxi√®me √©tape : on filtre et on r√©cup√©re toutes celles qui ne pouvaient pas √™tre allou√©es compl√©tement √† la premi√®re √©tape\n--\ncomplement = filter compare1 by 'Statut' == \"NeedPolyvalent\";\ncomplement = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Deficit', 'Statut';\n\n\n-- On utilise la capacit√© disponible pour chaque profil\n--\nplan2_Partial = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', \"Partial\" as 'Statut';\n\n\n\n-- On essaie de compl√®ter avec du \"POLYVALENT\" si disponible\n--\nplan2_ToFill = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', sum('Deficit') as 'ChargePrevue', \"ToFill\" as 'Statut';\nplan2_ToFill = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2_ToFill = foreach plan2_ToFill generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('ChargePrevue') as 'ChargePrevue';\n\n\n\n-- On r√©cup√®re les capacit√©s polyvalentes pour compl√®ter\n--\ncapacite2 = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n\ncapacite2 = filter capacite2 by 'Profil' == \"POLYVALENT\";\ncapacite2 = group capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncapacite2 = foreach capacite2 generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec de l'INTERIM.  Si charge <= capacite, on prend charge\n--\ncompare2 = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil') left, capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncompare2 = foreach compare2 generate plan2_ToFill.'Secteur' as 'Secteur', plan2_ToFill.'Date_Week' as 'Date_Week', plan2_ToFill.'Profil' as 'Profil', sum(plan2_ToFill.'ChargePrevue') as 'ChargePrevue', sum(capacite2.'Capacite') as 'CapaciteDisponible';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedInterim\" else \"Filled\" end as 'Statut';\n\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK : celles partiellement allou√©es √† la premi√®re passe et compl√®t√©es √† la deuxi√®me avec POLYVALENT\n--\nplan2_Filled = filter compare2 by 'Statut' == \"Filled\";\nplan2_Filled = foreach plan2_Filled generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n--\nplan2_Polyvalent = filter compare2 by 'Statut' == \"NeedInterim\";\nplan2_Polyvalent = foreach plan2_Polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', 'Statut';\n\n\n\n-- On consolide les charges planifi√©es √† la deuxi√®me passe : celles qui sont compl√®t√©es avec du POLYVALENT\n--\nplan2 = union plan2_Partial, plan2_Filled, plan2_Polyvalent;\nplan2 = group plan2 by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2 = foreach plan2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan', 'Statut' ;\n\n\n\n\n\n--\n-- On filtre et on r√©cup√©re les charges qui n√©cessitent de l'INTERIM\n--\n--plan2_Interim = filter compare2 by 'Statut' == \"NeedInterim\";\n--plan2_Interim = foreach plan2_Interim generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde')*-1 as 'DisponibleApresPlan',  'Statut';\n\n-- On alloue de l'INTERIM l√† o√π c'est n√©cessaire\ninterim = filter compare2 by 'Statut' == \"NeedInterim\";\ninterim = foreach interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', sum('Solde') as 'ChargeAllouee', 'Statut';\n\n\n\n\n-- On fait le total des charges allou√©es auxquelles on additionne le TRAJET et l'ADMIN\n--\nautres = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n\n autres = filter autres by 'Profil' == \"AUTRES\";\nautres = group autres by ('Secteur', 'Date_Week', 'Profil');\nautres_Positif = foreach autres generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Charge') as 'ChargePrevue', sum('Charge') as 'CapaciteDisponible', sum('Charge') as 'ChargeAllouee', 0 as 'DisponibleApresPlan',  \"OK\" as 'Statut';\nautres_Negatif = foreach autres generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', 0 as 'ChargePrevue', 0 as 'CapaciteDisponible', 0 as 'ChargeAllouee', sum('Charge')*-1 as 'DisponibleApresPlan',  \"OK\" as 'Statut';\n\n\nplan = union plan1, plan2, autres_Positif, autres_Negatif;\nplan = group plan by ('Secteur', 'Date_Week', 'Profil');\nplan = foreach plan generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', case when sum('DisponibleApresPlan') < 0 then abs(sum('DisponibleApresPlan')) else 0 end as 'ChargeInterim', case when sum('DisponibleApresPlan') > 0 then abs(sum('DisponibleApresPlan')) end as 'DisponibleApresPlan';\n\n\n\nplan_Core = foreach plan generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan')as 'DisponibleApresPlan';\n\nplan_Interim = filter plan by 'ChargeInterim' > 0;\nplan_Interim = foreach plan_Interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', 0 as 'ChargePrevue', 0 as 'CapaciteDisponible', sum('ChargeInterim') as 'ChargeAllouee', 0 as 'DisponibleApresPlan';\n\nplan_Next = union plan_Core, plan_Interim;\nplan_Next = group plan_Next by ('Secteur', 'Date_Week', 'Profil');\nplan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\nplan_Next = group plan_Next by ('Secteur', 'Date_Week', 'Profil');\nplan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('ChargeAllouee') as 'ChargeAllouee'; ",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "multi",
        "strings" : [
          "Secteur",
          "Date_Week",
          "Profil"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "multi",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "stackvbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [
                "Profil"
              ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Week"
              ],
              "plots" : [
                "ChargeAllouee"
              ]
            },
            "showActionMenu" : false,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Date_Week_1_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "TauxChargeParSemaine",
        "numbers" : [ ],
        "query" : "charge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\nresult = group charge by ('Secteur', 'Date_Week') full, capacite by ('Secteur', 'Date_Week');\nresult = foreach result generate coalesce(charge.'Secteur', capacite.'Secteur') as 'Secteur', coalesce(charge.'Date_Week', capacite.'Date_Week') as 'Date_Week', sum(charge.'Charge') as 'Charge', sum(capacite.'Capacite') as 'Capacite';\nresult = group result by 'Date_Week';\nresult = foreach result generate 'Date_Week', sum('Capacite') - sum('Charge') as 'Diff';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "vbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "binValues" : false,
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            }
          },
          "type" : "chart"
        }
      },
      "Capacite_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "CapaciteTotale",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "sum_Capacite"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "TauxMoyenTrajet_ETP" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "TauxMoyenTrajet_ETP",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Charge_ETP",
                "Total"
              ],
              [
                "sum",
                "Charge_ETP",
                "Trajet"
              ],
              [
                "count",
                "*",
                "VarDefTrajet"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Charge_ETP"
                    ]
                  ],
                  "filters" : [
                    [
                      "Profil",
                      [
                        "RESEAU",
                        "STATION"
                      ],
                      "in"
                    ]
                  ]
                },
                "name" : "Total"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Charge_ETP"
                    ]
                  ],
                  "filters" : [
                    [
                      "Activite",
                      [
                        "TRAJET"
                      ],
                      "in"
                    ]
                  ]
                },
                "name" : "Trajet"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "'Trajet' / 'Total'"
                },
                "name" : "VarDefTrajet",
                "header" : "VarDefTrajet"
              }
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "Capacite_3" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "sum_Capacite"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Secteur_7" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite_ETP"
              ]
            ],
            "groups" : [
              "Secteur"
            ],
            "order" : [
              [
                "sum_Capacite_ETP",
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "Secteur"
              ],
              "plots" : [
                "sum_Capacite_ETP"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "static_3" : {
        "broadcastFacet" : true,
        "columns" : {
          "Texte2" : {
            "type" : "string"
          },
          "Affichage" : {
            "type" : "string"
          }
        },
        "label" : "static_PO",
        "selectMode" : "single",
        "type" : "staticflex",
        "values" : [
          {
            "Affichage" : "1",
            "Texte2" : "1"
          },
          {
            "Affichage" : "2",
            "Texte2" : "2"
          },
          {
            "Affichage" : "3",
            "Texte2" : "3"
          },
          {
            "Affichage" : "4",
            "Texte2" : "4"
          }
        ]
      },
      "PlanningProfil" : {
        "broadcastFacet" : true,
        "groups" : [
          "Activite"
        ],
        "label" : "PlanningProfil",
        "numbers" : [
          "ChargeAllouee"
        ],
        "query" : "charge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n--\n-- CHARGE STATION\n--\ncharge_electromecanique = filter charge by 'Activite' == \"ELECTROMECANIQUE\";\ncharge_electromecanique = group charge_electromecanique by ('Secteur', 'Date_Week');\ncharge_electromecanique = foreach charge_electromecanique generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_production = filter charge by 'Activite' == \"PRODUCTION / TRAITEMENT\";\ncharge_production = group charge_production by ('Secteur', 'Date_Week');\ncharge_production = foreach charge_production generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\n\n--\n-- CAPACITE STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n\ncapacite_station = filter capacite by 'Profil' == \"STATION\";\ncapacite_station = group capacite_station by ('Secteur', 'Date_Week');\ncapacite_station = foreach capacite_station generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- CAPACITE POLYVALENT\n--\ncapacite_polyvalent = filter capacite by 'Profil' == \"POLYVALENT\";\ncapacite_polyvalent = group capacite_polyvalent by ('Secteur', 'Date_Week');\ncapacite_polyvalent = foreach capacite_polyvalent generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- SIMULATION STATION\n--\n-- Activite Electromecanique\nelectromecanique = group charge_electromecanique by ('Secteur', 'Date_Week') left, capacite_station by ('Secteur', 'Date_Week'), capacite_polyvalent by ('Secteur', 'Date_Week');\nelectromecanique = foreach electromecanique generate charge_electromecanique.'Secteur' as 'Secteur', charge_electromecanique.'Date_Week' as 'Date_Week', sum(charge_electromecanique.'ChargePrevue') as 'ChargePrevue', sum(capacite_station.'Capacite') as 'CapaciteStation', sum(capacite_polyvalent.'Capacite') as 'CapacitePolyvalent';\n\nelectromecanique_station = foreach electromecanique generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as CapaciteStation, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteStation') > 0 and sum('ChargePrevue') < sum('CapaciteStation')) then sum('ChargePrevue') else sum('CapaciteStation') end as 'ChargeAlloueeStation', case when sum('CapaciteStation') > 0 then sum('CapaciteStation') - sum('ChargePrevue') else 0 end as 'CapaciteStationSolde';\n\nelectromecanique_station_polyvalent = foreach electromecanique_station generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as CapaciteStation, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', case when sum('CapaciteStationSolde') < 0 then 0 else sum('CapaciteStationSolde') end as 'CapaciteStationSolde', case when sum('CapaciteStationSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteStationSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteStationSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteStationSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nelectromecanique_station_interim = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteStationSolde') as 'CapaciteStationSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeStation') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_station_solde_electromecanique = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteStationSolde') > 0 then sum('CapaciteStationSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_electromecanique = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite PRODUCTION / TRAITEMENT\n--\nproduction = group charge_production by ('Secteur', 'Date_Week') left, capacite_station_solde_electromecanique by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_electromecanique by ('Secteur', 'Date_Week');\nproduction = foreach production generate charge_production.'Secteur' as 'Secteur', charge_production.'Date_Week' as 'Date_Week', sum(charge_production.'ChargePrevue') as 'ChargePrevue', sum(capacite_station_solde_electromecanique.'Capacite') as 'CapaciteStation', sum(capacite_polyvalent_solde_electromecanique.'Capacite') as 'CapacitePolyvalent';\n\nproduction_station = foreach production generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', case when (sum('CapaciteStation') > 0 and sum('ChargePrevue') <= sum('CapaciteStation')) then sum('ChargePrevue') else sum('CapaciteStation') end as 'ChargeAlloueeStation', sum('CapaciteStation') - sum('ChargePrevue') as 'CapaciteStationSolde';\n\nproduction_station_polyvalent = foreach production_station generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', case when sum('CapaciteStationSolde') < 0 then 0 else sum('CapaciteStationSolde') end as 'CapaciteStationSolde', case when sum('CapaciteStationSolde') < 0 and abs(sum('CapaciteStationSolde')) <= sum('CapacitePolyvalent') then abs(sum('CapaciteStationSolde')) else sum('CapacitePolyvalent') end as 'ChargeAlloueePolyvalent', case when sum('CapaciteStationSolde') < 0 and abs(sum('CapaciteStationSolde')) <= sum('CapacitePolyvalent') then sum('CapacitePolyvalent') - abs(sum('CapaciteStationSolde')) else 0 end as 'CapacitePolyvalentSolde';\n\nproduction_station_interim = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteStationSolde') as 'CapaciteStationSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeStation') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_station_solde_production = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteStationSolde') > 0 then sum('CapaciteStationSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_production = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- PLAN STATION\n--\nplan_electromecanique_station = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', \"STATION\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueeStation') as 'ChargeAllouee';\nplan_electromecanique_polyvalent = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_electromecanique_interim = foreach electromecanique_station_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_electromecanique = union plan_electromecanique_station, plan_electromecanique_polyvalent, plan_electromecanique_interim;\nplan_electromecanique = group plan_electromecanique by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_electromecanique = foreach plan_electromecanique generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_production_station = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', \"STATION\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueeStation') as 'ChargeAllouee';\nplan_production_polyvalent = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_production_interim = foreach production_station_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_production = union plan_production_station, plan_production_polyvalent, plan_production_interim;\nplan_production = group plan_production by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_production = foreach plan_production generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_IP.selection, 0, \"Value\").asString()}}, 0) as 'SLA_IP', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_production = foreach plan_production generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'SLA_IP' == 0 then sum('ChargeAllouee') else sum('ChargeAllouee') * (1-('SLA_IP'/100)) end as 'ChargeAllouee';\n\nplan_station = union plan_electromecanique, plan_production;\nplan_station = group plan_station by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_station = foreach plan_station generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\n-- \n-- CHARGE RESEAU\n--\ncharge_clientele = filter charge by 'Activite' == \"CLIENTELE\";\ncharge_clientele = group charge_clientele by ('Secteur', 'Date_Week');\ncharge_clientele = foreach charge_clientele generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_distribution = filter charge by 'Activite' == \"DISTRIBUTION / COLLECTE\";\ncharge_distribution = group charge_distribution by ('Secteur', 'Date_Week');\ncharge_distribution = foreach charge_distribution generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_travaux = filter charge by 'Activite' == \"TRAVAUX FACTURABLES\";\ncharge_travaux = group charge_travaux by ('Secteur', 'Date_Week');\ncharge_travaux = foreach charge_travaux generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_releve = filter charge by 'Activite' == \"RELEVE COMPTEURS\";\ncharge_releve = group charge_releve by ('Secteur', 'Date_Week');\ncharge_releve = foreach charge_releve generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\n--\n-- CAPACITE RESEAU\n--\ncapacite_reseau = filter capacite by 'Profil' == \"RESEAU\";\ncapacite_reseau = group capacite_reseau by ('Secteur', 'Date_Week');\ncapacite_reseau = foreach capacite_reseau generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- Activite CLIENTELE\n--\nclientele = group charge_clientele by ('Secteur', 'Date_Week') left, capacite_reseau by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_production by ('Secteur', 'Date_Week');\nclientele = foreach clientele generate charge_clientele.'Secteur' as 'Secteur', charge_clientele.'Date_Week' as 'Date_Week', sum(charge_clientele.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_production.'Capacite') as 'CapacitePolyvalent';\n\nclientele_reseau = foreach clientele generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\nclientele_reseau_polyvalent = foreach clientele_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nclientele_reseau_interim = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_clientele = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_clientele = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite DISTRIBUTION\n--\ndistribution = group charge_distribution by ('Secteur', 'Date_Week') left, capacite_reseau_solde_clientele by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_clientele by ('Secteur', 'Date_Week');\ndistribution = foreach distribution generate charge_distribution.'Secteur' as 'Secteur', charge_distribution.'Date_Week' as 'Date_Week', sum(charge_distribution.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_clientele.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_clientele.'Capacite') as 'CapacitePolyvalent';\n\ndistribution_reseau = foreach distribution generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\ndistribution_reseau_polyvalent = foreach distribution_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\ndistribution_reseau_interim = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_distribution = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_distribution = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite RELEVE COMPTEURS\n--\nreleve = group charge_releve by ('Secteur', 'Date_Week') left, capacite_reseau_solde_distribution by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_distribution by ('Secteur', 'Date_Week');\nreleve = foreach releve generate charge_releve.'Secteur' as 'Secteur', charge_releve.'Date_Week' as 'Date_Week', sum(charge_releve.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_distribution.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_distribution.'Capacite') as 'CapacitePolyvalent';\n\nreleve_reseau = foreach releve generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\nreleve_reseau_polyvalent = foreach releve_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nreleve_reseau_interim = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_releve = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_releve = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite TRAVAUX\n--\ntravaux = group charge_travaux by ('Secteur', 'Date_Week') left, capacite_reseau_solde_releve by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_releve by ('Secteur', 'Date_Week');\ntravaux = foreach travaux generate charge_travaux.'Secteur' as 'Secteur', charge_travaux.'Date_Week' as 'Date_Week', sum(charge_travaux.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_releve.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_releve.'Capacite') as 'CapacitePolyvalent';\n\ntravaux_reseau = foreach travaux generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\ntravaux_reseau_polyvalent = foreach travaux_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\ntravaux_reseau_interim = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_travaux = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_travaux = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- PLAN RESEAU\n--\nplan_clientele_reseau = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_clientele_polyvalent = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_clientele_interim = foreach clientele_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_clientele = union plan_clientele_reseau, plan_clientele_polyvalent, plan_clientele_interim;\nplan_clientele = group plan_clientele by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_clientele = foreach plan_clientele generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_distribution_reseau = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_distribution_polyvalent = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_distribution_interim = foreach distribution_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_distribution = union plan_distribution_reseau, plan_distribution_polyvalent, plan_distribution_interim;\nplan_distribution = group plan_distribution by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_distribution = foreach plan_distribution generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_releve_reseau = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_releve_polyvalent = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_releve_interim = foreach releve_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_releve = union plan_releve_reseau, plan_releve_polyvalent, plan_releve_interim;\nplan_releve = group plan_releve by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_releve = foreach plan_releve generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_PR.selection, 0, \"Value\").asString()}}, 0) as 'SLA_PR', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_releve = foreach plan_releve generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'SLA_PR' == 0 then sum('ChargeAllouee') else sum('ChargeAllouee') * (1-('SLA_PR'/100)) end as 'ChargeAllouee';\n\nplan_travaux_reseau = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_travaux_polyvalent = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_travaux_interim = foreach travaux_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_travaux = union plan_travaux_reseau, plan_travaux_polyvalent, plan_travaux_interim;\nplan_travaux = group plan_travaux by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_travaux = foreach plan_travaux generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_reseau = union plan_clientele, plan_distribution, plan_releve, plan_travaux;\nplan_reseau = group plan_reseau by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_reseau = foreach plan_reseau generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\n--\n-- RENOUVELLEMENT COMPTEURS\n-- \nplan_renou_reseau = foreach capacite_reseau_solde_travaux generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"RENOUVELLEMENT COMPTEURS\" as 'Activite', case when sum('Capacite') > 0 then sum('Capacite') else 0 end as 'ChargeAllouee';\n\nplan_renou_polyvalent = foreach capacite_polyvalent_solde_travaux generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"RENOUVELLEMENT COMPTEURS\" as 'Activite', case when sum('Capacite') > 0 then sum('Capacite') else 0 end as 'ChargeAllouee';\n\n--\n-- FINAL\nplan_final = union plan_station, plan_reseau, plan_renou_reseau, plan_renou_polyvalent;\nplan_final = group plan_final by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_final = foreach plan_final generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_final = filter plan_final by 'ChargeAllouee' > 0; plan_final = group plan_final by 'Activite'; plan_final = foreach plan_final generate 'Activite', sum('ChargeAllouee') as 'ChargeAllouee'; plan_final = order plan_final by 'ChargeAllouee' desc; ",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [
          "Activite"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "multi",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "stackvbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [
                "Activite"
              ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "Profil"
              ],
              "plots" : [
                "ChargeAllouee"
              ]
            },
            "showActionMenu" : false,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Secteur_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "CapaciteParSecteur",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ],
            "groups" : [
              "Secteur"
            ],
            "order" : [
              [
                "sum_Capacite",
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "Secteur"
              ],
              "plots" : [
                "sum_Capacite"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "ChargeParProfil" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "ChargeParProfil",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q = group q by ('Date_Week', 'Profil', 'Activite');  q = foreach q generate 'Date_Week' as 'Date_Week', 'Profil', 'Activite', sum('Charge') as 'Charge';  q = foreach q generate 'Date_Week', 'Profil', 'Activite', case when 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"] then sum('Charge') else 0 end as 'Charge_Activites', case when 'Activite' == \"ADMINISTRATIF\" then sum('Charge') else 0 end as 'Charge_Admin', case when 'Activite' == \"TRAJET\" then sum('Charge') else 0 end as 'Charge_Trajet';  q = foreach q generate 'Date_Week', 'Profil', 'Activite', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach q generate 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Date_Week', 'Profil', 'Activite', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  q_Activite = filter result by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q_Activite = foreach q_Activite generate 'Date_Week', 'Profil', 'Activite', sum('Charge_Activites') as 'Charges_Totales';  q_Admin = foreach result generate 'Date_Week', \"AUTRES\" as 'Profil', \"ADMINISTRATIF\" as 'Activite', sum('Charge_Admin') as 'Charges_Totales';  q_Admin = group q_Admin by ('Date_Week', 'Profil', 'Activite');  q_Admin = foreach q_Admin generate 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  q_Trajet = foreach result generate 'Date_Week', \"AUTRES\" as 'Profil', \"TRAJET\" as 'Activite', sum('Charge_Trajet') as 'Charges_Totales';  q_Trajet = group q_Trajet by ('Date_Week', 'Profil', 'Activite');  q_Trajet = foreach q_Trajet generate 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = union q_Activite, q_Admin, q_Trajet;  final = group final by ('Date_Week', 'Profil', 'Activite');  final = foreach final generate 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = group final by 'Profil';  final = foreach final generate 'Profil', sum('Charges_Totales') as 'Charges_Totales';  final = order final by 'Charges_Totales' desc;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "centerText" : "",
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "showMeasureTitle" : false,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "pie",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "left",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "inner" : 60,
            "showActionMenu" : true,
            "centerValueType" : "none",
            "valueType" : "percent",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "ListSecteurPlan" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListSecteurPlan",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Secteur"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "lens_7" : {
        "broadcastFacet" : true,
        "groups" : [
          "Secteur",
          "Date_Week",
          "Profil"
        ],
        "label" : "lens_7",
        "numbers" : [
          "ChargeAllouee"
        ],
        "query" : "\n-- On r√©cup√®re les charges pour cette ann√©e par profil\n--\ncharge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n--charge = filter charge by 'Secteur' == \"Centre Var\" and 'Date_Week' in [\"09\", \"13\", \"22\", \"23\", \"28\", \"29\", \"30\", \"31\",  \"32\", \"33\", \"35\", \"36\", \"43\", \"44\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\"];\ncharge = filter charge by 'Profil' in [\"RESEAU\", \"STATION\"];\ncharge = group charge by ('Secteur', 'Date_Week', 'Profil');\ncharge = foreach charge generate 'Secteur', 'Date_Week', 'Profil', sum('Charge') as 'Charge';\n\n\n-- On r√©cup√®re les capacit√©s par profil de cette ann√©e pour les profils RESEAU et STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n--capacite = filter capacite by 'Secteur' == \"Centre Var\" and 'Date_Week' in [\"09\", \"13\", \"22\", \"23\", \"28\", \"29\", \"30\", \"31\",  \"32\",  \"33\", \"35\", \"36\", \"43\", \"44\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\"];\ncapacite = filter capacite by 'Profil' != \"POLYVALENT\";\ncapacite = group capacite by ('Secteur', 'Date_Week', 'Profil');\ncapacite = foreach capacite generate 'Secteur', 'Date_Week', 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec POLYVALENT.  Si charge <= capacite, on prend charge\n--\ncompare1 = group charge by ('Secteur', 'Date_Week', 'Profil') left, capacite by ('Secteur', 'Date_Week', 'Profil');\ncompare1 = foreach compare1 generate charge.'Secteur' as 'Secteur', charge.'Date_Week' as 'Date_Week', charge.'Profil' as 'Profil', sum(charge.'Charge') as 'ChargePrevue', sum(capacite.'Capacite') as 'CapaciteDisponible';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedPolyvalent\" else \"OK\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK : celles qu'on a pu allouer √† la premi√®re √©tape.  \n--\nplan1 = filter compare1 by 'Statut' == \"OK\";\nplan1 = foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n\n\n-- Apr√®s la premi√®re √©tape, on met de c√¥t√© les capacit√©s disponibles pour les allouer pour d'autres activit√©s\n--\n--dispoApresPlan1 =  foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n-- On pr√©pare la deuxi√®me √©tape : on filtre et on r√©cup√©re toutes celles qui ne pouvaient pas √™tre allou√©es compl√©tement √† la premi√®re √©tape\n--\ncomplement = filter compare1 by 'Statut' == \"NeedPolyvalent\";\ncomplement = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Deficit', 'Statut';\n\n\n-- On utilise la capacit√© disponible pour chaque profil\n--\nplan2_Partial = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', \"Partial\" as 'Statut';\n\n\n\n-- On essaie de compl√®ter avec du \"POLYVALENT\" si disponible\n--\nplan2_ToFill = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', sum('Deficit') as 'ChargePrevue', \"ToFill\" as 'Statut';\nplan2_ToFill = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2_ToFill = foreach plan2_ToFill generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('ChargePrevue') as 'ChargePrevue';\n\n\n\n-- On r√©cup√®re les capacit√©s polyvalentes pour compl√®ter\n--\ncapacite2 = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n--capacite2 = filter capacite2 by 'Secteur' == \"Centre Var\" and 'Date_Week' in [\"09\", \"13\", \"22\", \"23\", \"28\", \"29\", \"30\", \"31\",  \"32\",  \"33\", \"35\", \"36\", \"43\", \"44\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\"];\ncapacite2 = filter capacite2 by 'Profil' == \"POLYVALENT\";\ncapacite2 = group capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncapacite2 = foreach capacite2 generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec de l'INTERIM.  Si charge <= capacite, on prend charge\n--\ncompare2 = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil') left, capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncompare2 = foreach compare2 generate plan2_ToFill.'Secteur' as 'Secteur', plan2_ToFill.'Date_Week' as 'Date_Week', plan2_ToFill.'Profil' as 'Profil', sum(plan2_ToFill.'ChargePrevue') as 'ChargePrevue', sum(capacite2.'Capacite') as 'CapaciteDisponible';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedInterim\" else \"Filled\" end as 'Statut';\n\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK : celles partiellement allou√©es √† la premi√®re passe et compl√®t√©es √† la deuxi√®me avec POLYVALENT\n--\nplan2_Filled = filter compare2 by 'Statut' == \"Filled\";\nplan2_Filled = foreach plan2_Filled generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n--\nplan2_Polyvalent = filter compare2 by 'Statut' == \"NeedInterim\";\nplan2_Polyvalent = foreach plan2_Polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', 'Statut';\n\n\n\n-- On consolide les charges planifi√©es √† la deuxi√®me passe : celles qui sont compl√®t√©es avec du POLYVALENT\n--\nplan2 = union plan2_Partial, plan2_Filled, plan2_Polyvalent;\nplan2 = group plan2 by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2 = foreach plan2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan', 'Statut' ;\n\n\n\n\n\n--\n-- On filtre et on r√©cup√©re les charges qui n√©cessitent de l'INTERIM\n--\n--plan2_Interim = filter compare2 by 'Statut' == \"NeedInterim\";\n--plan2_Interim = foreach plan2_Interim generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde')*-1 as 'DisponibleApresPlan',  'Statut';\n\n-- On alloue de l'INTERIM l√† o√π c'est n√©cessaire\ninterim = filter compare2 by 'Statut' == \"NeedInterim\";\ninterim = foreach interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', sum('Solde') as 'ChargeAllouee', 'Statut';\n\n\n\n\n-- On fait le total des charges allou√©es auxquelles on additionne le TRAJET et l'ADMIN\n--\nautres = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n--autres = filter autres by 'Secteur' == \"Centre Var\" and 'Date_Week' in [\"09\", \"13\", \"22\", \"23\", \"28\", \"29\", \"30\", \"31\",  \"32\",  \"33\", \"35\", \"36\", \"43\", \"44\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\"];\nautres = filter autres by 'Profil' == \"AUTRES\";\nautres = group autres by ('Secteur', 'Date_Week', 'Profil');\nautres_Positif = foreach autres generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Charge') as 'ChargePrevue', sum('Charge') as 'CapaciteDisponible', sum('Charge') as 'ChargeAllouee', 0 as 'DisponibleApresPlan',  \"OK\" as 'Statut';\nautres_Negatif = foreach autres generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', 0 as 'ChargePrevue', 0 as 'CapaciteDisponible', 0 as 'ChargeAllouee', sum('Charge')*-1 as 'DisponibleApresPlan',  \"OK\" as 'Statut';\n\n\nplan = union plan1, plan2, autres_Positif, autres_Negatif;\nplan = group plan by ('Secteur', 'Date_Week', 'Profil');\nplan = foreach plan generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', case when sum('DisponibleApresPlan') < 0 then abs(sum('DisponibleApresPlan')) else 0 end as 'ChargeInterim', case when sum('DisponibleApresPlan') > 0 then abs(sum('DisponibleApresPlan')) end as 'DisponibleApresPlan';\n\n\n\nplan_Core = foreach plan generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan')as 'DisponibleApresPlan';\n\nplan_Interim = filter plan by 'ChargeInterim' > 0;\nplan_Interim = foreach plan_Interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', 0 as 'ChargePrevue', 0 as 'CapaciteDisponible', sum('ChargeInterim') as 'ChargeAllouee', 0 as 'DisponibleApresPlan';\n\nplan_Next = union plan_Core, plan_Interim;\nplan_Next = group plan_Next by ('Secteur', 'Date_Week', 'Profil');\nplan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n\n\ndisponible = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\ndisponible = filter disponible by 'Profil' in [\"RESEAU\", \"POLYVALENT\"] and 'DisponibleApresPlan' > 0; \ndisponible = group disponible by ('Secteur', 'Date_Week', 'Profil');\ndisponible = foreach disponible generate 'Secteur', 'Date_Week', 'Profil', first('DisponibleApresPlan') as 'DisponibleApresPlan', sum('DisponibleApresPlan')/sum(sum('DisponibleApresPlan')) over ([..] partition by ('Secteur')) as 'Poids';\ndisponible = foreach disponible generate 'Secteur', 'Date_Week', 'Profil', 1125 as 'Renou_Compteurs', sum('DisponibleApresPlan') as 'DisponibleApresPlan', sum('Poids') as 'Poids';\n\nrenou_Compteurs = foreach disponible generate 'Secteur', 'Date_Week', 'Profil', \"RENOUVELLEMENT COMPTEURS\" as 'Activite', 'Renou_Compteurs', sum('DisponibleApresPlan') as 'DisponibleApresPlan', sum('Poids') as 'Poids', 'Renou_Compteurs'*sum('Poids') as 'ChargeAllouee';\nrenou_Compteurs = foreach renou_Compteurs generate 'Secteur', 'Date_Week', 'Profil', \"RENOUVELLEMENT COMPTEURS\" as 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [
          "Secteur",
          "Date_Week",
          "Profil",
          "Activite"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "multi",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "stackvbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [
                "Profil"
              ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Week"
              ],
              "plots" : [
                "ChargeAllouee"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Capacite_ETP_Date_We_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "CapaciteMoyenne_ETP",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite_ETP",
                "A"
              ],
              [
                "unique",
                "Date_Week",
                "B"
              ],
              [
                "count",
                "*",
                "CapaciteMoyenne"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Capacite_ETP"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "unique",
                      "Date_Week"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "A/B"
                },
                "name" : "CapaciteMoyenne",
                "header" : "CapaciteMoyenne"
              }
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "CapaciteMoyenne"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_8" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "lens_8",
        "numbers" : [ ],
        "query" : "charge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\ncharge = filter charge by 'Profil' in [\"RESEAU\", \"STATION\"];\ncharge = group charge by ('Secteur', 'Date_Week', 'Profil', 'Activite');\ncharge = foreach charge generate 'Secteur', 'Date_Week', 'Activite', 'Profil', first('Charge') as 'Charge', sum('Charge')/sum(sum('Charge')) over ([..] partition by ('Secteur', 'Profil', 'Date_Week')) as 'Poids';\n",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "EvolutionCharge_ETP" : {
        "broadcastFacet" : true,
        "groups" : [
          "Date_Year~~~Date_Week"
        ],
        "label" : "EvolutionCharge_ETP",
        "numbers" : [
          "Charge_Activites",
          "Charge_Admin",
          "Charge_Trajet",
          "Charges_Totales"
        ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q1 = filter q by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q1 = group q1 by ('Date_Year', 'Date_Week');  q1 = foreach q1 generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  q_admin = filter q by 'Activite' == \"ADMINISTRATIF\";  q_admin = group q_admin by ('Date_Year', 'Date_Week');  q_admin = foreach q_admin generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  q_trajet = filter q by 'Activite' == \"TRAJET\";  q_trajet = group q_trajet by ('Date_Year', 'Date_Week');  q_trajet = foreach q_trajet generate 'Date_Year' + \"~~~\" + 'Date_Week' as 'Date_Year~~~Date_Week', sum('Charge_ETP') as 'Charge_ETP';  result = group q1 by 'Date_Year~~~Date_Week', q_admin by 'Date_Year~~~Date_Week', q_trajet by 'Date_Year~~~Date_Week';  result = foreach result generate q1.'Date_Year~~~Date_Week' as 'Date_Year~~~Date_Week', sum(q1.'Charge_ETP') as 'Charge_Activites', sum(q_admin.'Charge_ETP') as 'Charge_Admin', sum(q_trajet.'Charge_ETP') as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  result = foreach result generate 'Date_Year~~~Date_Week', 'Taux_Trajet' as 'Taux_Trajet', 'Taux_Admin' as 'Taux_Admin', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet', sum('Charge_Activites') + sum('Charge_Admin') + sum('Charge_Trajet') as 'Charges_Totales';  result = order result by 'Date_Year~~~Date_Week' asc;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [
          "Date_Year~~~Date_Week"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "sync",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : false,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "columnMap" : {
              "split" : [ ],
              "timeAxis" : [
                "Date_Year~~~Date_Week"
              ],
              "trellis" : [ ],
              "plots" : [
                "Charges_Totales"
              ]
            },
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "lens_5" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "TauxCharge",
        "numbers" : [ ],
        "query" : "q1 = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\nq2 = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\nq = cogroup q1 by all inner, q2 by all;\nq = foreach q generate sum(q1.'Charge') as 'Charge', sum(q2.'Capacite') as 'Capacite';\nq = foreach q generate sum('Charge') / sum('Capacite') as 'TauxCharge';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_6" : {
        "broadcastFacet" : true,
        "groups" : [
          "Secteur",
          "Date_Week"
        ],
        "label" : "lens_6",
        "numbers" : [
          "Charge",
          "Capacite",
          "Diff√©rence",
          "TauxCharge",
          "TauxChargeChart"
        ],
        "query" : "charge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\nresult = group charge by ('Secteur', 'Date_Week') full, capacite by ('Secteur', 'Date_Week');\nresult = foreach result generate coalesce(charge.'Secteur', capacite.'Secteur') as 'Secteur', coalesce(charge.'Date_Week', capacite.'Date_Week') as 'Date_Week', sum(charge.'Charge') as 'Charge', sum(capacite.'Capacite') as 'Capacite';\nresult = foreach result generate 'Secteur', 'Date_Week', sum('Charge') as 'Charge', sum('Capacite') as 'Capacite', sum('Capacite') - sum('Charge') as 'Diff√©rence', sum('Charge')/sum('Capacite') as 'TauxCharge', sum('Charge')/sum('Capacite') as 'TauxChargeChart';\nresult = order result by ('Secteur' asc, 'Date_Week' asc);",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [
          "Secteur",
          "Date_Week"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : {
              "TauxChargeChart" : {
                "parameters" : { },
                "type" : "bar"
              }
            },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "mode" : "fittocontainer",
            "numberOfLines" : 1,
            "pivoted" : false,
            "showActionMenu" : true,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "PlanParActivite" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "PlanParActivite",
        "numbers" : [ ],
        "query" : "\n-- On r√©cup√®re les charges pour cette ann√©e par profil\n--\ncharge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n--charge = filter charge by 'Secteur' == \"Centre Var\" and 'Date_Week' in [\"09\", \"13\", \"22\", \"23\", \"28\", \"29\", \"30\", \"31\",  \"32\", \"33\", \"35\", \"36\", \"43\", \"44\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\"];\ncharge = filter charge by 'Profil' in [\"RESEAU\", \"STATION\"];\ncharge = group charge by ('Secteur', 'Date_Week', 'Profil');\ncharge = foreach charge generate 'Secteur', 'Date_Week', 'Profil', sum('Charge') as 'Charge';\n\n\n-- On r√©cup√®re les capacit√©s par profil de cette ann√©e pour les profils RESEAU et STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n--capacite = filter capacite by 'Secteur' == \"Centre Var\" and 'Date_Week' in [\"09\", \"13\", \"22\", \"23\", \"28\", \"29\", \"30\", \"31\",  \"32\",  \"33\", \"35\", \"36\", \"43\", \"44\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\"];\ncapacite = filter capacite by 'Profil' != \"POLYVALENT\";\ncapacite = group capacite by ('Secteur', 'Date_Week', 'Profil');\ncapacite = foreach capacite generate 'Secteur', 'Date_Week', 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec POLYVALENT.  Si charge <= capacite, on prend charge\n--\ncompare1 = group charge by ('Secteur', 'Date_Week', 'Profil') left, capacite by ('Secteur', 'Date_Week', 'Profil');\ncompare1 = foreach compare1 generate charge.'Secteur' as 'Secteur', charge.'Date_Week' as 'Date_Week', charge.'Profil' as 'Profil', sum(charge.'Charge') as 'ChargePrevue', sum(capacite.'Capacite') as 'CapaciteDisponible';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedPolyvalent\" else \"OK\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK : celles qu'on a pu allouer √† la premi√®re √©tape.  \n--\nplan1 = filter compare1 by 'Statut' == \"OK\";\nplan1 = foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n\n\n-- Apr√®s la premi√®re √©tape, on met de c√¥t√© les capacit√©s disponibles pour les allouer pour d'autres activit√©s\n--\n--dispoApresPlan1 =  foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n-- On pr√©pare la deuxi√®me √©tape : on filtre et on r√©cup√©re toutes celles qui ne pouvaient pas √™tre allou√©es compl√©tement √† la premi√®re √©tape\n--\ncomplement = filter compare1 by 'Statut' == \"NeedPolyvalent\";\ncomplement = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Deficit', 'Statut';\n\n\n-- On utilise la capacit√© disponible pour chaque profil\n--\nplan2_Partial = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', \"Partial\" as 'Statut';\n\n\n\n-- On essaie de compl√®ter avec du \"POLYVALENT\" si disponible\n--\nplan2_ToFill = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', sum('Deficit') as 'ChargePrevue', \"ToFill\" as 'Statut';\nplan2_ToFill = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2_ToFill = foreach plan2_ToFill generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('ChargePrevue') as 'ChargePrevue';\n\n\n\n-- On r√©cup√®re les capacit√©s polyvalentes pour compl√®ter\n--\ncapacite2 = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n--capacite2 = filter capacite2 by 'Secteur' == \"Centre Var\" and 'Date_Week' in [\"09\", \"13\", \"22\", \"23\", \"28\", \"29\", \"30\", \"31\",  \"32\",  \"33\", \"35\", \"36\", \"43\", \"44\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\"];\ncapacite2 = filter capacite2 by 'Profil' == \"POLYVALENT\";\ncapacite2 = group capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncapacite2 = foreach capacite2 generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec de l'INTERIM.  Si charge <= capacite, on prend charge\n--\ncompare2 = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil') left, capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncompare2 = foreach compare2 generate plan2_ToFill.'Secteur' as 'Secteur', plan2_ToFill.'Date_Week' as 'Date_Week', plan2_ToFill.'Profil' as 'Profil', sum(plan2_ToFill.'ChargePrevue') as 'ChargePrevue', sum(capacite2.'Capacite') as 'CapaciteDisponible';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedInterim\" else \"Filled\" end as 'Statut';\n\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK : celles partiellement allou√©es √† la premi√®re passe et compl√®t√©es √† la deuxi√®me avec POLYVALENT\n--\nplan2_Filled = filter compare2 by 'Statut' == \"Filled\";\nplan2_Filled = foreach plan2_Filled generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n--\nplan2_Polyvalent = filter compare2 by 'Statut' == \"NeedInterim\";\nplan2_Polyvalent = foreach plan2_Polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', 'Statut';\n\n\n\n-- On consolide les charges planifi√©es √† la deuxi√®me passe : celles qui sont compl√®t√©es avec du POLYVALENT\n--\nplan2 = union plan2_Partial, plan2_Filled, plan2_Polyvalent;\nplan2 = group plan2 by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2 = foreach plan2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan', 'Statut' ;\n\n\n\n\n\n--\n-- On filtre et on r√©cup√©re les charges qui n√©cessitent de l'INTERIM\n--\n--plan2_Interim = filter compare2 by 'Statut' == \"NeedInterim\";\n--plan2_Interim = foreach plan2_Interim generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde')*-1 as 'DisponibleApresPlan',  'Statut';\n\n-- On alloue de l'INTERIM l√† o√π c'est n√©cessaire\ninterim = filter compare2 by 'Statut' == \"NeedInterim\";\ninterim = foreach interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', sum('Solde') as 'ChargeAllouee', 'Statut';\n\n\n\n\n-- On fait le total des charges allou√©es auxquelles on additionne le TRAJET et l'ADMIN\n--\nautres = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n--autres = filter autres by 'Secteur' == \"Centre Var\" and 'Date_Week' in [\"09\", \"13\", \"22\", \"23\", \"28\", \"29\", \"30\", \"31\",  \"32\",  \"33\", \"35\", \"36\", \"43\", \"44\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\"];\nautres = filter autres by 'Profil' == \"AUTRES\";\nautres = group autres by ('Secteur', 'Date_Week', 'Profil');\nautres_Positif = foreach autres generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Charge') as 'ChargePrevue', sum('Charge') as 'CapaciteDisponible', sum('Charge') as 'ChargeAllouee', 0 as 'DisponibleApresPlan',  \"OK\" as 'Statut';\nautres_Negatif = foreach autres generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', 0 as 'ChargePrevue', 0 as 'CapaciteDisponible', 0 as 'ChargeAllouee', sum('Charge')*-1 as 'DisponibleApresPlan',  \"OK\" as 'Statut';\n\n\nplan = union plan1, plan2, autres_Positif, autres_Negatif;\nplan = group plan by ('Secteur', 'Date_Week', 'Profil');\nplan = foreach plan generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', case when sum('DisponibleApresPlan') < 0 then abs(sum('DisponibleApresPlan')) else 0 end as 'ChargeInterim', case when sum('DisponibleApresPlan') > 0 then abs(sum('DisponibleApresPlan')) end as 'DisponibleApresPlan';\n\n\n\nplan_Core = foreach plan generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan')as 'DisponibleApresPlan';\n\nplan_Interim = filter plan by 'ChargeInterim' > 0;\nplan_Interim = foreach plan_Interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', 0 as 'ChargePrevue', 0 as 'CapaciteDisponible', sum('ChargeInterim') as 'ChargeAllouee', 0 as 'DisponibleApresPlan';\n\nplan_Next = union plan_Core, plan_Interim;\nplan_Next = group plan_Next by ('Secteur', 'Date_Week', 'Profil');\nplan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\nplan_Next = group plan_Next by ('Secteur', 'Date_Week', 'Profil');\nplan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('ChargeAllouee') as 'ChargeAllouee', coalesce(null,0) as 'Taux_IP', coalesce(null,0) as 'Taux_PR', coalesce(null,0) as 'Taux_PO';\nplan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('ChargeAllouee') as 'ChargeAllouee', 'ChargeAllouee' * ('Taux_IP'/100) as 'Moins_IP', 'ChargeAllouee' * ('Taux_PR'/100) as 'Moins_PR', 'ChargeAllouee' * ('Taux_PO'/100) as 'Moins_PO';\n\nplan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil', sum('ChargeAllouee') - 'Moins_IP' - 'Moins_PR' - 'Moins_PO' as 'ChargeSimulee'; plan_Next = filter plan_Next by {{column(PlanParProfil.selection, [\"Profil\"]).asEquality(\"Profil\")}};  plan_Next = filter plan_Next by {{column(PlanParProfil.selection, [\"Date_Week\"]).asEquality(\"Date_Week\")}}; poids_Activite = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\"; poids_Activite = filter poids_Activite by {{column(PlanParProfil.selection, [\"Profil\"]).asEquality(\"Profil\")}};  poids_Activite = group poids_Activite by ('Secteur', 'Date_Week', 'Profil', 'Activite');  poids_Activite = foreach poids_Activite generate 'Secteur', 'Date_Week', 'Profil', 'Activite', first('Charge') as 'Charge', sum('Charge')/sum(sum('Charge')) over ([..] partition by ('Secteur', 'Profil', 'Date_Week')) as 'Poids'; input_Plan_Next = foreach plan_Next generate 'Secteur', 'Date_Week', 'Profil' as 'Activite', sum('ChargeSimulee') as 'ChargeAllouee';  poids_Activite = foreach poids_Activite generate 'Secteur', 'Date_Week', 'Activite', sum('Poids') as 'ChargeAllouee';  split = union input_Plan_Next, poids_Activite;  split = group split by ('Secteur', 'Date_Week', 'Activite');  split = foreach split generate 'Secteur', 'Date_Week', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';  split = foreach split generate 'Secteur', 'Date_Week', case when 'Activite' in [\"RESEAU\", \"STATION\"] then \"AAA\" else 'Activite' end as 'Activite2', case when 'Activite' in [\"RESEAU\", \"STATION\"] then sum('ChargeAllouee') else 0 end as 'ChargeAllouee', case when 'Activite' not in [\"RESEAU\", \"STATION\"] then sum('ChargeAllouee') else 0 end as 'Poids';  split = group split by ('Secteur', 'Date_Week', 'Activite2');  split = foreach split generate 'Secteur', 'Date_Week', 'Activite2', sum('Poids') as 'Poids', sum('ChargeAllouee') as 'ChargeAllouee', sum(sum('ChargeAllouee')) over ([..0] partition by ('Secteur','Date_Week') order by ('Secteur','Date_Week','Activite2')) as 'TotalChargeAllouee';  split = foreach split generate 'Secteur', 'Date_Week', 'Activite2' as 'Activite', sum('Poids') * sum('TotalChargeAllouee') as 'Repartition'; split = filter split by 'Activite' != \"AAA\"; split = foreach split generate 'Secteur', 'Date_Week', 'Activite', sum('Repartition') as 'ChargeAllouee';  charge3 = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\"; charge3 = filter charge3 by {{column(PlanParProfil.selection, [\"Profil\"]).asEquality(\"Profil\")}}; charge3 = group charge3 by ('Secteur', 'Date_Week', 'Activite'); charge3 = foreach charge3 generate 'Secteur', 'Date_Week', 'Activite', sum('Charge') as 'ChargePrevue';  split_FINAL = group split by ('Secteur', 'Date_Week', 'Activite') left, charge3 by ('Secteur', 'Date_Week', 'Activite');  split_FINAL = foreach split_FINAL generate split.'Secteur' as 'Secteur', split.'Date_Week' as 'Date_Week', split.'Activite' as 'Activite', sum(charge3.'ChargePrevue') as 'ChargePrevue', sum(split.'ChargeAllouee') as 'ChargeAllouee';  split_FINAL = foreach split_FINAL generate 'Secteur', 'Date_Week', 'Activite', sum('ChargePrevue') as 'ChargePrevue', sum('ChargeAllouee') as 'ChargeAllouee', sum('ChargePrevue')-sum('ChargeAllouee') as 'Complement'; split_FINAL_1 = foreach split_FINAL generate 'Secteur', 'Date_Week', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee'; split_FINAL_2 = foreach split_FINAL generate 'Secteur', 'Date_Week', 'Activite', sum('Complement') as 'ChargeAllouee'; split_FINAL_ALL = union split_FINAL_1, split_FINAL_2;  split_FINAL_ALL = group split_FINAL_ALL by ('Secteur', 'Date_Week', 'Activite');  split_FINAL_ALL = foreach split_FINAL_ALL generate 'Secteur', 'Date_Week', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';  split_FINAL_ALL = group split_FINAL_ALL by 'Activite';  split_FINAL_ALL = foreach split_FINAL_ALL generate 'Activite', sum('ChargeAllouee') as 'ChargeAllouee'; ",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "lens_3",
        "numbers" : [ ],
        "query" : "charge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n--\n-- CHARGE STATION\n--\ncharge_electromecanique = filter charge by 'Activite' == \"ELECTROMECANIQUE\";\ncharge_electromecanique = group charge_electromecanique by ('Secteur', 'Date_Week');\ncharge_electromecanique = foreach charge_electromecanique generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_production = filter charge by 'Activite' == \"PRODUCTION / TRAITEMENT\";\ncharge_production = group charge_production by ('Secteur', 'Date_Week');\ncharge_production = foreach charge_production generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\n\n--\n-- CAPACITE STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n\ncapacite_station = filter capacite by 'Profil' == \"STATION\";\ncapacite_station = group capacite_station by ('Secteur', 'Date_Week');\ncapacite_station = foreach capacite_station generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- CAPACITE POLYVALENT\n--\ncapacite_polyvalent = filter capacite by 'Profil' == \"POLYVALENT\";\ncapacite_polyvalent = group capacite_polyvalent by ('Secteur', 'Date_Week');\ncapacite_polyvalent = foreach capacite_polyvalent generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- SIMULATION STATION\n--\n-- Activite Electromecanique\nelectromecanique = group charge_electromecanique by ('Secteur', 'Date_Week') left, capacite_station by ('Secteur', 'Date_Week'), capacite_polyvalent by ('Secteur', 'Date_Week');\nelectromecanique = foreach electromecanique generate charge_electromecanique.'Secteur' as 'Secteur', charge_electromecanique.'Date_Week' as 'Date_Week', sum(charge_electromecanique.'ChargePrevue') as 'ChargePrevue', sum(capacite_station.'Capacite') as 'CapaciteStation', sum(capacite_polyvalent.'Capacite') as 'CapacitePolyvalent';\n\nelectromecanique_station = foreach electromecanique generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as CapaciteStation, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteStation') > 0 and sum('ChargePrevue') < sum('CapaciteStation')) then sum('ChargePrevue') else sum('CapaciteStation') end as 'ChargeAlloueeStation', case when sum('CapaciteStation') > 0 then sum('CapaciteStation') - sum('ChargePrevue') else 0 end as 'CapaciteStationSolde';\n\nelectromecanique_station_polyvalent = foreach electromecanique_station generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as CapaciteStation, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', case when sum('CapaciteStationSolde') < 0 then 0 else sum('CapaciteStationSolde') end as 'CapaciteStationSolde', case when sum('CapaciteStationSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteStationSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteStationSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteStationSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nelectromecanique_station_interim = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteStationSolde') as 'CapaciteStationSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeStation') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_station_solde_electromecanique = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteStationSolde') > 0 then sum('CapaciteStationSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_electromecanique = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite PRODUCTION / TRAITEMENT\n--\nproduction = group charge_production by ('Secteur', 'Date_Week') left, capacite_station_solde_electromecanique by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_electromecanique by ('Secteur', 'Date_Week');\nproduction = foreach production generate charge_production.'Secteur' as 'Secteur', charge_production.'Date_Week' as 'Date_Week', sum(charge_production.'ChargePrevue') as 'ChargePrevue', sum(capacite_station_solde_electromecanique.'Capacite') as 'CapaciteStation', sum(capacite_polyvalent_solde_electromecanique.'Capacite') as 'CapacitePolyvalent';\n\nproduction_station = foreach production generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', case when (sum('CapaciteStation') > 0 and sum('ChargePrevue') <= sum('CapaciteStation')) then sum('ChargePrevue') else sum('CapaciteStation') end as 'ChargeAlloueeStation', sum('CapaciteStation') - sum('ChargePrevue') as 'CapaciteStationSolde';\n\nproduction_station_polyvalent = foreach production_station generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', case when sum('CapaciteStationSolde') < 0 then 0 else sum('CapaciteStationSolde') end as 'CapaciteStationSolde', case when sum('CapaciteStationSolde') < 0 and abs(sum('CapaciteStationSolde')) <= sum('CapacitePolyvalent') then abs(sum('CapaciteStationSolde')) else sum('CapacitePolyvalent') end as 'ChargeAlloueePolyvalent', case when sum('CapaciteStationSolde') < 0 and abs(sum('CapaciteStationSolde')) <= sum('CapacitePolyvalent') then sum('CapacitePolyvalent') - abs(sum('CapaciteStationSolde')) else 0 end as 'CapacitePolyvalentSolde';\n\nproduction_station_interim = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteStationSolde') as 'CapaciteStationSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeStation') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_station_solde_production = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteStationSolde') > 0 then sum('CapaciteStationSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_production = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- PLAN STATION\n--\nplan_electromecanique_station = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', \"STATION\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueeStation') as 'ChargeAllouee';\nplan_electromecanique_polyvalent = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_electromecanique_interim = foreach electromecanique_station_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_electromecanique = union plan_electromecanique_station, plan_electromecanique_polyvalent, plan_electromecanique_interim;\nplan_electromecanique = group plan_electromecanique by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_electromecanique = foreach plan_electromecanique generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_production_station = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', \"STATION\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueeStation') as 'ChargeAllouee';\nplan_production_polyvalent = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_production_interim = foreach production_station_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_production = union plan_production_station, plan_production_polyvalent, plan_production_interim;\nplan_production = group plan_production by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_production = foreach plan_production generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_IP.selection, 0, \"Value\").asString()}}, 0) as 'SLA_IP', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_production = foreach plan_production generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'SLA_IP' == 0 then sum('ChargeAllouee') else sum('ChargeAllouee') * (1-('SLA_IP'/100)) end as 'ChargeAllouee';\n\nplan_station = union plan_electromecanique, plan_production;\nplan_station = group plan_station by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_station = foreach plan_station generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\n-- \n-- CHARGE RESEAU\n--\ncharge_clientele = filter charge by 'Activite' == \"CLIENTELE\";\ncharge_clientele = group charge_clientele by ('Secteur', 'Date_Week');\ncharge_clientele = foreach charge_clientele generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_distribution = filter charge by 'Activite' == \"DISTRIBUTION / COLLECTE\";\ncharge_distribution = group charge_distribution by ('Secteur', 'Date_Week');\ncharge_distribution = foreach charge_distribution generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_travaux = filter charge by 'Activite' == \"TRAVAUX FACTURABLES\";\ncharge_travaux = group charge_travaux by ('Secteur', 'Date_Week');\ncharge_travaux = foreach charge_travaux generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_releve = filter charge by 'Activite' == \"RELEVE COMPTEURS\";\ncharge_releve = group charge_releve by ('Secteur', 'Date_Week');\ncharge_releve = foreach charge_releve generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\n--\n-- CAPACITE RESEAU\n--\ncapacite_reseau = filter capacite by 'Profil' == \"RESEAU\";\ncapacite_reseau = group capacite_reseau by ('Secteur', 'Date_Week');\ncapacite_reseau = foreach capacite_reseau generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- Activite CLIENTELE\n--\nclientele = group charge_clientele by ('Secteur', 'Date_Week') left, capacite_reseau by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_production by ('Secteur', 'Date_Week');\nclientele = foreach clientele generate charge_clientele.'Secteur' as 'Secteur', charge_clientele.'Date_Week' as 'Date_Week', sum(charge_clientele.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_production.'Capacite') as 'CapacitePolyvalent';\n\nclientele_reseau = foreach clientele generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\nclientele_reseau_polyvalent = foreach clientele_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nclientele_reseau_interim = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_clientele = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_clientele = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite DISTRIBUTION\n--\ndistribution = group charge_distribution by ('Secteur', 'Date_Week') left, capacite_reseau_solde_clientele by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_clientele by ('Secteur', 'Date_Week');\ndistribution = foreach distribution generate charge_distribution.'Secteur' as 'Secteur', charge_distribution.'Date_Week' as 'Date_Week', sum(charge_distribution.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_clientele.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_clientele.'Capacite') as 'CapacitePolyvalent';\n\ndistribution_reseau = foreach distribution generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\ndistribution_reseau_polyvalent = foreach distribution_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\ndistribution_reseau_interim = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_distribution = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_distribution = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite RELEVE COMPTEURS\n--\nreleve = group charge_releve by ('Secteur', 'Date_Week') left, capacite_reseau_solde_distribution by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_distribution by ('Secteur', 'Date_Week');\nreleve = foreach releve generate charge_releve.'Secteur' as 'Secteur', charge_releve.'Date_Week' as 'Date_Week', sum(charge_releve.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_distribution.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_distribution.'Capacite') as 'CapacitePolyvalent';\n\nreleve_reseau = foreach releve generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\nreleve_reseau_polyvalent = foreach releve_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nreleve_reseau_interim = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_releve = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_releve = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite TRAVAUX\n--\ntravaux = group charge_travaux by ('Secteur', 'Date_Week') left, capacite_reseau_solde_releve by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_releve by ('Secteur', 'Date_Week');\ntravaux = foreach travaux generate charge_travaux.'Secteur' as 'Secteur', charge_travaux.'Date_Week' as 'Date_Week', sum(charge_travaux.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_releve.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_releve.'Capacite') as 'CapacitePolyvalent';\n\ntravaux_reseau = foreach travaux generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\ntravaux_reseau_polyvalent = foreach travaux_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\ntravaux_reseau_interim = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_travaux = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_travaux = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- PLAN RESEAU\n--\nplan_clientele_reseau = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_clientele_polyvalent = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_clientele_interim = foreach clientele_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_clientele = union plan_clientele_reseau, plan_clientele_polyvalent, plan_clientele_interim;\nplan_clientele = group plan_clientele by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_clientele = foreach plan_clientele generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_distribution_reseau = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_distribution_polyvalent = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_distribution_interim = foreach distribution_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_distribution = union plan_distribution_reseau, plan_distribution_polyvalent, plan_distribution_interim;\nplan_distribution = group plan_distribution by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_distribution = foreach plan_distribution generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_releve_reseau = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_releve_polyvalent = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_releve_interim = foreach releve_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_releve = union plan_releve_reseau, plan_releve_polyvalent, plan_releve_interim;\nplan_releve = group plan_releve by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_releve = foreach plan_releve generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_PR.selection, 0, \"Value\").asString()}}, 0) as 'SLA_PR', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_releve = foreach plan_releve generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'SLA_PR' == 0 then sum('ChargeAllouee') else sum('ChargeAllouee') * (1-('SLA_PR'/100)) end as 'ChargeAllouee';\n\nplan_travaux_reseau = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_travaux_polyvalent = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_travaux_interim = foreach travaux_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_travaux = union plan_travaux_reseau, plan_travaux_polyvalent, plan_travaux_interim;\nplan_travaux = group plan_travaux by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_travaux = foreach plan_travaux generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_reseau = union plan_clientele, plan_distribution, plan_releve, plan_travaux;\nplan_reseau = group plan_reseau by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_reseau = foreach plan_reseau generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\n--\n-- RENOUVELLEMENT COMPTEURS\n-- \nplan_renou_reseau = foreach capacite_reseau_solde_travaux generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"RENOUVELLEMENT COMPTEURS\" as 'Activite', case when sum('Capacite') > 0 then sum('Capacite') else 0 end as 'ChargeAllouee';\n\nplan_renou_polyvalent = foreach capacite_polyvalent_solde_travaux generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"RENOUVELLEMENT COMPTEURS\" as 'Activite', case when sum('Capacite') > 0 then sum('Capacite') else 0 end as 'ChargeAllouee';\n\n--\n-- FINAL\nplan_final = union plan_station, plan_reseau, plan_renou_reseau, plan_renou_polyvalent;\nplan_final = group plan_final by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_final = foreach plan_final generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_final = filter plan_final by 'ChargeAllouee' > 0; plan_final = order plan_final by ('Secteur' asc, 'Date_Week' asc, 'Profil' asc, 'Activite' asc);\n\n",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "Date_Month_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite_ETP"
              ]
            ],
            "groups" : [
              "Date_Month"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "vbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Month"
              ],
              "plots" : [
                "sum_Capacite_ETP"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_4" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "lens_4",
        "numbers" : [ ],
        "query" : "charge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\nresult = cogroup charge by 'Date_Week' left, capacite by 'Date_Week';\nresult = foreach result generate coalesce(charge.'Date_Week', capacite.'Date_Week') as 'Date_Week', sum(charge.'Charge') as 'Charge', sum(capacite.'Capacite') as 'Capacite';\nresult = foreach result generate 'Date_Week', sum('Charge') as 'Charge', sum('Capacite') as 'Capacite';\nresult = group result by all;\nresult = foreach result generate sum('Charge') as 'Charge', sum('Capacite') as 'Capacite', (sum('Charge')/sum('Capacite'))*100 as 'Taux_Charge';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "lens_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "lens_1",
        "numbers" : [ ],
        "query" : "-- On planifie les m√™mes charges (bas√© sur N-1) pour cette ann√©e par profil\n--\ncharge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\ncharge = filter charge by 'Profil' in [\"RESEAU\", \"STATION\"];\ncharge = group charge by ('Secteur', 'Date_Week', 'Profil');\ncharge = foreach charge generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Charge') as 'Charge';\ncharge = order charge by ('Secteur' asc, 'Date_Week' asc, 'Profil' asc);\n\n\n-- On r√©cup√®re les capacit√©s par profil de cette ann√©e pour les profils RESEAU et STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\ncapacite = filter capacite by 'Profil' != \"POLYVALENT\";\ncapacite = group capacite by ('Secteur', 'Date_Week', 'Profil');\ncapacite = foreach capacite generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec POLYVALENT.  Si charge <= capacite, on prend charge\n--\ncompare1 = group charge by ('Secteur', 'Date_Week', 'Profil') left, capacite by ('Secteur', 'Date_Week', 'Profil');\ncompare1 = foreach compare1 generate charge.'Secteur' as 'Secteur', charge.'Date_Week' as 'Date_Week', charge.'Profil' as 'Profil', sum(charge.'Charge') as 'ChargePrevue', sum(capacite.'Capacite') as 'CapaciteDisponible';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedComplement\" else \"OK\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK\n--\nplan1 = filter compare1 by 'Statut' == \"OK\";\nplan1 = foreach plan1 generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut' as 'Statut';\n\n\n-- On planifie les m√™mes charges (bas√© sur N-1) pour cette ann√©e par profil\n--\ncharge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\ncharge = filter charge by 'Profil' in [\"RESEAU\", \"STATION\"];\ncharge = group charge by ('Secteur', 'Date_Week', 'Profil');\ncharge = foreach charge generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Charge') as 'Charge';\ncharge = order charge by ('Secteur' asc, 'Date_Week' asc, 'Profil' asc);\n\n\n-- On r√©cup√®re les capacit√©s par profil de cette ann√©e pour les profils RESEAU et STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\ncapacite = filter capacite by 'Profil' != \"POLYVALENT\";\ncapacite = group capacite by ('Secteur', 'Date_Week', 'Profil');\ncapacite = foreach capacite generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec POLYVALENT.  Si charge <= capacite, on prend charge\n--\ncompare1 = group charge by ('Secteur', 'Date_Week', 'Profil') left, capacite by ('Secteur', 'Date_Week', 'Profil');\ncompare1 = foreach compare1 generate charge.'Secteur' as 'Secteur', charge.'Date_Week' as 'Date_Week', charge.'Profil' as 'Profil', sum(charge.'Charge') as 'ChargePrevue', sum(capacite.'Capacite') as 'CapaciteDisponible';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedComplement\" else \"OK\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK\n--\nplan1 = filter compare1 by 'Statut' == \"OK\";\nplan1 = foreach plan1 generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut' as 'Statut';\n\n\n-- On filtre et on r√©cup√©re ceux qui ont besoin de compl√©ment avec POLYVALENT\n--\ncomplement = filter compare1 by 'Statut' == \"NeedComplement\";\ncomplement = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Deficit', 'Statut' as 'Statut';\n\n-- On utilise la capacit√© disponible pour chaque profil\n--\nplan2_Partial = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', \"Partial\" as 'Statut';\n\n-- On essaie de compl√®ter avec du \"POLYVALENT\" si disponible\n--\nplan2_ToFill = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', sum('Deficit') as 'ChargePrevue', \"ToFill\" as 'Statut';\nplan2_ToFill = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2_ToFill = foreach plan2_ToFill generate 'Secteur', 'Date_Week', 'Profil', 'Statut' as 'Statut', sum('ChargePrevue') as 'ChargePrevue';\n\n\n-- On r√©cup√®re les resources polyvalentes pour compl√®ter\n--\ncapacite2 = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\ncapacite2 = filter capacite2 by 'Profil' == \"POLYVALENT\";\ncapacite2 = group capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncapacite2 = foreach capacite2 generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Capacite') as 'Capacite';\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec de l'INTERIM.  Si charge <= capacite, on prend charge\n--\ncompare2 = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil') left, capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncompare2 = foreach compare2 generate plan2_ToFill.'Secteur' as 'Secteur', plan2_ToFill.'Date_Week' as 'Date_Week', plan2_ToFill.'Profil' as 'Profil', sum(plan2_ToFill.'ChargePrevue') as 'ChargePrevue', sum(capacite2.'Capacite') as 'CapaciteDisponible';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedComplement\" else \"Filled\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK\nplan2_Filled = filter compare2 by 'Statut' == \"Filled\";\nplan2_Filled = foreach plan2_Filled generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan',  'Statut';\n\nplan2 = union plan2_Partial, plan2_Filled;\nplan2 = group plan2 by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2 = foreach plan2 generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n\n\n\nplan = union plan1, plan2;\nplan = group plan by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan = foreach plan generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\nplan = order plan by ('Secteur' asc, 'Date_Week' asc, 'Profil' asc);\n",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "pivoted" : false,
            "showActionMenu" : true,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "lens_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "numbers" : [ ],
        "query" : "-- On planifie les m√™mes charges (bas√© sur N-1) pour cette ann√©e par profil\n--\ncharge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\ncharge = filter charge by 'Profil' in [\"RESEAU\", \"STATION\"];\ncharge = group charge by ('Secteur', 'Date_Week', 'Profil');\ncharge = foreach charge generate 'Secteur', 'Date_Week', 'Profil', sum('Charge') as 'Charge';\ncharge = order charge by ('Secteur' asc, 'Date_Week' asc, 'Profil' asc);\n\n\n-- On r√©cup√®re les capacit√©s par profil de cette ann√©e pour les profils RESEAU et STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\ncapacite = filter capacite by 'Profil' != \"POLYVALENT\";\ncapacite = group capacite by ('Secteur', 'Date_Week', 'Profil');\ncapacite = foreach capacite generate 'Secteur', 'Date_Week', 'Profil', sum('Capacite') as 'Capacite';\n\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec POLYVALENT.  Si charge <= capacite, on prend charge\n--\ncompare1 = group charge by ('Secteur', 'Date_Week', 'Profil') left, capacite by ('Secteur', 'Date_Week', 'Profil');\ncompare1 = foreach compare1 generate charge.'Secteur' as 'Secteur', charge.'Date_Week' as 'Date_Week', charge.'Profil' as 'Profil', sum(charge.'Charge') as 'ChargePrevue', sum(capacite.'Capacite') as 'CapaciteDisponible';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare1 = foreach compare1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedPolyvalent\" else \"OK\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK\n--\nplan1 = filter compare1 by 'Statut' == \"OK\";\nplan1 = foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan', 'Statut';\n\n\n-- Identifier les ressources disponibles pour les allouer oour l'acvtivit√© RENOU COMPTEURS\ndispoApresPlan1 =  foreach plan1 generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n\n-- On filtre et on r√©cup√©re ceux qui ont besoin de compl√©ment avec POLYVALENT\n--\ncomplement = filter compare1 by 'Statut' == \"NeedPolyvalent\";\ncomplement = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Deficit', 'Statut' as 'Statut';\n\n-- On utilise la capacit√© disponible pour chaque profil\n--\nplan2_Partial = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', 0 as 'DisponibleApresPlan', \"Partial\" as 'Statut';\n\n-- On essaie de compl√®ter avec du \"POLYVALENT\" si disponible\n--\nplan2_ToFill = foreach complement generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', \"POLYVALENT\" as 'Profil', sum('Deficit') as 'ChargePrevue', \"ToFill\" as 'Statut';\nplan2_ToFill = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2_ToFill = foreach plan2_ToFill generate 'Secteur', 'Date_Week', 'Profil', 'Statut' as 'Statut', sum('ChargePrevue') as 'ChargePrevue';\n\n\n-- On r√©cup√®re les resources polyvalentes pour compl√®ter\n--\ncapacite2 = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\ncapacite2 = filter capacite2 by 'Profil' == \"POLYVALENT\";\ncapacite2 = group capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncapacite2 = foreach capacite2 generate 'Secteur' as 'Secteur', 'Date_Week' as 'Date_Week', 'Profil' as 'Profil', sum('Capacite') as 'Capacite';\n\n-- On compare les charges avec les capacit√©s.  Si charge > capacite, on prend capacite et on completera si possible avec de l'INTERIM.  Si charge <= capacite, on prend charge\n--\ncompare2 = group plan2_ToFill by ('Secteur', 'Date_Week', 'Profil') left, capacite2 by ('Secteur', 'Date_Week', 'Profil');\ncompare2 = foreach compare2 generate plan2_ToFill.'Secteur' as 'Secteur', plan2_ToFill.'Date_Week' as 'Date_Week', plan2_ToFill.'Profil' as 'Profil', sum(plan2_ToFill.'ChargePrevue') as 'ChargePrevue', sum(capacite2.'Capacite') as 'CapaciteDisponible';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', case when sum('ChargePrevue') > sum('CapaciteDisponible') then sum('CapaciteDisponible') else sum('ChargePrevue') end as 'ChargeAllouee', sum('ChargePrevue') - sum('CapaciteDisponible') as 'Solde';\ncompare2 = foreach compare2 generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde') as 'Solde', case when sum('Solde') > 0 then \"NeedInterim\" else \"Filled\" end as 'Statut';\n\n\n-- On filtre et on r√©cup√©re les charges qui sont OK\n--\nplan2_Filled = filter compare2 by 'Statut' == \"Filled\";\nplan2_Filled = foreach plan2_Filled generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', abs(sum('Solde')) as 'DisponibleApresPlan',  'Statut';\n\n\n-- Identifier les ressources \"POLYVALENT\" disponibles pour les allouer oour l'acvtivit√© RENOU COMPTEURS\ndispoApresPlan2 =  foreach plan2_Filled generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n-- On filtre et on r√©cup√©re les charges qui n√©cessitent de l'INTERIM\n--\nplan2_Interim = filter compare2 by 'Statut' == \"NeedInterim\";\nplan2_Interim = foreach plan2_Interim generate 'Secteur', 'Date_Week', 'Profil', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('Solde')*-1 as 'DisponibleApresPlan',  'Statut';\n\n\n-- On consolide les planifications plan2 d√©j√† faites\nplan2 = union plan2_Partial, plan2_Filled, plan2_Interim;\nplan2 = group plan2 by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan2 = foreach plan2 generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n-- On consolide les planifications plan1 et plan2\nplan = union plan1, plan2;\nplan = group plan by ('Secteur', 'Date_Week', 'Profil', 'Statut');\nplan = foreach plan generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteDisponible') as 'CapaciteDisponible', sum('ChargeAllouee') as 'ChargeAllouee', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\n\n-- On alloue de l'INTERIM l√† o√π c'est n√©cessaire\ninterim = filter compare2 by 'Statut' == \"NeedInterim\";\ninterim = foreach interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', sum('Solde') as 'ChargeAllouee', 'Statut';\n\n-- Utiliser les capacit√©s disponibles pour r√©partir la charge de l'activit√© RENOU COMPTEURS\ndisponible = union dispoApresPlan1, dispoApresPlan2;\ndisponible = filter disponible by 'Profil' in [\"RESEAU\", \"POLYVALENT\"];\ndisponible = group disponible by ('Secteur', 'Date_Week', 'Profil', 'Statut');\ndisponible = foreach disponible generate 'Secteur', 'Date_Week', 'Profil', 'Statut', sum('DisponibleApresPlan') as 'DisponibleApresPlan';\n\nrenou_compteurs =  foreach disponible generate 'Secteur', 'Date_Week', 'Profil', sum('DisponibleApresPlan') as 'ChargeAllouee';\n\n\n-- \nplan_Final = union plan, interim, renou_compteurs;\nplan_Final = group plan_Final by ('Secteur', 'Date_Week', 'Profil');\nplan_Final = foreach plan_Final generate 'Secteur', 'Date_Week', 'Profil', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_Final = order plan_Final by ('Secteur' asc, 'Date_Week' asc, 'Profil' asc);",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "stackvbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [
                "Profil"
              ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "Secteur",
                "Date_Week"
              ],
              "plots" : [
                "ChargeAllouee"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "static_trajet" : {
        "broadcastFacet" : true,
        "columns" : {
          "Trajet" : {
            "type" : "string"
          }
        },
        "label" : "VarTauxTrajet",
        "selectMode" : "single",
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "10",
            "Value" : "10"
          },
          {
            "Display" : "12",
            "Value" : "12"
          },
          {
            "Display" : "13",
            "Value" : "13"
          },
          {
            "Display" : "14",
            "Value" : "14"
          },
          {
            "Display" : "16",
            "Value" : "16"
          }
        ]
      },
      "Date_Week_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Date_Week_1",
        "numbers" : [ ],
        "query" : "charge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\nresult = cogroup charge by ('Secteur', 'Date_Week') full, capacite by ('Secteur', 'Date_Week');\nresult = foreach result generate coalesce(charge.'Secteur', capacite.'Secteur') as 'Secteur', coalesce(charge.'Date_Week', capacite.'Date_Week') as 'Date_Week', sum(charge.'Charge') as 'Charge', sum(capacite.'Capacite') as 'Capacite';\nresult = group result by 'Date_Week';\nresult = foreach result generate 'Date_Week', sum('Charge') as 'Charge', sum('Capacite') as 'Capacite';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "vbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "binValues" : false,
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Week"
              ],
              "plots" : [
                "Charge",
                "Capacite"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            }
          },
          "type" : "chart"
        }
      },
      "Date_Week_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "EvolutionCapacite",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ],
            "groups" : [
              "Date_Week"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : false,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [ ],
              "timeAxis" : [
                "Date_Week"
              ],
              "trellis" : [ ],
              "plots" : [
                "sum_Capacite"
              ]
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "TauxMoyenAdmin_ETP" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "TauxMoyenAdmin_ETP",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Charge_ETP",
                "Total"
              ],
              [
                "sum",
                "Charge_ETP",
                "Admin"
              ],
              [
                "count",
                "*",
                "VarDefAdmin"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Charge_ETP"
                    ]
                  ],
                  "filters" : [
                    [
                      "Profil",
                      [
                        "RESEAU",
                        "STATION"
                      ],
                      "in"
                    ]
                  ]
                },
                "name" : "Total"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Charge_ETP"
                    ]
                  ],
                  "filters" : [
                    [
                      "Activite",
                      [
                        "ADMINISTRATIF"
                      ],
                      "in"
                    ]
                  ]
                },
                "name" : "Admin"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "'Admin' / 'Total'"
                },
                "name" : "VarDefAdmin",
                "header" : "VarDefAdmin"
              }
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "Date_Week_3" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Date_Week_3",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite_ETP"
              ]
            ],
            "groups" : [
              "Date_Week"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "showPoints" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : false,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [ ],
              "timeAxis" : [
                "Date_Week"
              ],
              "trellis" : [ ],
              "plots" : [
                "sum_Capacite_ETP"
              ]
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "Date_Month_Secteur_P_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite_ETP"
              ]
            ],
            "groups" : [
              "Date_Month",
              "Secteur",
              "Profil"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "highColor" : "#009DDF",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "lowColor" : "#E2F4FC",
            "visualizationType" : "matrix",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "columnMap" : {
              "r" : [
                "sum_Capacite_ETP"
              ],
              "color" : [
                "sum_Capacite_ETP"
              ],
              "x" : [
                "Date_Month"
              ],
              "y" : [
                "Secteur",
                "Profil"
              ]
            },
            "showActionMenu" : true,
            "x" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "y" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "ListProfil" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListProfil",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Profil"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "Capacite_ETP_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite_ETP"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "sum_Capacite_ETP"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Val_Renou_Compteurs" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.VARIABLES_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Val_Renou_Compteurs",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Renouvellement_Compteurs"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "sum_Renouvellement_Compteurs"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Date_Month_Secteur_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ],
            "groups" : [
              "Date_Month",
              "Secteur"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "line",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [
                "Secteur"
              ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Month"
              ],
              "plots" : [
                "sum_Capacite"
              ]
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "Date_Month_Secteur_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite_ETP"
              ]
            ],
            "groups" : [
              "Date_Month",
              "Secteur"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "line",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "plots" : [
              {
                "column" : [
                  "sum_Capacite_ETP"
                ]
              }
            ],
            "columnMap" : {
              "split" : [
                "Secteur"
              ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Month"
              ],
              "plots" : [
                "sum_Capacite_ETP"
              ]
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "ChargeTotale" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "ChargeTotale",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q = group q by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q = foreach q generate 'Secteur', 'Date_Week' as 'Date_Week', 'Profil', 'Activite', sum('Charge') as 'Charge';  q = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"] then sum('Charge') else 0 end as 'Charge_Activites', case when 'Activite' == \"ADMINISTRATIF\" then sum('Charge') else 0 end as 'Charge_Admin', case when 'Activite' == \"TRAJET\" then sum('Charge') else 0 end as 'Charge_Trajet';  q = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Secteur', 'Date_Week', 'Profil', 'Activite', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  q_Activite = filter result by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q_Activite = foreach q_Activite generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charge_Activites') as 'Charges_Totales';  q_Admin = foreach result generate 'Secteur', 'Date_Week', \"AUTRES\" as 'Profil', \"ADMINISTRATIF\" as 'Activite', sum('Charge_Admin') as 'Charges_Totales';  q_Admin = group q_Admin by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q_Admin = foreach q_Admin generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  q_Trajet = foreach result generate 'Secteur', 'Date_Week', \"AUTRES\" as 'Profil', \"TRAJET\" as 'Activite', sum('Charge_Trajet') as 'Charges_Totales';  q_Trajet = group q_Trajet by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q_Trajet = foreach q_Trajet generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = union q_Activite, q_Admin, q_Trajet;  final = group final by ('Secteur', 'Date_Week', 'Profil', 'Activite');  final = foreach final generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = group final by all;  final = foreach final generate sum('Charges_Totales') as 'Charges_Totales';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "sum_Charge"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "ListAnneeCP" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListAnneeCP",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Ann_e"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "ListActivite" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListActivite",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Activite"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "EvolutionChargeParActivite" : {
        "broadcastFacet" : true,
        "groups" : [
          "Date_Week",
          "Activite"
        ],
        "label" : "EvolutionChargeParActivite",
        "numbers" : [
          "Charges_Totales"
        ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q = group q by ('Date_Week','Activite');  q = foreach q generate 'Date_Week' as 'Date_Week', 'Activite', sum('Charge') as 'Charge';  q = foreach q generate 'Date_Week', 'Activite', case when 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"] then sum('Charge') else 0 end as 'Charge_Activites', case when 'Activite' == \"ADMINISTRATIF\" then sum('Charge') else 0 end as 'Charge_Admin', case when 'Activite' == \"TRAJET\" then sum('Charge') else 0 end as 'Charge_Trajet';  q = foreach q generate 'Date_Week', 'Activite', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach q generate 'Date_Week', 'Activite', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Date_Week', 'Activite', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  q_Activite = filter result by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q_Activite = foreach q_Activite generate 'Date_Week', 'Activite', sum('Charge_Activites') as 'Charges_Totales';  q_Admin = foreach result generate 'Date_Week', \"ADMINISTRATIF\" as 'Activite', sum('Charge_Admin') as 'Charges_Totales';  q_Admin = group q_Admin by ('Date_Week', 'Activite');  q_Admin = foreach q_Admin generate 'Date_Week', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  q_Trajet = foreach result generate 'Date_Week', \"TRAJET\" as 'Activite', sum('Charge_Trajet') as 'Charges_Totales';  q_Trajet = group q_Trajet by ('Date_Week', 'Activite');  q_Trajet = foreach q_Trajet generate 'Date_Week', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = union q_Activite, q_Admin, q_Trajet;  final = group final by ('Date_Week', 'Activite');  final = foreach final generate 'Date_Week', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = order final by 'Date_Week' asc;\n",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [
          "Date_Week",
          "Activite"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "sync",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "stackvbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [
                "Activite"
              ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Week"
              ],
              "plots" : [
                "Charges_Totales"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            }
          },
          "type" : "chart"
        }
      },
      "ChargeMoyenne" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "ChargeMoyenne",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";  q = group q by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q = foreach q generate 'Secteur', 'Date_Week' as 'Date_Week', 'Profil', 'Activite', sum('Charge') as 'Charge';  q = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"] then sum('Charge') else 0 end as 'Charge_Activites', case when 'Activite' == \"ADMINISTRATIF\" then sum('Charge') else 0 end as 'Charge_Admin', case when 'Activite' == \"TRAJET\" then sum('Charge') else 0 end as 'Charge_Trajet';  q = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach q generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_admin.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Admin', coalesce({{cell(static_trajet.selection, 0, \"Value\").asString()}}, 0) as 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', sum('Charge_Admin') as 'Charge_Admin', sum('Charge_Trajet') as 'Charge_Trajet';  result = foreach result generate 'Secteur', 'Date_Week', 'Profil', 'Activite', 'Taux_Admin', 'Taux_Trajet', sum('Charge_Activites') as 'Charge_Activites', case when 'Taux_Admin' == 0 then sum('Charge_Admin') else (sum('Charge_Activites') * 'Taux_Admin')/100 end as 'Charge_Admin', case when 'Taux_Trajet' == 0 then sum('Charge_Trajet') else (sum('Charge_Activites') * 'Taux_Trajet')/100 end as 'Charge_Trajet';  q_Activite = filter result by 'Activite' not in [\"ADMINISTRATIF\", \"TRAJET\"];  q_Activite = foreach q_Activite generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charge_Activites') as 'Charges_Totales';  q_Admin = foreach result generate 'Secteur', 'Date_Week', \"AUTRES\" as 'Profil', \"ADMINISTRATIF\" as 'Activite', sum('Charge_Admin') as 'Charges_Totales';  q_Admin = group q_Admin by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q_Admin = foreach q_Admin generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  q_Trajet = foreach result generate 'Secteur', 'Date_Week', \"AUTRES\" as 'Profil', \"TRAJET\" as 'Activite', sum('Charge_Trajet') as 'Charges_Totales';  q_Trajet = group q_Trajet by ('Secteur', 'Date_Week', 'Profil', 'Activite');  q_Trajet = foreach q_Trajet generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = union q_Activite, q_Admin, q_Trajet;  final = group final by ('Secteur', 'Date_Week', 'Profil', 'Activite');  final = foreach final generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('Charges_Totales') as 'Charges_Totales';  final = group final by all;  final = foreach final generate sum('Charges_Totales') as 'Charges_Totales', unique('Date_Week') as 'Counter';  final = foreach final generate sum('Charges_Totales')/'Counter' as 'Charge_Moyenne';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "ListAnnee" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListAnnee",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Ann_e"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "TauxMoyenAdmin" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "TauxMoyenAdmin",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Charge",
                "Total"
              ],
              [
                "sum",
                "Charge",
                "Admin"
              ],
              [
                "count",
                "*",
                "VarDefAdmin"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Charge"
                    ]
                  ],
                  "filters" : [
                    [
                      "Profil",
                      [
                        "RESEAU",
                        "STATION"
                      ],
                      "in"
                    ]
                  ]
                },
                "name" : "Total",
                "header" : "Total"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "Charge"
                    ]
                  ],
                  "filters" : [
                    [
                      "Activite",
                      [
                        "ADMINISTRATIF"
                      ],
                      "in"
                    ]
                  ]
                },
                "name" : "Admin",
                "header" : "Admin"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "'Admin' / 'Total'"
                },
                "name" : "VarDefAdmin",
                "header" : "VarDefAdmin"
              }
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "ChargeParSecteur",
            "EvolChargeParMois",
            "EvolutionCharge"
          ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "static_IP" : {
        "broadcastFacet" : true,
        "columns" : {
          "Texte2" : {
            "type" : "string"
          },
          "Affichage" : {
            "type" : "string"
          }
        },
        "label" : "static_IP",
        "selectMode" : "single",
        "type" : "staticflex",
        "values" : [
          {
            "Affichage" : "1",
            "Value" : "1"
          },
          {
            "Affichage" : "2",
            "Value" : "2"
          },
          {
            "Affichage" : "3",
            "Value" : "3"
          },
          {
            "Affichage" : "4",
            "Value" : "4"
          }
        ]
      },
      "ListSecteur" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CHARGE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "ListSecteur",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Secteur"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "static_admin" : {
        "broadcastFacet" : true,
        "columns" : {
          "Trajet" : {
            "type" : "string"
          }
        },
        "label" : "VarTauxAdmin",
        "selectMode" : "single",
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "5",
            "Value" : "5"
          },
          {
            "Display" : "7",
            "Value" : "7"
          },
          {
            "Display" : "8",
            "Value" : "8"
          },
          {
            "Display" : "9",
            "Value" : "9"
          },
          {
            "Display" : "11",
            "Value" : "11"
          }
        ]
      },
      "PlanningSemaineActivite" : {
        "broadcastFacet" : true,
        "groups" : [
          "Secteur",
          "Date_Week",
          "Profil",
          "Activite"
        ],
        "label" : "PlanningSemaineActivite",
        "numbers" : [
          "ChargeAllouee"
        ],
        "query" : "charge = load \"${App.Datasets.CHARGE_tp.FullyQualifiedName}\";\n--\n-- CHARGE STATION\n--\ncharge_electromecanique = filter charge by 'Activite' == \"ELECTROMECANIQUE\";\ncharge_electromecanique = group charge_electromecanique by ('Secteur', 'Date_Week');\ncharge_electromecanique = foreach charge_electromecanique generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_production = filter charge by 'Activite' == \"PRODUCTION / TRAITEMENT\";\ncharge_production = group charge_production by ('Secteur', 'Date_Week');\ncharge_production = foreach charge_production generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\n\n--\n-- CAPACITE STATION\n--\ncapacite = load \"${App.Datasets.CAPACITE_tp.FullyQualifiedName}\";\n\ncapacite_station = filter capacite by 'Profil' == \"STATION\";\ncapacite_station = group capacite_station by ('Secteur', 'Date_Week');\ncapacite_station = foreach capacite_station generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- CAPACITE POLYVALENT\n--\ncapacite_polyvalent = filter capacite by 'Profil' == \"POLYVALENT\";\ncapacite_polyvalent = group capacite_polyvalent by ('Secteur', 'Date_Week');\ncapacite_polyvalent = foreach capacite_polyvalent generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- SIMULATION STATION\n--\n-- Activite Electromecanique\nelectromecanique = group charge_electromecanique by ('Secteur', 'Date_Week') left, capacite_station by ('Secteur', 'Date_Week'), capacite_polyvalent by ('Secteur', 'Date_Week');\nelectromecanique = foreach electromecanique generate charge_electromecanique.'Secteur' as 'Secteur', charge_electromecanique.'Date_Week' as 'Date_Week', sum(charge_electromecanique.'ChargePrevue') as 'ChargePrevue', sum(capacite_station.'Capacite') as 'CapaciteStation', sum(capacite_polyvalent.'Capacite') as 'CapacitePolyvalent';\n\nelectromecanique_station = foreach electromecanique generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as CapaciteStation, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteStation') > 0 and sum('ChargePrevue') < sum('CapaciteStation')) then sum('ChargePrevue') else sum('CapaciteStation') end as 'ChargeAlloueeStation', case when sum('CapaciteStation') > 0 then sum('CapaciteStation') - sum('ChargePrevue') else 0 end as 'CapaciteStationSolde';\n\nelectromecanique_station_polyvalent = foreach electromecanique_station generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as CapaciteStation, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', case when sum('CapaciteStationSolde') < 0 then 0 else sum('CapaciteStationSolde') end as 'CapaciteStationSolde', case when sum('CapaciteStationSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteStationSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteStationSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteStationSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nelectromecanique_station_interim = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteStationSolde') as 'CapaciteStationSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeStation') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_station_solde_electromecanique = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteStationSolde') > 0 then sum('CapaciteStationSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_electromecanique = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite PRODUCTION / TRAITEMENT\n--\nproduction = group charge_production by ('Secteur', 'Date_Week') left, capacite_station_solde_electromecanique by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_electromecanique by ('Secteur', 'Date_Week');\nproduction = foreach production generate charge_production.'Secteur' as 'Secteur', charge_production.'Date_Week' as 'Date_Week', sum(charge_production.'ChargePrevue') as 'ChargePrevue', sum(capacite_station_solde_electromecanique.'Capacite') as 'CapaciteStation', sum(capacite_polyvalent_solde_electromecanique.'Capacite') as 'CapacitePolyvalent';\n\nproduction_station = foreach production generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', case when (sum('CapaciteStation') > 0 and sum('ChargePrevue') <= sum('CapaciteStation')) then sum('ChargePrevue') else sum('CapaciteStation') end as 'ChargeAlloueeStation', sum('CapaciteStation') - sum('ChargePrevue') as 'CapaciteStationSolde';\n\nproduction_station_polyvalent = foreach production_station generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', case when sum('CapaciteStationSolde') < 0 then 0 else sum('CapaciteStationSolde') end as 'CapaciteStationSolde', case when sum('CapaciteStationSolde') < 0 and abs(sum('CapaciteStationSolde')) <= sum('CapacitePolyvalent') then abs(sum('CapaciteStationSolde')) else sum('CapacitePolyvalent') end as 'ChargeAlloueePolyvalent', case when sum('CapaciteStationSolde') < 0 and abs(sum('CapaciteStationSolde')) <= sum('CapacitePolyvalent') then sum('CapacitePolyvalent') - abs(sum('CapaciteStationSolde')) else 0 end as 'CapacitePolyvalentSolde';\n\nproduction_station_interim = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteStation') as 'CapaciteStation', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeStation') as 'ChargeAlloueeStation', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteStationSolde') as 'CapaciteStationSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeStation') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_station_solde_production = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteStationSolde') > 0 then sum('CapaciteStationSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_production = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- PLAN STATION\n--\nplan_electromecanique_station = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', \"STATION\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueeStation') as 'ChargeAllouee';\nplan_electromecanique_polyvalent = foreach electromecanique_station_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_electromecanique_interim = foreach electromecanique_station_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"ELECTROMECANIQUE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_electromecanique = union plan_electromecanique_station, plan_electromecanique_polyvalent, plan_electromecanique_interim;\nplan_electromecanique = group plan_electromecanique by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_electromecanique = foreach plan_electromecanique generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_production_station = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', \"STATION\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueeStation') as 'ChargeAllouee';\nplan_production_polyvalent = foreach production_station_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_production_interim = foreach production_station_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"PRODUCTION / TRAITEMENT\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_production = union plan_production_station, plan_production_polyvalent, plan_production_interim;\nplan_production = group plan_production by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_production = foreach plan_production generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_IP.selection, 0, \"Value\").asString()}}, 0) as 'SLA_IP', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_production = foreach plan_production generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'SLA_IP' == 0 then sum('ChargeAllouee') else sum('ChargeAllouee') * (1-('SLA_IP'/100)) end as 'ChargeAllouee';\n\nplan_station = union plan_electromecanique, plan_production;\nplan_station = group plan_station by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_station = foreach plan_station generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\n-- \n-- CHARGE RESEAU\n--\ncharge_clientele = filter charge by 'Activite' == \"CLIENTELE\";\ncharge_clientele = group charge_clientele by ('Secteur', 'Date_Week');\ncharge_clientele = foreach charge_clientele generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_distribution = filter charge by 'Activite' == \"DISTRIBUTION / COLLECTE\";\ncharge_distribution = group charge_distribution by ('Secteur', 'Date_Week');\ncharge_distribution = foreach charge_distribution generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_travaux = filter charge by 'Activite' == \"TRAVAUX FACTURABLES\";\ncharge_travaux = group charge_travaux by ('Secteur', 'Date_Week');\ncharge_travaux = foreach charge_travaux generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\ncharge_releve = filter charge by 'Activite' == \"RELEVE COMPTEURS\";\ncharge_releve = group charge_releve by ('Secteur', 'Date_Week');\ncharge_releve = foreach charge_releve generate 'Secteur', 'Date_Week', sum('Charge') as 'ChargePrevue';\n\n--\n-- CAPACITE RESEAU\n--\ncapacite_reseau = filter capacite by 'Profil' == \"RESEAU\";\ncapacite_reseau = group capacite_reseau by ('Secteur', 'Date_Week');\ncapacite_reseau = foreach capacite_reseau generate 'Secteur', 'Date_Week', sum('Capacite') as 'Capacite';\n\n--\n-- Activite CLIENTELE\n--\nclientele = group charge_clientele by ('Secteur', 'Date_Week') left, capacite_reseau by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_production by ('Secteur', 'Date_Week');\nclientele = foreach clientele generate charge_clientele.'Secteur' as 'Secteur', charge_clientele.'Date_Week' as 'Date_Week', sum(charge_clientele.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_production.'Capacite') as 'CapacitePolyvalent';\n\nclientele_reseau = foreach clientele generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\nclientele_reseau_polyvalent = foreach clientele_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nclientele_reseau_interim = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_clientele = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_clientele = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite DISTRIBUTION\n--\ndistribution = group charge_distribution by ('Secteur', 'Date_Week') left, capacite_reseau_solde_clientele by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_clientele by ('Secteur', 'Date_Week');\ndistribution = foreach distribution generate charge_distribution.'Secteur' as 'Secteur', charge_distribution.'Date_Week' as 'Date_Week', sum(charge_distribution.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_clientele.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_clientele.'Capacite') as 'CapacitePolyvalent';\n\ndistribution_reseau = foreach distribution generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\ndistribution_reseau_polyvalent = foreach distribution_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\ndistribution_reseau_interim = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_distribution = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_distribution = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite RELEVE COMPTEURS\n--\nreleve = group charge_releve by ('Secteur', 'Date_Week') left, capacite_reseau_solde_distribution by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_distribution by ('Secteur', 'Date_Week');\nreleve = foreach releve generate charge_releve.'Secteur' as 'Secteur', charge_releve.'Date_Week' as 'Date_Week', sum(charge_releve.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_distribution.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_distribution.'Capacite') as 'CapacitePolyvalent';\n\nreleve_reseau = foreach releve generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\nreleve_reseau_polyvalent = foreach releve_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\nreleve_reseau_interim = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_releve = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_releve = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- Activite TRAVAUX\n--\ntravaux = group charge_travaux by ('Secteur', 'Date_Week') left, capacite_reseau_solde_releve by ('Secteur', 'Date_Week'), capacite_polyvalent_solde_releve by ('Secteur', 'Date_Week');\ntravaux = foreach travaux generate charge_travaux.'Secteur' as 'Secteur', charge_travaux.'Date_Week' as 'Date_Week', sum(charge_travaux.'ChargePrevue') as 'ChargePrevue', sum(capacite_reseau_solde_releve.'Capacite') as 'CapaciteReseau', sum(capacite_polyvalent_solde_releve.'Capacite') as 'CapacitePolyvalent';\n\ntravaux_reseau = foreach travaux generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, case when (sum('CapaciteReseau') > 0 and sum('ChargePrevue') < sum('CapaciteReseau')) then sum('ChargePrevue') else sum('CapaciteReseau') end as 'ChargeAlloueeReseau', case when sum('CapaciteReseau') > 0 then sum('CapaciteReseau') - sum('ChargePrevue') else 0 end as 'CapaciteReseauSolde';\n\ntravaux_reseau_polyvalent = foreach travaux_reseau generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as CapaciteReseau, sum('CapacitePolyvalent') as CapacitePolyvalent, sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', case when sum('CapaciteReseauSolde') < 0 then 0 else sum('CapaciteReseauSolde') end as 'CapaciteReseauSolde', case when sum('CapaciteReseauSolde') < 0 and sum('CapacitePolyvalent') > 0 then abs(sum('CapaciteReseauSolde')) else 0 end as 'ChargeAlloueePolyvalent', case when sum('CapaciteReseauSolde') < 0 then sum('CapacitePolyvalent') - abs(sum('CapaciteReseauSolde')) else sum('CapacitePolyvalent') end as 'CapacitePolyvalentSolde';\n\ntravaux_reseau_interim = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', sum('ChargePrevue') as 'ChargePrevue', sum('CapaciteReseau') as 'CapaciteReseau', sum('CapacitePolyvalent') as 'CapacitePolyvalent', sum('ChargeAlloueeReseau') as 'ChargeAlloueeReseau', sum('ChargeAlloueePolyvalent') as 'ChargeAlloueePolyvalent', sum('CapaciteReseauSolde') as 'CapaciteReseauSolde', sum('CapacitePolyvalentSolde') as 'CapacitePolyvalentSolde', sum('ChargePrevue') - (sum('ChargeAlloueeReseau') + sum('ChargeAlloueePolyvalent')) as 'ChargeAlloueeInterim';\n\ncapacite_reseau_solde_travaux = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapaciteReseauSolde') > 0 then sum('CapaciteReseauSolde') else 0 end as 'Capacite';\n\ncapacite_polyvalent_solde_travaux = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', case when sum('CapacitePolyvalentSolde') > 0 then sum('CapacitePolyvalentSolde') else 0 end as 'Capacite';\n\n--\n-- PLAN RESEAU\n--\nplan_clientele_reseau = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_clientele_polyvalent = foreach clientele_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_clientele_interim = foreach clientele_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"CLIENTELE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_clientele = union plan_clientele_reseau, plan_clientele_polyvalent, plan_clientele_interim;\nplan_clientele = group plan_clientele by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_clientele = foreach plan_clientele generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_distribution_reseau = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_distribution_polyvalent = foreach distribution_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_distribution_interim = foreach distribution_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"DISTRIBUTION / COLLECTE\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_distribution = union plan_distribution_reseau, plan_distribution_polyvalent, plan_distribution_interim;\nplan_distribution = group plan_distribution by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_distribution = foreach plan_distribution generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_releve_reseau = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_releve_polyvalent = foreach releve_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_releve_interim = foreach releve_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"RELEVE COMPTEURS\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_releve = union plan_releve_reseau, plan_releve_polyvalent, plan_releve_interim;\nplan_releve = group plan_releve by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_releve = foreach plan_releve generate 'Secteur', 'Date_Week', 'Profil', 'Activite', coalesce({{cell(static_PR.selection, 0, \"Value\").asString()}}, 0) as 'SLA_PR', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_releve = foreach plan_releve generate 'Secteur', 'Date_Week', 'Profil', 'Activite', case when 'SLA_PR' == 0 then sum('ChargeAllouee') else sum('ChargeAllouee') * (1-('SLA_PR'/100)) end as 'ChargeAllouee';\n\nplan_travaux_reseau = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueeReseau') as 'ChargeAllouee';\nplan_travaux_polyvalent = foreach travaux_reseau_polyvalent generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueePolyvalent') as 'ChargeAllouee';\nplan_travaux_interim = foreach travaux_reseau_interim generate 'Secteur', 'Date_Week', \"INTERIM\" as 'Profil', \"TRAVAUX FACTURABLES\" as 'Activite', sum('ChargeAlloueeInterim') as 'ChargeAllouee';\n\nplan_travaux = union plan_travaux_reseau, plan_travaux_polyvalent, plan_travaux_interim;\nplan_travaux = group plan_travaux by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_travaux = foreach plan_travaux generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\nplan_reseau = union plan_clientele, plan_distribution, plan_releve, plan_travaux;\nplan_reseau = group plan_reseau by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_reseau = foreach plan_reseau generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\n\n--\n-- RENOUVELLEMENT COMPTEURS\n-- \nplan_renou_reseau = foreach capacite_reseau_solde_travaux generate 'Secteur', 'Date_Week', \"RESEAU\" as 'Profil', \"RENOUVELLEMENT COMPTEURS\" as 'Activite', case when sum('Capacite') > 0 then sum('Capacite') else 0 end as 'ChargeAllouee';\n\nplan_renou_polyvalent = foreach capacite_polyvalent_solde_travaux generate 'Secteur', 'Date_Week', \"POLYVALENT\" as 'Profil', \"RENOUVELLEMENT COMPTEURS\" as 'Activite', case when sum('Capacite') > 0 then sum('Capacite') else 0 end as 'ChargeAllouee';\n\n--\n-- FINAL\nplan_final = union plan_station, plan_reseau, plan_renou_reseau, plan_renou_polyvalent;\nplan_final = group plan_final by ('Secteur', 'Date_Week', 'Profil', 'Activite');\nplan_final = foreach plan_final generate 'Secteur', 'Date_Week', 'Profil', 'Activite', sum('ChargeAllouee') as 'ChargeAllouee';\nplan_final = filter plan_final by 'ChargeAllouee' > 0;\n\n",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [
          "Secteur",
          "Date_Week",
          "Profil",
          "Activite"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "bottom-center",
              "inside" : false
            },
            "axisMode" : "multi",
            "totalSumMode" : "none",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "stackvbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [
                "Activite"
              ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Week"
              ],
              "plots" : [
                "ChargeAllouee"
              ]
            },
            "showActionMenu" : false,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "normalize" : false,
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Date_Year_Date_Month_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CAPACITE_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "EvolCapaciteParMois",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Capacite"
              ]
            ],
            "groups" : [
              "Date_Month"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "sync",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "vbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "Date_Month"
              ],
              "plots" : [
                "sum_Capacite"
              ]
            },
            "showActionMenu" : false,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#091A3E",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "link_18" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner la Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_19" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Capacit√©s",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_16" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Comparer Charge/Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_18" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Average Customer Unit Price Trend"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "link_17" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Comparer Charge/Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_17" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "by Product in $"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(84, 105, 141)"
        },
        "type" : "text"
      },
      "link_14" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Simuler les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "container_14" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "link_15" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_19" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Average Price per Month"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(84, 105, 141)"
        },
        "type" : "text"
      },
      "link_12" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "1b6cfd74-4125-4fb7-97d4-f0d8a1662d82"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Par Activit√©",
          "textAlignment" : "center",
          "textColor" : "rgb(0, 95, 178)"
        },
        "type" : "link"
      },
      "text_14" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "(*) Sans s√©lection, ce sont les valeurs saisies pas d√©faut qui sont utilis√©es"
          },
          "fontSize" : 12,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#E6ECF2"
        },
        "type" : "text"
      },
      "link_13" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Comparer Charge/Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_13" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Comparaison Secteurs"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "link_10" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "8def404a-bab0-4779-9495-e2d2c0c3ede3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Par Activit√©",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "text_16" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Total List vs Customer Price"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "link_11" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Global",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "text_15" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Discount %"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(84, 105, 141)"
        },
        "type" : "text"
      },
      "text_10" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Customer Total"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_12" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Average of Additional Discount $"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_11" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Average of Additional Discount %"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "chart_9" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "ChargeParSecteur",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_6" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "missingValue" : "connect",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : true,
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "title" : {
            "fontSize" : 16,
            "subtitleFontSize" : 12,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "split" : [ ],
            "timeAxis" : [
              "Opportunity.CloseDate_Year~~~Opportunity.CloseDate_Month"
            ],
            "trellis" : [ ],
            "plots" : [
              "avg_SBQQ__CustomerPrice__c"
            ]
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "light",
          "applyConditionalFormatting" : true,
          "drawArea" : {
            "measure" : "",
            "bounding1" : "",
            "showDrawArea" : false,
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "text_3" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Additional Discount by Rep"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_2" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 20,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_5" : {
        "parameters" : {
          "showValues" : true,
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "sync",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "time",
          "missingValue" : "connect",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "showZero" : true,
          "valueType" : "none",
          "theme" : "dark",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          },
          "autoFitMode" : "keepLabels",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "columnMap" : {
            "split" : [ ],
            "timeAxis" : [
              "Date_Week"
            ],
            "trellis" : [ ],
            "plots" : [
              "Charges_Totales"
            ]
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "referenceLines" : [
              {
                "label" : {
                  "data" : "Moy.",
                  "type" : "static"
                },
                "value" : {
                  "data" : {
                    "field" : "Charge_Moyenne",
                    "sourceType" : "result",
                    "step" : "ChargeMoyenne"
                  },
                  "type" : "dynamic"
                }
              }
            ],
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "step" : "EvolutionCharge"
        },
        "type" : "chart"
      },
      "text_5" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "View By"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgba(255, 255, 255, 0.66)"
        },
        "type" : "text"
      },
      "chart_7" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "vbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "EvolChargeParMois",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_4" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "R√©partition par Activit√©"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_7" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Segmentation"
          },
          "fontSize" : 18,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_2" : {
        "parameters" : {
          "centerText" : "",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "pie",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 60,
          "showActionMenu" : true,
          "centerValueType" : "none",
          "valueType" : "percent",
          "theme" : "light",
          "step" : "ChargeParProfil",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_1" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "centerText" : "",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : 40,
            "position" : "right-top",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "exploreLink" : false,
          "title" : {
            "fontSize" : 16,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 50,
          "columnMap" : {
            "trellis" : [ ],
            "dimension" : [
              "Quote.SBQQ__Status__c"
            ],
            "plots" : [
              "unique_SBQQ__Quote__c"
            ]
          },
          "showActionMenu" : true,
          "centerValueType" : "none",
          "valueType" : "none",
          "theme" : "dark",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_6" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 20,
          "showActionMenu" : false,
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_9" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Pr√©paration Macro Planning"
          },
          "fontSize" : 20,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_4" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "ChargeParActivite",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          }
        },
        "type" : "chart"
      },
      "chart_3" : {
        "parameters" : {
          "autoFitMode" : "none",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "showValues" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : 10,
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "sync",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "exploreLink" : true,
          "binValues" : false,
          "title" : {
            "fontSize" : 16,
            "subtitleFontSize" : 12,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "SBQQ__ProductName__c"
            ],
            "plots" : [
              "A",
              "B"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            },
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "text_8" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "D√©tail"
          },
          "fontSize" : 18,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "link_29" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Global",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_27" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "1b6cfd74-4125-4fb7-97d4-f0d8a1662d82"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Par Activit√©",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_28" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "8def404a-bab0-4779-9495-e2d2c0c3ede3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Par Activit√©",
          "textAlignment" : "center",
          "textColor" : "rgb(0, 95, 178)"
        },
        "type" : "link"
      },
      "text_1" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "  Number of Quotes per Status"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "link_25" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "3db0fdf1-f83a-4b58-992c-2710a9382ddb"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler le Planning",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_26" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Global",
          "textAlignment" : "center",
          "textColor" : "rgb(0, 95, 178)"
        },
        "type" : "link"
      },
      "link_23" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Capacit√©s",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_24" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Comparer Charge/Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_21" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_22" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_20" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "3db0fdf1-f83a-4b58-992c-2710a9382ddb"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler le Planning",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "number_5" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "avg_SBQQ__AdditionalDiscount__c",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#C5D3E0",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "number_4" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "sum_SBQQ__CustomerTotal__c",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#C5D3E0",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "number_3" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "VarDefAdmin",
          "numberColor" : "#E6ECF2",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "TauxMoyenAdmin",
          "textAlignment" : "left",
          "title" : "Taux Administratif Moyen",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "number_2" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "TauxCharge",
          "numberColor" : "#E6ECF2",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "lens_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_SBQQ__Discount__c",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#C5D3E0",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "link_38" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Comparer Charge/Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_39" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "3db0fdf1-f83a-4b58-992c-2710a9382ddb"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler le Planning",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_36" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_37" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Capacit√©s",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_34" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_35" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_32" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "3db0fdf1-f83a-4b58-992c-2710a9382ddb"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler le Planning",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_33" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_30" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Capacit√©s",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "number_9" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "sum_Capacite",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : false,
          "step" : "Capacite_3",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_31" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Comparer Charge/Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "number_8" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Charges_Totales",
          "numberColor" : "#E6ECF2",
          "numberSize" : 24,
          "showActionMenu" : false,
          "step" : "ChargeTotale",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_7" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Charge_Moyenne",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : false,
          "step" : "ChargeMoyenne",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_6" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "VarDefTrajet",
          "numberColor" : "#E6ECF2",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "TauxMoyenTrajet",
          "textAlignment" : "left",
          "title" : "Taux Trajet Moyen ",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "link_49" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Capacit√©s",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_47" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_48" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_45" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Comparer Charge/Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_3" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "ETP",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_46" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "3db0fdf1-f83a-4b58-992c-2710a9382ddb"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler le Planning",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_4" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "1b6cfd74-4125-4fb7-97d4-f0d8a1662d82"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Heures",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_43" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_1" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "8def404a-bab0-4779-9495-e2d2c0c3ede3"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "ETP",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_44" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Capacit√©s",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_2" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Heures",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_41" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "d8e11d09-96d5-435c-95f5-5ace2f9eb220"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Par Profil",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_42" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Charges",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_40" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "d8e11d09-96d5-435c-95f5-5ace2f9eb220"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Global",
          "textAlignment" : "center",
          "textColor" : "rgb(0, 95, 178)"
        },
        "type" : "link"
      },
      "table_1" : {
        "parameters" : {
          "borderColor" : "rgb(230, 236, 242)",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "rgb(230, 236, 242)",
          "innerMinorBorderColor" : "rgb(230, 236, 242)",
          "maxColumnWidth" : 300,
          "minColumnWidth" : 40,
          "mode" : "variable",
          "numberOfLines" : 1,
          "showActionMenu" : true,
          "showRowIndexColumn" : false,
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "table_2" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "step" : "Secteur_Profil_Date__1",
          "subtotals" : true,
          "totals" : false,
          "verticalPadding" : 4
        },
        "type" : "table"
      },
      "link_9" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Global",
          "textAlignment" : "center",
          "textColor" : "rgb(0, 95, 178)"
        },
        "type" : "link"
      },
      "table_3" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : {
            "TauxChargeChart" : {
              "parameters" : { },
              "type" : "bar"
            }
          },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "step" : "lens_6",
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "table_4" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [
            {
              "label" : "Enregistrement Scenario",
              "visualforce" : {
                "name" : "ABTestDetail",
                "namespace" : ""
              }
            }
          ],
          "exploreLink" : false,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "step" : "lens_3",
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "pillbox_2" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 10,
          "selectedTab" : {
            "backgroundColor" : "#0070D2",
            "borderColor" : "#C6D3E1",
            "borderEdges" : [
              "all"
            ],
            "borderWidth" : 1,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "static_admin",
          "textColor" : "#0070D2"
        },
        "type" : "pillbox"
      },
      "link_7" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Heures",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "table_5" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : false,
          "step" : "Secteur_Profil_Activ_1",
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "link_8" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "8def404a-bab0-4779-9495-e2d2c0c3ede3"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Heures",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_5" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "3db0fdf1-f83a-4b58-992c-2710a9382ddb"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler le Planning",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "pillbox_3" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 10,
          "selectedTab" : {
            "backgroundColor" : "#0070D2",
            "borderColor" : "#C6D3E1",
            "borderEdges" : [
              "all"
            ],
            "borderWidth" : 1,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "static_trajet",
          "textColor" : "#0070D2"
        },
        "type" : "pillbox"
      },
      "link_6" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "1b6cfd74-4125-4fb7-97d4-f0d8a1662d82"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "ETP",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "pillbox_6" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 14,
          "selectedTab" : {
            "backgroundColor" : "#0070D2",
            "borderColor" : "#C6D3E1",
            "borderEdges" : [
              "all"
            ],
            "borderWidth" : 1,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "static_PR",
          "textColor" : "#0070D2"
        },
        "type" : "pillbox"
      },
      "pillbox_5" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 14,
          "selectedTab" : {
            "backgroundColor" : "#0070D2",
            "borderColor" : "#C6D3E1",
            "borderEdges" : [
              "all"
            ],
            "borderWidth" : 1,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "static_IP",
          "textColor" : "#0070D2"
        },
        "type" : "pillbox"
      },
      "pillbox_7" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 14,
          "selectedTab" : {
            "backgroundColor" : "#0070D2",
            "borderColor" : "#C6D3E1",
            "borderEdges" : [
              "all"
            ],
            "borderWidth" : 1,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "static_3",
          "textColor" : "#0070D2"
        },
        "type" : "pillbox"
      },
      "number_12" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "sum_Capacite",
          "numberColor" : "#E6ECF2",
          "numberSize" : 24,
          "showActionMenu" : false,
          "step" : "Capacite_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_10" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Charges_Totales",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : false,
          "step" : "ChargeTotale",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_58" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler la Charge",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_59" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c4e79ea6-7b34-4bfd-a61a-16bc14487474"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner la Charge",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_56" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Heures",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_57" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6dc70d1a-0fbc-43e9-94d6-97f391a56928"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "ETP",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_54" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Heures",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "number_17" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "sum_Capacite_ETP",
          "numberColor" : "#E6ECF2",
          "numberSize" : 24,
          "showActionMenu" : false,
          "step" : "Capacite_ETP_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_55" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "d8e11d09-96d5-435c-95f5-5ace2f9eb220"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "ETP",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "number_16" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "MoyenneCapacite",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : false,
          "step" : "Capacite_Date_Week_a_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_52" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Global",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "number_15" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "CapaciteMoyenne",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : false,
          "step" : "Capacite_ETP_Date_We_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_53" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "d8e11d09-96d5-435c-95f5-5ace2f9eb220"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "ETP",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "number_14" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "sum_Interim",
          "numberColor" : "#FFFFFF",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "Val_Interim",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_50" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "3db0fdf1-f83a-4b58-992c-2710a9382ddb"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Simuler le Planning",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "number_13" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "sum_Renouvellement_Compteurs",
          "numberColor" : "#FFFFFF",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "Val_Renou_Compteurs",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_51" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Par Profil",
          "textAlignment" : "center",
          "textColor" : "rgb(0, 95, 178)"
        },
        "type" : "link"
      },
      "link_60" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Heures",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_2" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_3" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_4" : {
        "parameters" : {
          "alignmentX" : "center",
          "alignmentY" : "bottom",
          "fit" : "fitwidth"
        },
        "type" : "container"
      },
      "container_5" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_6" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_7" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_8" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_9" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_20" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "totalSumMode" : "none",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "stackvbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "split" : [
              "Activite"
            ],
            "trellis" : [ ],
            "dimensionAxis" : [
              "Date_Week"
            ],
            "plots" : [
              "ChargeAllouee"
            ]
          },
          "showActionMenu" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "normalize" : false,
          "theme" : "dark",
          "step" : "PlanningSemaineActivite",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_47" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "D√©tail"
          },
          "fontSize" : 18,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "filterpanel_1" : {
        "parameters" : {
          "filterItemOptions" : {
            "backgroundColor" : "#FFFFFF",
            "borderColor" : "#FFFFFF",
            "borderRadius" : 4,
            "borderWidth" : 1,
            "propertyColor" : "rgb(84, 105, 141)",
            "valueColor" : "rgb(22, 50, 92)"
          },
          "filters" : [ ],
          "itemsPerRow" : 4,
          "showAllFilters" : true,
          "title" : {
            "separatorColor" : "#E6ECF2",
            "text" : {
              "align" : "left",
              "color" : "#091A3E",
              "fontSize" : 16,
              "label" : "Filters"
            },
            "visible" : false
          }
        },
        "type" : "filterpanel"
      },
      "text_46" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Charge Totale"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "link_65" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Heures",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "text_49" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Pr√©dictions de Charge - Recommandations Intelligentes (Heures) "
          },
          "fontSize" : 18,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_48" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "D√©tail Simulation Planning (Heures)"
          },
          "fontSize" : 18,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_43" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "(Activit√© PRODUCTION / TRAITEMENT)"
          },
          "fontSize" : 12,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "link_63" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "02bf748c-fe4e-4139-a94b-af73c37706fd"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Visionner les Capacit√©s",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_64" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "ETP",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "text_45" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "(Autres Activit√©s)"
          },
          "fontSize" : 12,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "link_61" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "d8e11d09-96d5-435c-95f5-5ace2f9eb220"
          },
          "destinationType" : "page",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "ETP",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "text_44" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "(Activit√© RELEVE COMPTEURS)"
          },
          "fontSize" : 12,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "link_62" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "147f03f9-5baa-4509-a46c-d9d8dcfa9bc3"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Comparer Charge/Capacit√©",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_41" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Capacit√© Interim"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_40" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Renouvellement Compteurs"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "chart_19" : {
        "parameters" : {
          "centerText" : "",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "pie",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 60,
          "columnMap" : {
            "trellis" : [ ],
            "dimension" : [
              "Profil"
            ],
            "plots" : [
              "sum_Capacite"
            ]
          },
          "showActionMenu" : true,
          "centerValueType" : "none",
          "valueType" : "percent",
          "theme" : "light",
          "step" : "Profil_1",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_18" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "Secteur"
            ],
            "plots" : [
              "sum_Capacite_ETP"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "Secteur_7",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_17" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "totalSumMode" : "none",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "missingValue" : "connect",
          "visualizationType" : "time",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : true,
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "split" : [ ],
            "timeAxis" : [
              "Date_Week"
            ],
            "trellis" : [ ],
            "plots" : [
              "sum_Capacite_ETP"
            ]
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "referenceLines" : [
              {
                "label" : {
                  "data" : "Moy.",
                  "type" : "static"
                },
                "value" : {
                  "data" : {
                    "field" : "CapaciteMoyenne",
                    "sourceType" : "result",
                    "step" : "Capacite_ETP_Date_We_1"
                  },
                  "type" : "dynamic"
                }
              }
            ],
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "normalize" : false,
          "valueType" : "none",
          "theme" : "dark",
          "step" : "Date_Week_3",
          "applyConditionalFormatting" : true,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "listselector_11" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListSecteurPlan",
          "title" : "Secteur"
        },
        "type" : "listselector"
      },
      "chart_16" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "showValues" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "exploreLink" : true,
          "binValues" : false,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "Opportunity.CloseDate_Year~~~Opportunity.CloseDate_Month"
            ],
            "plots" : [
              "avg_SBQQ__AdditionalDiscount__c"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            },
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "listselector_10" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListAnneePlan",
          "title" : "Ann√©e"
        },
        "type" : "listselector"
      },
      "chart_15" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "showValues" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "exploreLink" : true,
          "binValues" : false,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "Opportunity.CloseDate_Year~~~Opportunity.CloseDate_Month"
            ],
            "plots" : [
              "sum_SBQQ__CustomerTotal__c"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            },
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "chart_14" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "showValues" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "exploreLink" : true,
          "binValues" : false,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "Opportunity.CloseDate_Year~~~Opportunity.CloseDate_Month"
            ],
            "plots" : [
              "sum_SBQQ__Discount__c"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            },
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "image_2" : {
        "parameters" : {
          "alignmentX" : "center",
          "alignmentY" : "center",
          "fit" : "fitheight",
          "image" : {
            "name" : "${App.Images['QuotingLogo'].Name}",
            "namespace" : "${Org.Namespace}"
          }
        },
        "type" : "image"
      },
      "chart_13" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "vbar",
          "exploreLink" : true,
          "timeAxis" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "Date_Month"
            ],
            "plots" : [
              "sum_Capacite_ETP"
            ]
          },
          "showActionMenu" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "Date_Month_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_12" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "sync",
          "totalSumMode" : "none",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "stackvbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "split" : [
              "Activite"
            ],
            "trellis" : [ ],
            "dimensionAxis" : [
              "Date_Week"
            ],
            "plots" : [
              "Charges_Totales"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "normalize" : false,
          "theme" : "dark",
          "step" : "EvolutionChargeParActivite",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          }
        },
        "type" : "chart"
      },
      "chart_11" : {
        "parameters" : {
          "showValues" : true,
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "highColor" : "#009DDF",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "line",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "showZero" : true,
          "valueType" : "none",
          "theme" : "light",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          },
          "autoFitMode" : "keepLabels",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "lowColor" : "#E2F4FC",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "columnMap" : {
            "split" : [
              "Secteur"
            ],
            "trellis" : [ ],
            "dimensionAxis" : [
              "Date_Month"
            ],
            "plots" : [
              "sum_Capacite"
            ]
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "x" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "y" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "Date_Month_Secteur_2"
        },
        "type" : "chart"
      },
      "chart_10" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "sync",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "vbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "Date_Month"
            ],
            "plots" : [
              "sum_Capacite"
            ]
          },
          "showActionMenu" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "Date_Year_Date_Month_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_30" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "columnMap" : {
            "r" : [
              "sum_Capacite_ETP"
            ],
            "color" : [
              "sum_Capacite_ETP"
            ],
            "x" : [
              "Date_Month"
            ],
            "y" : [
              "Secteur",
              "Profil"
            ]
          },
          "showActionMenu" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "highColor" : "#009DDF",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "lowColor" : "#E2F4FC",
          "x" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "y" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "theme" : "wave",
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_39" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance Op√©rationnelle"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_36" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Capacit√© Totale"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_35" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Capacit√© Moyenne"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_38" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Productivit√© Rel√®ve"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_37" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Interventions P√©riodiques"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_32" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Taux de Charge"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_31" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 20,
          "showActionMenu" : false,
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_34" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Capacit√© Totale"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_33" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Faites varier les deux variables ci-dessous pour mesurer l'impact de ces variations sur la charge (*)"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_30" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Comparaison Secteurs"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_27" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "highColor" : "#009DDF",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "lowColor" : "#E2F4FC",
          "visualizationType" : "matrix",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "columnMap" : {
            "r" : [
              "sum_Capacite_ETP"
            ],
            "color" : [
              "sum_Capacite_ETP"
            ],
            "x" : [
              "Date_Month"
            ],
            "y" : [
              "Secteur",
              "Profil"
            ]
          },
          "showActionMenu" : true,
          "x" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "y" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "theme" : "wave",
          "step" : "Date_Month_Secteur_P_1",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_26" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "plots" : [
            {
              "column" : [
                "sum_Capacite_ETP"
              ]
            }
          ],
          "fillArea" : true,
          "columnMap" : {
            "split" : [
              "Secteur"
            ],
            "trellis" : [ ],
            "dimensionAxis" : [
              "Date_Month"
            ],
            "plots" : [
              "sum_Capacite_ETP"
            ]
          },
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "light",
          "step" : "Date_Month_Secteur_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "chart_25" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "highColor" : "#009DDF",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "lowColor" : "#E2F4FC",
          "visualizationType" : "matrix",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "columnMap" : {
            "r" : [
              "sum_Capacite"
            ],
            "color" : [
              "sum_Capacite"
            ],
            "x" : [
              "Date_Month"
            ],
            "y" : [
              "Secteur",
              "Profil"
            ]
          },
          "showActionMenu" : true,
          "x" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "y" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "theme" : "wave",
          "step" : "Secteur_Profil_Date__2",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_24" : {
        "parameters" : {
          "centerText" : "",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "pie",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 60,
          "columnMap" : {
            "trellis" : [ ],
            "dimension" : [
              "Profil"
            ],
            "plots" : [
              "sum_Capacite_ETP"
            ]
          },
          "showActionMenu" : true,
          "centerValueType" : "none",
          "valueType" : "percent",
          "theme" : "light",
          "step" : "Profil_4",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_23" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "Secteur"
            ],
            "plots" : [
              "sum_Capacite"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "Secteur_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_22" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "totalSumMode" : "none",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "time",
          "missingValue" : "connect",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : true,
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "split" : [ ],
            "timeAxis" : [
              "Date_Week"
            ],
            "trellis" : [ ],
            "plots" : [
              "sum_Capacite"
            ]
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "referenceLines" : [
              {
                "label" : {
                  "data" : "Moy.",
                  "type" : "static"
                },
                "value" : {
                  "data" : {
                    "field" : "MoyenneCapacite",
                    "sourceType" : "result",
                    "step" : "Capacite_Date_Week_a_1"
                  },
                  "type" : "dynamic"
                }
              }
            ],
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "normalize" : false,
          "valueType" : "none",
          "theme" : "dark",
          "step" : "Date_Week_2",
          "applyConditionalFormatting" : true,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "chart_21" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "totalSumMode" : "none",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "vbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "normalize" : false,
          "theme" : "dark",
          "step" : "Date_Week_1_1",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          }
        },
        "type" : "chart"
      },
      "listselector_7" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListProfilCP",
          "title" : "Profil"
        },
        "type" : "listselector"
      },
      "listselector_6" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListSecteurCP",
          "title" : "Secteur"
        },
        "type" : "listselector"
      },
      "listselector_8" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListAnneeCP",
          "title" : "Ann√©e"
        },
        "type" : "listselector"
      },
      "text_29" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Trajet (%)"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "listselector_3" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListProfil",
          "title" : "Profil"
        },
        "type" : "listselector"
      },
      "text_28" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Administratif (%)"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "listselector_2" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListSecteur",
          "title" : "Secteur"
        },
        "type" : "listselector"
      },
      "listselector_5" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListActivite",
          "title" : "Activit√©"
        },
        "type" : "listselector"
      },
      "listselector_4" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "measureField" : "none",
          "showActionMenu" : false,
          "step" : "ListAnnee",
          "title" : "Ann√©e"
        },
        "type" : "listselector"
      },
      "text_25" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Classement par Secteur"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_24" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Charge Moyenne"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_27" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Am√©lioration - SLAs (%)\n"
          },
          "fontSize" : 18,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_26" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Plan de Charge de l'ann√©e 2020 par Profil"
          },
          "fontSize" : 18,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_21" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Charge Totale"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_20" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Evolution 2020"
          },
          "fontSize" : 18,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#E6ECF2"
        },
        "type" : "text"
      },
      "text_23" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Visionner en"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_22" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "R√©partition par Profil"
          },
          "fontSize" : 16,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "listselector_1" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#17324D"
          },
          "instant" : true,
          "showActionMenu" : false,
          "title" : ""
        },
        "type" : "listselector"
      },
      "chart_32" : {
        "parameters" : {
          "centerText" : "",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 60,
          "columnMap" : {
            "trellis" : [ ],
            "dimension" : [
              "Profil"
            ],
            "plots" : [
              "sum_Capacite_ETP"
            ]
          },
          "showActionMenu" : true,
          "centerValueType" : "none",
          "valueType" : "percent",
          "theme" : "light",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      }
    }
  }
}