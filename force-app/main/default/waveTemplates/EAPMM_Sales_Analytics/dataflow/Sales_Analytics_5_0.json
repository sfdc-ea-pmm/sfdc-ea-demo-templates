{
  "isDeletable": true,
  "notificationLevel": "Never",
  "workflowDefinition": {
    "Filter_ForecastQuota": {
      "action": "filter",
      "parameters": {
        "filter": "Type_DeveloperName:EQ:OpportunityRevenue",
        "source": "Join_ForecastQuota_ForecastType"
      }
    },
    "Extract_PricebookEntry": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "Product2Id"}
        ],
        "object": "PricebookEntry"
      }
    },
    "Extract_Opportunity": {
      "schema": {"objects": [{"fields": [
        {
          "name": "CloseDate",
          "label": "CloseDate"
        },
        {
          "name": "CreatedDate",
          "label": "CreatedDate"
        }
      ]}]},
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "AccountId"},
          {"name": "OwnerId"},
          {"name": "Name"},
          {"name": "StageName"},
          {"name": "LeadSource"},
          {"name": "IsWon"},
          {"name": "Type"},
          {"name": "IsClosed"},
          {"name": "ForecastCategory"},
          {"name": "ForecastCategoryName"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CreatedDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CloseDate"
          },
          {"name": "Amount"},
          {"name": "CreatedById"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastModifiedDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastActivityDate"
          },
          {"name": "HasOpportunityLineItem"},
          {"name": "RecordTypeId"},
          {"name": "DateTimeCreated__c"},
          {"name": "LastActivityDate__c"},
          {"name": "LastModifiedDate__c"},
          {"name": "External_ID__c"},
          {"name": "Competitor_EDD_c__c"},
          {"name": "EDD_Prescription__c"},
          {"name": "EDD_Leading_Causes__c"},
          {"name": "EDD_Age__c"},
          {"name": "Predicted_Close_Date__c"},
          {"name": "EDD_Outcome__c"},
          {"name": "EDD_CreatedDate__c"},
          {"name": "Discount_Approved__c"},
          {"name": "Close_Date_Difference__c"},
          {"name": "Opportunity_Score_Dummy__c"},
          {"name": "OpportunityScoreId"},
          {"name": "DemoShow__c"}
        ],
        "object": "Opportunity"
      }
    },
    "Join_LeadOwner": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Compute_CurrentDateForLeads",
        "left_key": ["OwnerId"],
        "right_select": [
          "Name",
          "Username",
          "UserRoleId",
          "UserManager_Name",
          "UserManagerNames",
          "UniqueUserName",
          "UserManager_UniqueUserName",
          "FullPhotoUrl",
          "SmallPhotoUrl",
          "Role_Name",
          "Role_DeveloperName",
          "Role_Roles",
          "Role_RolePath",
          "Role_ParentRoleId",
          "Role_ParentRole_Name",
          "Role_ParentRole_DeveloperName",
          "Role_ParentRole_ForecastManager_UniqueUserName",
          "Role_RoleNames",
          "Role_RoleNamesPath",
          "Role_Hierarchy_RoleNames"
        ],
        "right": "User_with_Roles",
        "relationship": "Owner"
      }
    },
    "Extract_Product": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "ProductCode"},
          {"name": "Name"},
          {"name": "Family"}
        ],
        "object": "Product2"
      }
    },
    "Join_LeadOwnerOpportunity": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Compute_Lead_Name_or_Queue",
        "left_key": ["ConvertedOpportunityId"],
        "right_select": [
          "Name",
          "StageName",
          "CloseDate",
          "IsWon",
          "IsLost",
          "Type",
          "IsClosed",
          "OpenClosedWonLost",
          "LeadSource",
          "ForecastCategory",
          "ForecastCategoryName",
          "CreatedDate",
          "AccountId",
          "OwnerId",
          "Owner_Name",
          "Ownerâ€“UserManager_Name",
          "Owner_UserManagerNames",
          "Owner_UserManager_UniqueUserName",
          "Owner_UniqueUserName",
          "Owner_Role_Name",
          "Owner_Role_DeveloperName",
          "Owner_Role_Roles",
          "Owner_Role_RolePath",
          "Owner_Role_ParentRoleId",
          "OpportunityAge",
          "DaysSinceLastActivity",
          "DaysPastDue",
          "IsPastDue",
          "Neglected",
          "Account_Parent_ParentAccount_Name",
          "Account_Parent_ParentAccount_OwnerId",
          "Account_Parent_ParentAccount_BillingState",
          "Account_Parent_ParentAccount_ShippingState",
          "Account_Parent_AccountParents",
          "Competitor_EDD_c__c",
          "EDD_Prescription__c",
          "EDD_Leading_Causes__c",
          "EDD_Age__c",
          "Predicted_Close_Date__c",
          "EDD_Outcome__c",
          "EDD_CreatedDate__c",
          "Discount_Approved__c",
          "Close_Date_Difference__c",
          "DemoShow__c"
        ],
        "right": "Opportunity_add_closed_won",
        "relationship": "ConvertedOpportunity"
      }
    },
    "Join_User_Manager": {
      "action": "augment",
      "parameters": {
        "right_key": ["ManagerId"],
        "left": "Compute_Manager_Unique",
        "left_key": ["Id"],
        "right_select": [
          "Name",
          "Username",
          "FullPhotoUrl",
          "SmallPhotoUrl",
          "UserRoleId",
          "Id",
          "UniqueUserName"
        ],
        "right": "Compute_Manager_Unique",
        "relationship": "UserManager"
      }
    },
    "Compute_CurrentDateForLeads": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_Lead_Score",
        "computedFields": [{
          "name": "CurrentDate",
          "saqlExpression": "now()",
          "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "label": "CurrentDate",
          "type": "Date"
        }],
        "mergeWithSource": true
      }
    },
    "Join_ActivityOwner_Product_Opp_User": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_ActivityOwner_Product_Opp",
        "left_key": ["OwnerId"],
        "right_select": [
          "Name",
          "UniqueUserName"
        ],
        "right": "Flatten_UserManager",
        "relationship": "AssignedTo"
      }
    },
    "Extract_Case": {
      "schema": {"objects": [{"fields": [{
        "name": "CreatedDate",
        "label": "CreatedDate"
      }]}]},
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "AccountId"},
          {"name": "ContactId"},
          {"name": "OwnerId"},
          {"name": "Id"},
          {"name": "IsClosed"},
          {"name": "Origin"},
          {"name": "Type"},
          {"name": "Subject"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastModifiedDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CreatedDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "ClosedDate"
          },
          {"name": "IsEscalated"},
          {"name": "Status"},
          {"name": "CaseNumber"},
          {"name": "CreatedDate__c"},
          {"name": "ClosedDate__c"},
          {"name": "External_ID__c"}
        ],
        "object": "Case"
      }
    },
    "Extract_OpportunityStage": {
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "IsClosed"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CreatedDate"
          },
          {"name": "Description"},
          {"name": "ForecastCategory"},
          {"name": "ForecastCategoryName"},
          {"name": "IsActive"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastModifiedDate"
          },
          {"name": "MasterLabel"},
          {"name": "Id"},
          {"name": "DefaultProbability"},
          {
            "defaultValue": "0",
            "name": "SortOrder"
          },
          {"name": "SystemModstamp"},
          {"name": "IsWon"}
        ],
        "object": "OpportunityStage"
      }
    },
    "Join_OpportunityStage_Previous_with_Opp": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_Time_In_Current_Stage_to_Pipeline_Trending",
        "left_key": ["OpportunityId"],
        "right_select": [
          "Id",
          "AccountId",
          "OwnerId",
          "Name",
          "StageName",
          "LeadSource",
          "IsWon",
          "Type",
          "IsClosed",
          "ForecastCategoryName",
          "CloseDate",
          "RecordTypeId",
          "Competitor_EDD_c__c",
          "EDD_Prescription__c",
          "EDD_Leading_Causes__c",
          "EDD_Age__c",
          "Predicted_Close_Date__c",
          "EDD_Outcome__c",
          "EDD_CreatedDate__c",
          "Discount_Approved__c",
          "Close_Date_Difference__c",
          "Opportunity_Score_Dummy__c",
          "Stage_SortOrder",
          "RecordType_Name",
          "IsLost",
          "Account_Name",
          "Account_OwnerId",
          "Account_AccountSource",
          "Account_Type",
          "Account_Industry",
          "Account_BillingState",
          "Account_ShippingState",
          "Account_Parent_AccountParents",
          "Account_Parent_ParentAccount_Name",
          "Account_Parent_ParentAccount_OwnerId",
          "Account_Parent_ParentAccount_BillingState",
          "Account_Parent_ParentAccount_ShippingState",
          "Account_Owner_Name",
          "Owner_Name",
          "Owner_FullPhotoUrl",
          "Owner_SmallPhotoUrl",
          "Owner_UniqueUserName",
          "Ownerâ€“UserManager_Name",
          "Owner_UserManager_UniqueUserName",
          "Owner_UserManagerNames",
          "Owner_Role_RoleNames",
          "Owner_Role_Hierarchy_RoleNames",
          "Owner_Role_Name",
          "Owner_Role_DeveloperName",
          "Owner_Role_ParentRoleId",
          "Owner_Role_Roles",
          "Owner_Role_RolePath",
          "Owner_Role_ParentRole_Name",
          "Owner_Role_ParentRole_DeveloperName",
          "Owner_Role_ParentRole_ForecastManager_UniqueUserName",
          "OpenClosedWonLost",
          "OpportunityScore",
          "OpptyScore_Score",
          "OpptyScore_Insights",
          "DemoShow__c"
        ],
        "right": "Opportunity_add_closed_won",
        "relationship": "Opportunity",
        "operation": "LookupSingleValue"
      }
    },
    "Join_OpportunityStage_Previous_with_Opp_Amount": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_OpportunityStage_Previous_with_Opp",
        "left_key": ["OpportunityId"],
        "right_select": ["Amount"],
        "right": "Extract_OpportunityAmount",
        "relationship": "Opportunity"
      }
    },
    "Compute_UltimateParent": {
      "action": "computeExpression",
      "parameters": {
        "source": "Flatten_UltimateParent",
        "computedFields": [{
          "name": "UltimateParentId",
          "saqlExpression": "substr(UltimateParentPath, len(UltimateParentPath)-17,18)",
          "type": "Text"
        }],
        "mergeWithSource": true
      }
    },
    "Extract_Event_merge": {
      "action": "append",
      "parameters": {
        "enableDisjointedSchemaMerge": true,
        "sources": [
          "Extract_Event_get_Demo_Data_rename_fields",
          "Extract_Event_get_Users_Data"
        ]
      }
    },
    "Flatten_UltimateParent": {
      "schema": {"objects": [{
        "label": "Flatten_UltimateParent",
        "fields": [
          {
            "name": "UltimateParentPath",
            "label": "UltimateParentPath",
            "isSystemField": false
          },
          {
            "name": "AccountParents",
            "label": "AccountParents",
            "isSystemField": false
          }
        ]
      }]},
      "action": "flatten",
      "parameters": {
        "include_self_id": true,
        "self_field": "Id",
        "multi_field": "AccountParents",
        "parent_field": "ParentId",
        "path_field": "UltimateParentPath",
        "source": "Add_Fields_To_Account"
      }
    },
    "Extract_Case_get_Demo_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:N:''",
        "source": "Extract_Case"
      }
    },
    "Extract_Lead": {
      "schema": {"objects": [{"fields": [{
        "name": "CreatedDate",
        "label": "CreatedDate"
      }]}]},
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "Name"},
          {"name": "OwnerId"},
          {
            "defaultValue": "N/A",
            "name": "Company"
          },
          {"name": "ConvertedAccountId"},
          {"name": "ConvertedContactId"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "ConvertedDate"
          },
          {"name": "ConvertedOpportunityId"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CreatedDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastModifiedDate"
          },
          {"name": "IsConverted"},
          {"name": "IsUnreadByOwner"},
          {
            "defaultValue": "N/A",
            "name": "Status"
          },
          {
            "defaultValue": "N/A",
            "name": "LeadSource"
          },
          {
            "defaultValue": "-N/A",
            "name": "Rating"
          },
          {
            "defaultValue": "N/A",
            "name": "Industry"
          },
          {
            "defaultValue": "N/A",
            "name": "State"
          }
        ],
        "object": "Lead"
      }
    },
    "Join_Time_In_Current_Stage_to_Pipeline_Trending": {
      "action": "augment",
      "parameters": {
        "right_key": ["OpportunityId"],
        "left": "Join_ForecastCategory_Previous",
        "left_key": ["OpportunityId"],
        "right_select": ["Duration_Seconds"],
        "right": "Calculate_Current_Stage_Duration",
        "relationship": "Time_In_Current_Stage"
      }
    },
    "User_with_Roles_Forecasting_Hierarchy": {
      "_comment": "Get user's role hierarchy",
      "action": "augment",
      "parameters": {
        "right_key": ["UniqueUserName"],
        "left": "Flatten_UserManager",
        "left_key": ["UniqueUserName"],
        "right_select": [
          "RoleNames",
          "RoleNamesPath",
          "Hierarchy_RoleNames"
        ],
        "right": "Flatten_Hierarchy_Grouping",
        "relationship": "Role"
      }
    },
    "Join_OpportunityStage": {
      "action": "augment",
      "parameters": {
        "right_key": ["MasterLabel"],
        "left": "Add_Fields_to_OpportunityHistory",
        "left_key": ["StageName"],
        "right_select": [
          "IsClosed",
          "IsWon",
          "SortOrder"
        ],
        "right": "Extract_OpportunityStage",
        "relationship": "Stage"
      }
    },
    "Extract_Task_get_Demo_Data_rename_fields": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Task_get_Demo_Data_drop_CreatedDate",
        "mergeWithSource": true,
        "computedFields": [{
          "default": "",
          "name": "CreatedDate",
          "saqlExpression": "toDate(CreatedDate__c, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")",
          "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "label": "CreatedDate",
          "type": "Date"
        }]
      }
    },
    "Extract_Case_get_Demo_Data_drop_Dates": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Case_get_Demo_Data",
        "fields": [
          {"name": "CreatedDate"},
          {"name": "ClosedDate"}
        ]
      }
    },
    "Register_Activity": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "'Owner_Role_Roles' == \"$User_UserRoleId\" || 'OwnerId' == \"$User_Id\" || 'Opportunity_Account_OwnerId' == \"$User_Id\"",
        "name": "Activities",
        "alias": "${App.Datasets.activity_tp.FullyQualifiedName}",
        "source": "Filter_Activity"
      }
    },
    "Join_ActivityOwner_Product": {
      "action": "augment",
      "parameters": {
        "right_key": ["OpportunityId"],
        "left": "Join_ActivityOwner",
        "left_key": ["WhatId"],
        "right_select": [
          "Product_Name",
          "Product_Family",
          "Opportunity_Competitor_EDD_c__c",
          "Opportunity_EDD_Prescription__c",
          "Opportunity_EDD_Leading_Causes__c",
          "Opportunity_EDD_Age__c",
          "Opportunity_Predicted_Close_Date__c",
          "Opportunity_EDD_Outcome__c",
          "Opportunity_EDD_CreatedDate__c",
          "Opportunity_Discount_Approved__c",
          "Opportunity_Close_Date_Difference__c",
          "Opportunity_DemoShow__c",
          "Opportunity_Name"
        ],
        "right": "Add_Fields_To_Oppty_Product",
        "relationship": "Opportunity",
        "operation": "LookupMultiValue"
      }
    },
    "Calculate_Current_Stage_Duration": {
      "action": "computeExpression",
      "parameters": {
        "source": "Filter_Out_Last_Stage_Updates",
        "mergeWithSource": true,
        "computedFields": [{
          "precision": 18,
          "name": "Duration_Seconds",
          "saqlExpression": "date_diff(\"second\",toDate(ValidFromDate_sec_epoch), now())",
          "scale": 0,
          "label": "Duration",
          "type": "Numeric"
        }]
      }
    },
    "Compute_Activity_IsOverdue": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_ActivityOwner_Product_Opp_User_Account",
        "computedFields": [{
          "name": "IsOverdue",
          "saqlExpression": "case when ('IsClosed' == \"false\") && (daysBetween(toDate(substr('ActivityDate', 1, 10), \"yyyy-MM-dd\"), now()) > 0) then \"true\" else \"false\" end",
          "label": "IsOverdue",
          "type": "Text"
        }],
        "mergeWithSource": true
      }
    },
    "Register_UserRole": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "name": "Roles",
        "alias": "${App.Datasets.user_role_tp.FullyQualifiedName}",
        "source": "Flatten_Hierarchy_Grouping"
      }
    },
    "Join_Role_on_ForecastUser": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Filter_For_Forecast_Users",
        "left_key": ["UserRoleId"],
        "right_select": [
          "Name",
          "ParentRoleId",
          "ParentRole_Name",
          "ForecastManager_Name",
          "ForecastManager_UniqueUserName",
          "ParentRole_ForecastManager_Name",
          "ParentRole_ForecastManager_UniqueUserName"
        ],
        "right": "Augment_ParentName",
        "relationship": "Role"
      }
    },
    "compute_CurrentDateForCase": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Case_cleaned",
        "computedFields": [{
          "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "name": "CurrentDate",
          "saqlExpression": "now()",
          "label": "CurrentDate",
          "type": "Date"
        }],
        "mergeWithSource": true
      }
    },
    "Register_Product": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "",
        "name": "Products",
        "alias": "${App.Datasets.product_tp.FullyQualifiedName}",
        "source": "Extract_Product"
      }
    },
    "Extract_Task_get_Users_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:EQ:''",
        "source": "Extract_Task"
      }
    },
    "Augment_ParentName": {
      "_comment": "get parent role's rolename",
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Flatten_UserRole",
        "left_key": ["ParentRoleId"],
        "right_select": [
          "Name",
          "DeveloperName",
          "ForecastManager_Name",
          "ForecastManager_UniqueUserName",
          "ForecastManager_ForecastEnabled",
          "ParentRoleId"
        ],
        "right": "Join_RoleUser",
        "relationship": "ParentRole"
      }
    },
    "Create_IsLastStageUpdate_Field": {
      "action": "computeExpression",
      "parameters": {
        "source": "Find_Last_Stage_Updates",
        "mergeWithSource": true,
        "computedFields": [{
          "name": "IsLastStageUpdate",
          "saqlExpression": "case when 'LastStageUpdate_Id' == 'Id' then \"1\" else \"0\" end",
          "label": "IsLastStageUpdate",
          "type": "Text"
        }]
      }
    },
    "Join_OpportunityOpportunityStage": {
      "action": "augment",
      "parameters": {
        "right_key": ["MasterLabel"],
        "left": "Add_Neglected_To_Opportunity",
        "left_key": ["StageName"],
        "right_select": [
          "SortOrder",
          "DefaultProbability"
        ],
        "right": "Extract_OpportunityStage",
        "relationship": "Stage"
      }
    },
    "Add_Fields_To_Account": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Account_cleaned",
        "computedFields": [{
          "name": "AccountName",
          "saqlExpression": "'Name'",
          "label": "Account Name",
          "type": "Text"
        }],
        "mergeWithSource": true
      }
    },
    "Filter_Opportunity_Products": {
      "action": "filter",
      "parameters": {
        "filter": "CustomFilter:EQ:true",
        "source": "Opportunity_Products_Custom_Filter_Flag"
      }
    },
    "Filter_Out_Stage_Updates": {
      "action": "filter",
      "parameters": {
        "filter": "Stage_isUpdated:EQ:1",
        "source": "Add_Fields_to_OpportunityHistory"
      }
    },
    "Extract_Task_merge": {
      "action": "append",
      "parameters": {
        "enableDisjointedSchemaMerge": true,
        "sources": [
          "Extract_Task_get_Demo_Data_rename_fields",
          "Extract_Task_get_Users_Data"
        ]
      }
    },
    "Compute_Activity_Days_Overdue": {
      "action": "computeExpression",
      "parameters": {
        "source": "Compute_Activity_IsOverdue",
        "computedFields": [{
          "defaultValue": "0",
          "precision": 18,
          "name": "DaysOverdue",
          "saqlExpression": "case when 'IsOverdue' == \"true\" then daysBetween(toDate(substr('ActivityDate', 1, 10), \"yyyy-MM-dd\"), now()) else 0 end",
          "scale": 2,
          "label": "Days Overdue",
          "type": "Numeric"
        }],
        "mergeWithSource": true
      }
    },
    "Discount_Field": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_OpportunityLineItem",
        "mergeWithSource": true,
        "computedFields": [
          {
            "precision": 7,
            "name": "Discount_Percent",
            "saqlExpression": "1-(('TotalPrice')/('ListPrice' * 'Quantity'))",
            "scale": 6,
            "type": "Numeric"
          },
          {
            "precision": 7,
            "name": "Total_ListPrice",
            "saqlExpression": "'ListPrice' * 'Quantity'",
            "scale": 6,
            "type": "Numeric"
          }
        ]
      }
    },
    "Filter_Opportunity": {
      "action": "filter",
      "parameters": {
        "filter": "CustomFilter:EQ:true",
        "source": "Opportunity_Custom_Filter_Flag"
      }
    },
    "Join_ForecastCategory": {
      "action": "augment",
      "parameters": {
        "right_key": ["ForecastCategory"],
        "left": "Join_OpportunityStage_Previous",
        "left_key": ["ForecastCategory"],
        "right_select": ["ForecastCategoryName"],
        "right": "Extract_OpportunityStage",
        "relationship": "ForecastCategory"
      }
    },
    "Extract_OpportununityScore": {
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "Id"},
          {"name": "Insights"},
          {"name": "Score"},
          {"name": "BaseId"}
        ],
        "object": "OpportunityScore"
      }
    },
    "Compute_Manager_Unique": {
      "action": "computeExpression",
      "parameters": {
        "source": "Compute_Unique_Name",
        "mergeWithSource": true,
        "computedFields": [{
          "name": "UniqueUserName",
          "saqlExpression": "case when isDuplicate is null then 'Name' else 'Name' + \" (\" +'Username'+ \")\" end",
          "type": "Text"
        }]
      }
    },
    "Join_LeadQueue": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_LeadOwner",
        "left_key": ["OwnerId"],
        "right_select": [
          "Name",
          "Type"
        ],
        "right": "Extract_Queue",
        "relationship": "Queue"
      }
    },
    "Join_OpportunityLineItemPricebookEntry": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Discount_Field",
        "left_key": ["PricebookEntryId"],
        "right_select": ["Product2Id"],
        "right": "Extract_PricebookEntry",
        "relationship": "Pricebook"
      }
    },
    "Extract_Task": {
      "schema": {"objects": [{"fields": [
        {
          "name": "ActivityDate",
          "label": "ActivityDate"
        },
        {
          "name": "CreatedDate",
          "label": "CreatedDate"
        }
      ]}]},
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "Id"},
          {"name": "CallDurationInSeconds"},
          {"name": "CallDisposition"},
          {"name": "CallType"},
          {"name": "OwnerId"},
          {"name": "Status"},
          {"name": "Priority"},
          {"name": "IsClosed"},
          {"name": "TaskSubtype"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CreatedDate"
          },
          {"name": "External_ID__c"},
          {"name": "CreatedDate__c"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "ActivityDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastModifiedDate"
          },
          {"name": "Subject"},
          {"name": "WhatId"},
          {"name": "AccountId"}
        ],
        "object": "Task"
      }
    },
    "Join_AccountOwner": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_Parent_on_Account",
        "left_key": ["OwnerId"],
        "right_select": [
          "Name",
          "Username",
          "UserRoleId",
          "UserManager_Name",
          "UserManagerNames",
          "UniqueUserName",
          "UserManager_UniqueUserName",
          "FullPhotoUrl",
          "SmallPhotoUrl",
          "Role_Name",
          "Role_DeveloperName",
          "Role_Roles",
          "Role_RolePath",
          "Role_ParentRoleId",
          "Role_ParentRole_Name",
          "Role_ParentRole_DeveloperName",
          "Role_ParentRole_ForecastManager_UniqueUserName",
          "Role_RoleNames",
          "Role_RoleNamesPath",
          "Role_Hierarchy_RoleNames"
        ],
        "right": "User_with_Roles",
        "relationship": "Owner"
      }
    },
    "Join_Parent_on_Account": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Add_Fields_To_Account",
        "left_key": ["Id"],
        "right_select": [
          "Name",
          "UltimateParentId",
          "ParentAccount_Name",
          "ParentAccount_OwnerId",
          "ParentAccount_BillingState",
          "ParentAccount_ShippingState",
          "AccountParents"
        ],
        "right": "Augment_ParentAccountName",
        "relationship": "Parent"
      }
    },
    "Join_RoleUser": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Extract_UserRole",
        "left_key": ["ForecastUserId"],
        "right_select": [
          "Name",
          "UniqueUserName",
          "ForecastEnabled"
        ],
        "right": "Filter_For_Forecast_Users",
        "relationship": "ForecastManager"
      }
    },
    "Extract_Account_get_Users_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:EQ:''",
        "source": "Extract_Account"
      }
    },
    "Append_TaskEvent": {
      "action": "append",
      "parameters": {"sources": [
        "Add_Fields_To_Task",
        "Add_Fields_To_Event"
      ]}
    },
    "Join_ForecastCategory_Previous": {
      "action": "augment",
      "parameters": {
        "right_key": ["ForecastCategory"],
        "left": "Join_ForecastCategory",
        "left_key": ["ForecastCategoryPrev"],
        "right_select": ["ForecastCategoryName"],
        "right": "Extract_OpportunityStage",
        "relationship": "ForecastCategoryPrev"
      }
    },
    "Add_Fields_to_OpportunityHistory": {
      "action": "computeExpression",
      "parameters": {
        "source": "Compute_Historical_Trending_Fields",
        "computedFields": [
          {
            "defaultValue": "\"1\"",
            "name": "Stage_isUpdated",
            "saqlExpression": "case when 'StageName' == 'StageNamePrev' then \"0\" else \"1\" end",
            "type": "Text"
          },
          {
            "defaultValue": "\"1\"",
            "name": "CloseDate_isUpdated",
            "saqlExpression": "case when 'CloseDatePrev' == 'CloseDate' then \"0\" else \"1\" end",
            "type": "Text"
          },
          {
            "defaultValue": "\"1\"",
            "name": "Amount_isUpdated",
            "saqlExpression": "case when 'AmountPrev' == 'Amount' then \"0\" else \"1\" end",
            "type": "Text"
          },
          {
            "name": "IsLastUpdate",
            "saqlExpression": "case when 'ValidToDate' == \"3000-01-01T00:00:00.000Z\" then \"1\" else \"0\" end",
            "label": "IsLastUpdate",
            "type": "Text"
          },
          {
            "precision": 8,
            "name": "IsPushed",
            "saqlExpression": "case when ('CloseDatePrev' != \"1970-1-1\") && ('CloseDatePrev' < 'CloseDate') then 1 else 0 end",
            "scale": 0,
            "type": "Numeric"
          },
          {
            "precision": 8,
            "name": "IsPulled",
            "saqlExpression": "case when ('CloseDatePrev' != \"1970-1-1\") && ('CloseDatePrev' > 'CloseDate') then 1 else 0 end",
            "scale": 0,
            "type": "Numeric"
          },
          {
            "precision": 18,
            "name": "Duration",
            "saqlExpression": "case when 'ValidToDate' == \"3000-01-01T00:00:00.000Z\" then     date_diff(\"second\",toDate(ValidFromDate_sec_epoch), now())     else     date_diff(\"second\",toDate(ValidFromDate_sec_epoch), toDate(ValidToDate_sec_epoch))     end",
            "scale": 0,
            "label": "Duration",
            "type": "Numeric"
          }
        ],
        "mergeWithSource": true
      }
    },
    "Extract_OpportunityHistory_merge": {
      "action": "append",
      "parameters": {
        "enableDisjointedSchemaMerge": true,
        "sources": [
          "Extract_Demo_OpportunityHistory_drop_custom",
          "Extract_OpportunityHistory"
        ]
      }
    },
    "Register_Account": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "'Owner_Role_Roles' == \"$User_UserRoleId\" || 'OwnerId' == \"$User_Id\"",
        "name": "Accounts",
        "alias": "${App.Datasets.account_tp.FullyQualifiedName}",
        "source": "Account_with_Opportunity_Flag"
      }
    },
    "Extract_Account_get_Demo_Data_rename_fields": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Account_get_Demo_Data_drop_CreatedDate",
        "mergeWithSource": true,
        "computedFields": [{
          "default": "",
          "name": "CreatedDate",
          "saqlExpression": "toDate(CreatedDate__c, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")",
          "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "label": "CreatedDate",
          "type": "Date"
        }]
      }
    },
    "ExtractScore": {
      "action": "digest",
      "parameters": {
        "connectionName": "SFDC_LOCAL",
        "fields": [
          {"name": "Score"},
          {"name": "BaseId"}
        ],
        "object": "ScoreIntelligence"
      }
    },
    "Join_OpportunityOwner": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_OpportunityAccount",
        "left_key": ["OwnerId"],
        "right_select": [
          "Name",
          "Username",
          "UserRoleId",
          "UserManager_Name",
          "UserManagerNames",
          "UniqueUserName",
          "UserManager_UniqueUserName",
          "FullPhotoUrl",
          "SmallPhotoUrl",
          "Role_Name",
          "Role_DeveloperName",
          "Role_Roles",
          "Role_RolePath",
          "Role_ParentRoleId",
          "Role_ParentRole_Name",
          "Role_ParentRole_DeveloperName",
          "Role_ParentRole_ForecastManager_UniqueUserName",
          "Role_RoleNames",
          "Role_RoleNamesPath",
          "Role_Hierarchy_RoleNames"
        ],
        "right": "User_with_Roles",
        "relationship": "Owner"
      }
    },
    "Join_CaseAccount_Oppty": {
      "action": "augment",
      "parameters": {
        "right_key": ["AccountId"],
        "left": "Join_CaseAccount",
        "left_key": ["AccountId"],
        "right_select": [
          "Amount",
          "Competitor_EDD_c__c",
          "EDD_Prescription__c",
          "EDD_Leading_Causes__c",
          "EDD_Age__c",
          "Predicted_Close_Date__c",
          "EDD_Outcome__c",
          "EDD_CreatedDate__c",
          "Discount_Approved__c",
          "Close_Date_Difference__c",
          "DemoShow__c"
        ],
        "right": "Filter_WonOppty",
        "relationship": "Opportunity",
        "operation": "LookupMultiValue"
      }
    },
    "Compute_Unique_Name": {
      "action": "computeRelative",
      "parameters": {
        "partitionBy": ["Name"],
        "orderBy": [{
          "name": "Id",
          "direction": "asc"
        }],
        "source": "Filter_User",
        "computedFields": [{
          "expression": {
            "sourceField": "Id",
            "default": null,
            "offset": "next()"
          },
          "name": "isDuplicate",
          "description": "isDuplicate",
          "label": "isDuplicate"
        }]
      }
    },
    "Add_Fields_To_Event": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Event_cleaned",
        "computedFields": [
          {
            "name": "CallDisposition",
            "saqlExpression": "\"Event\"",
            "label": "CallDisposition",
            "type": "Text"
          },
          {
            "name": "CallType",
            "saqlExpression": "\"Event\"",
            "label": "CallType",
            "type": "Text"
          },
          {
            "name": "Status",
            "saqlExpression": "\"Event\"",
            "label": "Status",
            "type": "Text"
          },
          {
            "name": "Priority",
            "saqlExpression": "\"Event\"",
            "label": "Priority",
            "type": "Text"
          },
          {
            "name": "TaskSubtype",
            "saqlExpression": "EventSubtype",
            "label": "TaskSubtype",
            "type": "Text"
          },
          {
            "defaultValue": "0",
            "precision": 8,
            "name": "CallDurationInSeconds",
            "saqlExpression": "0",
            "scale": 0,
            "label": "CallDurationInSeconds",
            "type": "Numeric"
          },
          {
            "name": "IsClosed",
            "saqlExpression": "case when daysBetween(toDate(ActivityDate_sec_epoch), now()) >= 0 then \"true\" else \"false\" end",
            "label": "IsClosed",
            "type": "Text"
          }
        ],
        "mergeWithSource": true
      }
    },
    "Join_ActivityOwner_Product_Opp_User_Account": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_ActivityOwner_Product_Opp_User",
        "left_key": ["AccountId"],
        "right_select": [
          "Name",
          "Type",
          "Industry",
          "BillingState",
          "ShippingState",
          "AccountSource",
          "NumberOfEmployees",
          "AnnualRevenue",
          "OwnerId",
          "Owner_Name",
          "Ownerâ€“UserManager_Name",
          "Owner_UserManagerNames",
          "Owner_UserManager_UniqueUserName",
          "Owner_UniqueUserName",
          "Owner_Role_Name",
          "Owner_Role_Roles",
          "Owner_Role_RolePath",
          "Owner_Role_ParentRoleId"
        ],
        "right": "Join_AccountOwner",
        "relationship": "Account"
      }
    },
    "Users_Custom_Filter_Flag": {
      "action": "computeExpression",
      "parameters": {
        "source": "User_with_Roles_with_Opportunities",
        "mergeWithSource": true,
        "computedFields": [
          {
            "name": "hasOpportunity",
            "saqlExpression": "case when 'Opportunity_Name' is null then \"false\" else \"true\" end",
            "type": "Text"
          },
          {
            "name": "CustomFilter",
            "saqlExpression": "case when 'Opportunity_Name' is null && 'IsActive' == \"false\" then \"false\" else \"true\" end",
            "type": "Text"
          }
        ]
      }
    },
    "Join_ForecastQuota_ForecastType": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Extract_ForecastingQuota",
        "left_key": ["ForecastingTypeId"],
        "right_select": [
          "IsActive",
          "DeveloperName",
          "IsAmount",
          "IsQuantity"
        ],
        "right": "Extract_ForecastingType",
        "relationship": "Type"
      }
    },
    "Join_OpportunityAccount": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Calculate_IsLost",
        "left_key": ["AccountId"],
        "right_select": [
          "Name",
          "Type",
          "Industry",
          "BillingState",
          "ShippingState",
          "AccountSource",
          "NumberOfEmployees",
          "AnnualRevenue",
          "OwnerId",
          "Owner_Name",
          "Ownerâ€“UserManager_Name",
          "Owner_UserManagerNames",
          "Owner_UserManager_UniqueUserName",
          "Owner_UniqueUserName",
          "Owner_Role_Name",
          "Owner_Role_Roles",
          "Owner_Role_RolePath",
          "Owner_Role_ParentRoleId",
          "Parent_UltimateParentId",
          "Parent_ParentAccount_Name",
          "Parent_ParentAccount_OwnerId",
          "Parent_ParentAccount_BillingState",
          "Parent_ParentAccount_ShippingState",
          "Parent_AccountParents"
        ],
        "right": "Join_AccountOwner",
        "relationship": "Account"
      }
    },
    "Register_User": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "'Role_Roles' == \"$User_UserRoleId\" || 'Id' == \"$User_Id\"",
        "name": "Users",
        "alias": "${App.Datasets.user_tp.FullyQualifiedName}",
        "source": "Filter_UserManager"
      }
    },
    "Filter_User": {
      "action": "filter",
      "parameters": {
        "filter": "UserType:EQ:Standard|PowerPartner",
        "source": "Extract_User"
      }
    },
    "Filter_Account": {
      "action": "filter",
      "parameters": {
        "filter": "CustomFilter:EQ:true",
        "source": "Account_Custom_Filter_Flag"
      }
    },
    "Join_OpportunityRecordType": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_OpportunityOpportunityStage",
        "left_key": ["RecordTypeId"],
        "right_select": ["Name"],
        "right": "Extract_RecordTypes",
        "relationship": "RecordType"
      }
    },
    "Opportunity_Custom_Filter_Flag": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_OpportunityOwner_Product",
        "mergeWithSource": true,
        "computedFields": [{
          "name": "CustomFilter",
          "saqlExpression": "\"true\"",
          "type": "Text"
        }]
      }
    },
    "Extract_Event_get_Demo_Data_drop_CreatedDate": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Event_get_Demo_Data",
        "fields": [{"name": "CreatedDate"}]
      }
    },
    "Extract_Case_merge": {
      "action": "append",
      "parameters": {
        "enableDisjointedSchemaMerge": true,
        "sources": [
          "Extract_Case_get_Demo_Data_rename_fields",
          "Extract_Case_get_Users_Data"
        ]
      }
    },
    "Compute_Historical_Trending_Fields": {
      "action": "computeRelative",
      "parameters": {
        "partitionBy": ["OpportunityId"],
        "orderBy": [{
          "name": "Unique_Sort_Key",
          "direction": "asc"
        }],
        "source": "Add_Unique_Sort_Key_to_OpportunityHistory",
        "computedFields": [
          {
            "expression": {
              "sourceField": "CreatedDate",
              "default": "current()",
              "offset": "first()"
            },
            "name": "OpportunityCreatedDate",
            "description": "Opportunity Created Date",
            "label": "OpportunityCreatedDate"
          },
          {
            "expression": {
              "sourceField": "CreatedDate",
              "default": "3000-01-01T00:00:00.000Z",
              "offset": "next()"
            },
            "name": "ValidToDate",
            "description": "ValidToDate",
            "label": "ValidToDate"
          },
          {
            "expression": {
              "sourceField": "CreatedDate",
              "default": "current()",
              "offset": "current()"
            },
            "name": "ValidFromDate",
            "description": "ValidFromDate",
            "label": "ValidFromDate"
          },
          {
            "expression": {
              "sourceField": "Amount",
              "default": "0",
              "offset": "previous()"
            },
            "name": "AmountPrev",
            "description": "AmountPrev",
            "label": "AmountPrev"
          },
          {
            "expression": {
              "sourceField": "StageName",
              "default": null,
              "offset": "previous()"
            },
            "name": "StageNamePrev",
            "description": "Previous Stage Name",
            "label": "Prev Stage Name"
          },
          {
            "expression": {
              "sourceField": "ForecastCategory",
              "default": null,
              "offset": "previous()"
            },
            "name": "ForecastCategoryPrev",
            "description": "ForecastCategoryPrev",
            "label": "ForecastCategoryPrev"
          },
          {
            "expression": {
              "sourceField": "CloseDate",
              "default": "1970-01-01",
              "offset": "previous()"
            },
            "name": "CloseDatePrev",
            "description": "Previous Close Date",
            "label": "Prev Close Date"
          },
          {
            "expression": {
              "sourceField": "CreatedDate",
              "default": null,
              "offset": "previous()"
            },
            "name": "CreatedDatePrev",
            "description": "Previous Created Date",
            "label": "Prev CreatedDate"
          }
        ]
      }
    },
    "Extract_RecordTypes": {
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "Name"},
          {"name": "Id"}
        ],
        "object": "RecordType"
      }
    },
    "Flatten_ParentName": {
      "schema": {"objects": [{
        "label": "Flatten_UserRole",
        "fields": [
          {
            "name": "RoleNames",
            "label": "RoleNames",
            "isSystemField": false
          },
          {
            "name": "RoleNamesPath",
            "label": "RoleNamesPath",
            "isSystemField": false
          }
        ]
      }]},
      "action": "flatten",
      "parameters": {
        "include_self_id": true,
        "self_field": "UniqueUserName",
        "multi_field": "RoleNames",
        "parent_field": "Role_ParentRole_ForecastManager_UniqueUserName",
        "path_field": "RoleNamesPath",
        "source": "Join_Role_on_ForecastUser"
      }
    },
    "Join_Quota_User": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Filter_ForecastQuota",
        "left_key": ["QuotaOwnerId"],
        "right_select": [
          "Id",
          "Name",
          "Username",
          "UserRoleId",
          "UserManager_Name",
          "UserManagerNames",
          "UniqueUserName",
          "UserManager_UniqueUserName",
          "FullPhotoUrl",
          "SmallPhotoUrl",
          "Role_Name",
          "Role_DeveloperName",
          "Role_Roles",
          "Role_RolePath",
          "Role_ParentRoleId",
          "Role_ParentRole_Name",
          "Role_ParentRole_DeveloperName",
          "Role_ParentRole_ForecastManager_UniqueUserName",
          "Role_RoleNames",
          "Role_RoleNamesPath",
          "Role_Hierarchy_RoleNames"
        ],
        "right": "User_with_Roles",
        "relationship": "User"
      }
    },
    "Extract_Account": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "ParentId"},
          {"name": "Name"},
          {"name": "OwnerId"},
          {"name": "NumberOfEmployees"},
          {"name": "AnnualRevenue"},
          {"name": "AccountSource"},
          {"name": "Type"},
          {"name": "Industry"},
          {"name": "CreatedDate__c"},
          {"name": "External_ID__c"},
          {"name": "BillingState"},
          {"name": "ShippingState"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CreatedDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastModifiedDate"
          }
        ],
        "object": "Account"
      }
    },
    "Register_ForecastingItem": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "'User_Role_Roles' == \"$User_UserRoleId\" || 'User_Id' == \"$User_Id\"",
        "name": "ForecastingItem",
        "alias": "${App.Datasets.forecasting_item_tp.FullyQualifiedName}",
        "source": "Join_ForecastingItem_Period_User_Type"
      }
    },
    "sfdcDigest_Opportunity": {
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "Name"},
          {"name": "Amount"},
          {"name": "CloseDate"}
        ],
        "object": "Opportunity"
      }
    },
    "Compute_Lead_Name_or_Queue": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_LeadQueue",
        "computedFields": [
          {
            "name": "UserOrQueueName",
            "saqlExpression": "case when 'Owner_Name' is null && !('Queue_Name' is null) then 'Queue_Name' when !('Owner_Name' is null) then 'Owner_Name' else \"N/A\" end",
            "label": "Owner or Queue Name",
            "type": "Text"
          },
          {
            "name": "OwnerType",
            "saqlExpression": "case when 'Owner_Name' is null && !('Queue_Name' is null) then \"Queue\" when !('Owner_Name' is null) then \"User\" else \"N/A\" end",
            "label": "Owner Type",
            "type": "Text"
          }
        ],
        "mergeWithSource": true
      }
    },
    "Join_Lead_Score": {
      "action": "augment",
      "parameters": {
        "right_key": ["BaseId"],
        "left": "Extract_Lead",
        "left_key": ["Id"],
        "right_select": ["Score"],
        "right": "ExtractScore",
        "relationship": "Score",
        "operation": "LookupSingleValue"
      }
    },
    "Extract_UserRole": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "Name"},
          {"name": "DeveloperName"},
          {"name": "ParentRoleId"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastModifiedDate"
          },
          {"name": "LastModifiedById"},
          {"name": "ForecastUserId"},
          {"name": "SystemModstamp"}
        ],
        "object": "UserRole"
      }
    },
    "User_with_Roles": {
      "_comment": "Get user's role hierarchy",
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "User_with_Roles_Forecasting_Hierarchy",
        "left_key": ["UserRoleId"],
        "right_select": [
          "Name",
          "DeveloperName",
          "Roles",
          "RolePath",
          "ParentRoleId",
          "ParentRole_Name",
          "ParentRole_DeveloperName",
          "ParentRole_ForecastManager_Name",
          "ParentRole_ForecastManager_UniqueUserName",
          "ForecastManager_Name",
          "ForecastManager_UniqueUserName",
          "ForecastManager_ForecastEnabled"
        ],
        "right": "Augment_ParentName",
        "relationship": "Role"
      }
    },
    "Pipeline_Trending_Custom_Filter_Flag": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_OpportunityStage_Previous_with_Opp_Amount_Product",
        "mergeWithSource": true,
        "computedFields": [{
          "name": "CustomFilter",
          "saqlExpression": "\"true\"",
          "type": "Text"
        }]
      }
    },
    "Extract_Demo_OpportunityHistory_rename_fields": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Demo_OpportunityHistory",
        "mergeWithSource": true,
        "computedFields": [
          {
            "default": "",
            "name": "CreatedDate",
            "saqlExpression": "toDate(CreatedDate__c, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")",
            "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
            "label": "CreatedDate",
            "type": "Date"
          },
          {
            "default": "",
            "name": "CloseDate",
            "saqlExpression": "toDate(CloseDate__c, \"yyyy-MM-dd\")",
            "format": "yyyy-MM-dd",
            "label": "CloseDate",
            "type": "Date"
          },
          {
            "default": "",
            "name": "ForecastCategory",
            "saqlExpression": "ForecastCategory__c",
            "type": "Text"
          },
          {
            "default": "",
            "name": "OpportunityId",
            "saqlExpression": "OpportunityId__c",
            "type": "Text"
          },
          {
            "default": "",
            "name": "StageName",
            "saqlExpression": "StageName__c",
            "type": "Text"
          },
          {
            "defaultValue": "0",
            "precision": 18,
            "name": "Amount",
            "saqlExpression": "Amount__c",
            "scale": 2,
            "type": "Numeric"
          }
        ]
      }
    },
    "Join_Account_Opportunity": {
      "action": "augment",
      "parameters": {
        "right_key": ["AccountId"],
        "left": "Filter_Account",
        "left_key": ["Id"],
        "right_select": [
          "Id",
          "Name",
          "Owner_Name",
          "Competitor_EDD_c__c",
          "EDD_Prescription__c",
          "EDD_Leading_Causes__c",
          "EDD_Age__c",
          "Predicted_Close_Date__c",
          "EDD_Outcome__c",
          "EDD_CreatedDate__c",
          "Discount_Approved__c",
          "Product_Opportunity_Competitor_EDD_c__c",
          "Product_Opportunity_EDD_Prescription__c",
          "Product_Opportunity_EDD_Leading_Causes__c",
          "Product_Opportunity_EDD_Age__c",
          "Product_Opportunity_Predicted_Close_Date__c",
          "Product_Opportunity_EDD_Outcome__c",
          "Product_Opportunity_EDD_CreatedDate__c",
          "Product_Opportunity_Discount_Approved__c",
          "Close_Date_Difference__c",
          "Product_Opportunity_Close_Date_Difference__c",
          "DemoShow__c",
          "Product_Opportunity_DemoShow__c"
        ],
        "right": "Filter_Opportunity",
        "relationship": "Opportunity"
      }
    },
    "Extract_Event": {
      "schema": {"objects": [{"fields": [
        {
          "name": "ActivityDate",
          "label": "ActivityDate"
        },
        {
          "name": "CreatedDate",
          "label": "CreatedDate"
        }
      ]}]},
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "OwnerId"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CreatedDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "LastModifiedDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "ActivityDate"
          },
          {"name": "Subject"},
          {"name": "DurationInMinutes"},
          {"name": "EventSubtype"},
          {"name": "WhatId"},
          {"name": "AccountId"},
          {"name": "CreatedDate__c"},
          {"name": "External_ID__c"}
        ],
        "object": "Event"
      }
    },
    "Flatten_UserRole": {
      "schema": {"objects": [{
        "label": "Flatten_UserRole",
        "fields": [
          {
            "name": "Roles",
            "label": "Roles",
            "isSystemField": false
          },
          {
            "name": "RolePath",
            "label": "RolePath",
            "isSystemField": false
          }
        ]
      }]},
      "action": "flatten",
      "parameters": {
        "self_field": "Id",
        "multi_field": "Roles",
        "parent_field": "ParentRoleId",
        "path_field": "RolePath",
        "source": "Join_RoleUser"
      }
    },
    "Join_OpportunityStage_Previous": {
      "action": "augment",
      "parameters": {
        "right_key": ["MasterLabel"],
        "left": "Join_OpportunityStage",
        "left_key": ["StageNamePrev"],
        "right_select": [
          "IsClosed",
          "IsWon",
          "SortOrder"
        ],
        "right": "Extract_OpportunityStage",
        "relationship": "StagePrev"
      }
    },
    "Extract_Opportunity_merge": {
      "action": "append",
      "parameters": {
        "enableDisjointedSchemaMerge": true,
        "sources": [
          "Extract_Opportunity_get_Demo_Data_rename_fields",
          "Extract_Opportunity_get_Users_Data"
        ]
      }
    },
    "Extract_Account_merge": {
      "action": "append",
      "parameters": {
        "enableDisjointedSchemaMerge": true,
        "sources": [
          "Extract_Account_get_Demo_Data_rename_fields",
          "Extract_Account_get_Users_Data"
        ]
      }
    },
    "Join_CaseAccount": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "compute_CalculatedCaseDuration",
        "left_key": ["AccountId"],
        "right_select": [
          "Name",
          "Type",
          "Industry",
          "BillingState",
          "ShippingState",
          "AccountSource",
          "Parent_ParentAccount_Name",
          "Parent_ParentAccount_OwnerId",
          "Parent_ParentAccount_BillingState",
          "Parent_ParentAccount_ShippingState",
          "Parent_AccountParents",
          "NumberOfEmployees",
          "AnnualRevenue",
          "OwnerId",
          "Owner_Name",
          "Ownerâ€“UserManager_Name",
          "Owner_UserManagerNames",
          "Owner_UserManager_UniqueUserName",
          "Owner_UniqueUserName",
          "Owner_Role_Name",
          "Owner_Role_Roles",
          "Owner_Role_RolePath",
          "Owner_Role_ParentRoleId"
        ],
        "right": "Join_AccountOwner",
        "relationship": "Account"
      }
    },
    "Extract_OpportunityAmount": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "Amount"}
        ],
        "object": "Opportunity"
      }
    },
    "Extract_Case_get_Users_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:EQ:''",
        "source": "Extract_Case"
      }
    },
    "Extract_Task_cleaned": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Task_merge",
        "fields": [
          {"name": "CreatedDate__c"},
          {"name": "External_ID__c"}
        ]
      }
    },
    "Extract_Account_get_Demo_Data_drop_CreatedDate": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Account_get_Demo_Data",
        "fields": [{"name": "CreatedDate"}]
      }
    },
    "Extract_User": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "Username"},
          {"name": "Name"},
          {"name": "FirstName"},
          {"name": "LastName"},
          {"name": "UserRoleId"},
          {"name": "UserType"},
          {"name": "IsActive"},
          {"name": "FullPhotoUrl"},
          {"name": "SmallPhotoUrl"},
          {"name": "ForecastEnabled"},
          {
            "defaultValue": "N/A",
            "name": "ManagerId"
          }
        ],
        "object": "User"
      }
    },
    "Flatten_UserManager": {
      "schema": {"objects": [{
        "label": "Flatten_UserManager",
        "fields": [
          {
            "name": "UserManagerNames",
            "label": "UserManagerNames",
            "isSystemField": false
          },
          {
            "name": "ManagerNamesPath",
            "label": "ManagerNamesPath",
            "isSystemField": false
          }
        ]
      }]},
      "action": "flatten",
      "parameters": {
        "include_self_id": true,
        "self_field": "UniqueUserName",
        "multi_field": "UserManagerNames",
        "parent_field": "UserManager_UniqueUserName",
        "path_field": "ManagerNamesPath",
        "source": "Join_User_Manager"
      }
    },
    "Join_OpportunityLineItemPricebookEntryProduct": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_OpportunityLineItemPricebookEntry",
        "left_key": ["Pricebook_Product2Id"],
        "right_select": [
          "ProductCode",
          "Name",
          "Family"
        ],
        "right": "Extract_Product",
        "relationship": "Product"
      }
    },
    "Compute_AdditionalFieldsForLead": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_LeadOwnerOpportunityAccount",
        "computedFields": [
          {
            "defaultValue": "0",
            "precision": 18,
            "name": "LeadAge",
            "saqlExpression": "case when ('IsConverted' == \"false\") then daysBetween(toDate(CreatedDate_sec_epoch), now())  else daysBetween(toDate(ConvertedDate_day_epoch), toDate(CreatedDate_day_epoch))  end",
            "scale": 2,
            "label": "Lead Age in Days",
            "type": "Numeric"
          },
          {
            "defaultValue": "0",
            "precision": 18,
            "name": "OpportunityAge",
            "saqlExpression": "case when ('ConvertedOpportunity_Name' is null) then 0 when ('ConvertedOpportunity_IsClosed' == \"false\") then ('CurrentDate_sec_epoch' - 'CreatedDate_sec_epoch')/86400  else ('ConvertedOpportunity_CloseDate_sec_epoch' - 'CreatedDate_sec_epoch')/86400 end",
            "scale": 2,
            "label": "Total Opportunity Age",
            "type": "Numeric"
          }
        ],
        "mergeWithSource": true
      }
    },
    "Register_OpportunityProducts": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "'Opportunity_Owner_Role_Roles' == \"$User_UserRoleId\" || 'Opportunity_OwnerId' == \"$User_Id\" || 'Opportunity_Account_OwnerId' == \"$User_Id\"",
        "name": "Oppty Products",
        "alias": "${App.Datasets.opportunity_products_tp.FullyQualifiedName}",
        "source": "Filter_Opportunity_Products"
      }
    },
    "Extract_Queue": {
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "Id"},
          {"name": "Name"},
          {"name": "Type"}
        ],
        "complexFilterConditions": "Type = 'Queue'",
        "object": "Group"
      }
    },
    "Filter_UserManager": {
      "action": "filter",
      "parameters": {
        "filter": "CustomFilter:EQ:true",
        "source": "Users_Custom_Filter_Flag"
      }
    },
    "Augment_ParentAccountName": {
      "_comment": "get parent account's name",
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Compute_UltimateParent",
        "left_key": ["UltimateParentId"],
        "right_select": [
          "Name",
          "OwnerId",
          "BillingState",
          "ShippingState"
        ],
        "right": "Add_Fields_To_Account",
        "relationship": "ParentAccount"
      }
    },
    "Pipeline_Trending_Stage_Conversion_Flag": {
      "action": "computeExpression",
      "parameters": {
        "source": "Pipeline_Trending_Custom_Filter_Flag",
        "mergeWithSource": true,
        "computedFields": [{
          "defaultValue": "\"true\"",
          "name": "Stage_IsAdvanced",
          "saqlExpression": "case when 'Stage_SortOrder' > 'StagePrev_SortOrder' then \"true\" else \"false\" end",
          "type": "Text"
        }]
      }
    },
    "Extract_Opportunity_cleaned": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Opportunity_merge",
        "fields": [
          {"name": "DateTimeCreated__c"},
          {"name": "LastActivityDate__c"},
          {"name": "LastModifiedDate__c"},
          {"name": "External_ID__c"}
        ]
      }
    },
    "Extract_Opportunity_get_Demo_Data_rename_fields": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Opportunity_get_Demo_Data_drop_Dates",
        "mergeWithSource": true,
        "computedFields": [
          {
            "default": "",
            "name": "CreatedDate",
            "saqlExpression": "toDate(DateTimeCreated__c, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")",
            "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
            "label": "CreatedDate",
            "type": "Date"
          },
          {
            "default": "",
            "name": "LastActivityDate",
            "saqlExpression": "toDate(LastActivityDate__c, \"yyyy-MM-dd\")",
            "format": "yyyy-MM-dd",
            "label": "LastActivityDate",
            "type": "Date"
          },
          {
            "default": "",
            "name": "LastModifiedDate",
            "saqlExpression": "toDate(LastModifiedDate__c, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")",
            "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
            "label": "LastModifiedDate",
            "type": "Date"
          }
        ]
      }
    },
    "Join_ActivityOwner_Product_Opp": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_ActivityOwner_Product",
        "left_key": ["WhatId"],
        "right_select": [
          "Id",
          "StageName",
          "Name",
          "Type",
          "OwnerId",
          "AccountId",
          "CloseDate",
          "CreatedDate",
          "LeadSource",
          "ForecastCategoryName",
          "Account_Name",
          "Account_Type",
          "Account_Industry",
          "Account_AccountSource",
          "Account_BillingState",
          "Account_ShippingState",
          "Account_Parent_ParentAccount_Name",
          "Account_Parent_ParentAccount_OwnerId",
          "Account_Parent_ParentAccount_BillingState",
          "Account_Parent_ParentAccount_ShippingState",
          "Account_Parent_AccountParents",
          "Account_OwnerId",
          "RecordTypeId",
          "RecordType_Name",
          "OpportunityAge",
          "DaysSinceLastActivity",
          "DaysPastDue",
          "IsPastDue",
          "Neglected",
          "IsWon",
          "IsLost",
          "IsClosed",
          "OpenClosedWonLost",
          "Competitor_EDD_c__c",
          "EDD_Prescription__c",
          "EDD_Leading_Causes__c",
          "EDD_Age__c",
          "Predicted_Close_Date__c",
          "EDD_Outcome__c",
          "EDD_CreatedDate__c",
          "Discount_Approved__c",
          "Close_Date_Difference__c",
          "DemoShow__c"
        ],
        "right": "Opportunity_add_closed_won",
        "relationship": "Opportunity"
      }
    },
    "Account_with_Opportunity_Flag": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_Account_Opportunity",
        "mergeWithSource": true,
        "computedFields": [{
          "name": "hasOpportunity",
          "saqlExpression": "case when 'Opportunity_Name' is null then \"false\" else \"true\" end",
          "type": "Text"
        }]
      }
    },
    "Join_ForecastingItem_Period_User": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_ForecastingItem_Period",
        "left_key": ["OwnerId"],
        "right_select": [
          "Id",
          "Name",
          "Username",
          "FullPhotoUrl",
          "SmallPhotoUrl",
          "UserRoleId",
          "Role_Name",
          "Role_DeveloperName",
          "Role_Roles",
          "Role_RoleNames",
          "Role_Hierarchy_RoleNames",
          "Role_ParentRoleId",
          "Role_ParentRole_Name",
          "Role_ParentRole_DeveloperName",
          "Role_ParentRole_ForecastManager_Name",
          "Role_ParentRole_ForecastManager_UniqueUserName",
          "Role_ForecastManager_Name",
          "Role_ForecastManager_UniqueUserName",
          "ForecastEnabled",
          "UniqueUserName"
        ],
        "right": "User_with_Roles",
        "relationship": "User"
      }
    },
    "Add_Fields_To_Oppty_Product": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_OpportunityOpportunityLineItemPricebookEntryProduct",
        "computedFields": [{
          "name": "AccountName",
          "saqlExpression": "'Opportunity_Account_Name'",
          "label": "AccountName",
          "type": "Text"
        }],
        "mergeWithSource": true
      }
    },
    "Extract_ForecastingQuota": {
      "schema": {"objects": [{"fields": [{
        "name": "StartDate",
        "label": "StartDate"
      }]}]},
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "ForecastingTypeId"},
          {"name": "QuotaAmount"},
          {"name": "QuotaOwnerId"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "StartDate"
          }
        ],
        "object": "ForecastingQuota"
      }
    },
    "Filter_For_Forecast_Users": {
      "action": "filter",
      "parameters": {
        "filter": "ForecastEnabled:EQ:true",
        "source": "Compute_Manager_Unique"
      }
    },
    "Extract_ForecastingItem": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "AmountWithoutAdjustments"},
          {"name": "AmountWithoutManagerAdjustment"},
          {"name": "ForecastAmount"},
          {"name": "ForecastCategoryName"},
          {"name": "ForecastingItemCategory"},
          {"name": "HasAdjustment"},
          {"name": "HasOwnerAdjustment"},
          {"name": "OwnerId"},
          {"name": "PeriodId"},
          {"name": "ForecastingTypeId"}
        ],
        "object": "ForecastingItem"
      }
    },
    "Extract_Demo_OpportunityHistory_drop_custom": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Demo_OpportunityHistory_rename_fields",
        "fields": [
          {"name": "CloseDate__c"},
          {"name": "CreatedDate__c"},
          {"name": "OpportunityId__c"},
          {"name": "StageName__c"},
          {"name": "Amount__c"},
          {"name": "ForecastCategory__c"}
        ]
      }
    },
    "Augment_Opportunity_Score": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Extract_Opportunity",
        "left_key": ["OpportunityScoreId"],
        "right_select": [
          "Score",
          "Insights"
        ],
        "right": "Extract_OpportununityScore",
        "relationship": "OpptyScore",
        "operation": "LookupSingleValue"
      }
    },
    "Extract_Demo_OpportunityHistory": {
      "schema": {"objects": [{
        "label": "OpportunityHistory",
        "fields": [
          {
            "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
            "name": "CreatedDate__c",
            "description": "Opportunity Created Date",
            "label": "CreatedDate"
          },
          {
            "name": "Amount__c",
            "description": "Amount",
            "label": "Amount"
          }
        ]
      }]},
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "Amount__c"},
          {"name": "CloseDate__c"},
          {"name": "CreatedById"},
          {"name": "CreatedDate__c"},
          {"name": "ForecastCategory__c"},
          {"name": "Id"},
          {"name": "IsDeleted"},
          {"name": "OpportunityId__c"},
          {"name": "StageName__c"}
        ],
        "object": "OpportunityHistory__c"
      }
    },
    "Extract_OpportunityLineItem": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "OpportunityId"},
          {"name": "ProductCode"},
          {"name": "ListPrice"},
          {"name": "Quantity"},
          {"name": "TotalPrice"},
          {"name": "PricebookEntryId"},
          {"name": "ServiceDate"}
        ],
        "object": "OpportunityLineItem"
      }
    },
    "Extract_OpportunityHistory": {
      "schema": {"objects": [{
        "label": "OpportunityHistory",
        "fields": [
          {
            "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
            "name": "CreatedDate",
            "description": "Opportunity Created Date",
            "label": "CreatedDate"
          },
          {
            "name": "Amount",
            "description": "Amount",
            "label": "Amount"
          },
          {
            "name": "CloseDate",
            "label": "CloseDate"
          }
        ]
      }]},
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {"name": "Amount"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CloseDate"
          },
          {"name": "CreatedById"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "CreatedDate"
          },
          {"name": "ForecastCategory"},
          {"name": "Id"},
          {"name": "IsDeleted"},
          {"name": "OpportunityId"},
          {"name": "StageName"}
        ],
        "object": "OpportunityHistory"
      }
    },
    "Filter_Pipeline_Trending": {
      "action": "filter",
      "parameters": {
        "filter": "CustomFilter:EQ:true",
        "source": "Pipeline_Trending_Stage_Conversion_Flag"
      }
    },
    "Join_ForecastingItem_Period_User_Type": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_ForecastingItem_Period_User",
        "left_key": ["ForecastingTypeId"],
        "right_select": [
          "DeveloperName",
          "MasterLabel"
        ],
        "right": "Extract_ForecastingType",
        "relationship": "ForecastingType"
      }
    },
    "Filter_Out_Last_Stage_Updates": {
      "action": "filter",
      "parameters": {
        "filter": "IsLastStageUpdate:EQ:1",
        "source": "Create_IsLastStageUpdate_Field"
      }
    },
    "Join_ActivityOwner": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Append_TaskEvent",
        "left_key": ["OwnerId"],
        "right_select": [
          "Name",
          "Username",
          "UserRoleId",
          "UserManager_Name",
          "UserManagerNames",
          "UniqueUserName",
          "UserManager_UniqueUserName",
          "FullPhotoUrl",
          "SmallPhotoUrl",
          "Role_Name",
          "Role_DeveloperName",
          "Role_Roles",
          "Role_RolePath",
          "Role_ParentRoleId",
          "Role_ParentRole_Name",
          "Role_ParentRole_DeveloperName",
          "Role_ParentRole_ForecastManager_UniqueUserName",
          "Role_RoleNames",
          "Role_RoleNamesPath",
          "Role_Hierarchy_RoleNames"
        ],
        "right": "User_with_Roles",
        "relationship": "Owner"
      }
    },
    "Extract_Event_get_Demo_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:N:''",
        "source": "Extract_Event"
      }
    },
    "Extract_Opportunity_get_Users_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:EQ:''",
        "source": "Compute_OpportunityScore"
      }
    },
    "Register_Opportunity": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "'Owner_Role_Roles' == \"$User_UserRoleId\" || 'OwnerId' == \"$User_Id\" || 'Account_OwnerId' == \"$User_Id\"",
        "name": "Opportunities",
        "alias": "${App.Datasets.opportunity_tp.FullyQualifiedName}",
        "source": "Filter_Opportunity"
      }
    },
    "Filter_Activity": {
      "action": "filter",
      "parameters": {
        "filter": "CustomFilter:EQ:true",
        "source": "Activity_Custom_Filter_Flag"
      }
    },
    "Register_PipelineTrending": {
      "action": "sfdcRegister",
      "parameters": {
        "rowLevelSecurityFilter": "'Opportunity_Owner_Role_Roles' == \"$User_UserRoleId\" || 'Opportunity_OwnerId' == \"$User_Id\" || 'Opportunity_Account_OwnerId' == \"$User_Id\"",
        "name": "Pipeline Trending",
        "alias": "${App.Datasets.pipeline_trending_tp.FullyQualifiedName}",
        "source": "Filter_Pipeline_Trending"
      }
    },
    "Extract_Event_get_Users_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:EQ:''",
        "source": "Extract_Event"
      }
    },
    "Opportunity_add_closed_won": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_OpportunityOwner",
        "mergeWithSource": true,
        "computedFields": [{
          "defaultValue": "\"NA\"",
          "name": "OpenClosedWonLost",
          "saqlExpression": "case when 'IsWon' == \"true\" then \"Closed Won\" when 'IsLost' == \"Yes\" then \"Lost\" when 'IsClosed' == \"false\" then \"Open\" else \"NA\" end",
          "type": "Text"
        }]
      }
    },
    "Extract_Event_get_Demo_Data_rename_fields": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Event_get_Demo_Data_drop_CreatedDate",
        "mergeWithSource": true,
        "computedFields": [{
          "default": "",
          "name": "CreatedDate",
          "saqlExpression": "toDate(CreatedDate__c, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")",
          "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
          "label": "CreatedDate",
          "type": "Date"
        }]
      }
    },
    "Join_Time_In_Current_Stage_to_Opportunity": {
      "action": "augment",
      "parameters": {
        "right_key": ["OpportunityId"],
        "left": "Join_OpportunityRecordType",
        "left_key": ["Id"],
        "right_select": ["Duration_Seconds"],
        "right": "Calculate_Current_Stage_Duration",
        "relationship": "Time_In_Current_Stage"
      }
    },
    "Calculate_IsLost": {
      "action": "computeExpression",
      "parameters": {
        "source": "Create_StageName_Multi_Value_Key",
        "mergeWithSource": true,
        "computedFields": [
          {
            "name": "IsLost",
            "saqlExpression": "case when 'IsClosed' == \"true\" && 'IsWon' == \"false\" then \"Yes\" else \"No\" end",
            "type": "Text"
          },
          {
            "name": "Pushed",
            "saqlExpression": "case when 'Stage_IsPushed' > 0 then \"true\" else \"false\" end",
            "label": "Pushed",
            "type": "Text"
          }
        ]
      }
    },
    "Compute_OpportunityScore": {
      "action": "computeExpression",
      "parameters": {
        "source": "Augment_Opportunity_Score",
        "mergeWithSource": true,
        "computedFields": [{
          "defaultValue": "0",
          "precision": 3,
          "name": "OpportunityScore",
          "saqlExpression": "case when 'OpptyScore_Score' == 0 or 'OpptyScore_Score' is null then 'Opportunity_Score_Dummy__c' else 'OpptyScore_Score' end",
          "scale": 0,
          "label": "Opportunity Score",
          "type": "Numeric"
        }]
      }
    },
    "Filter_WonOppty": {
      "action": "filter",
      "parameters": {
        "filter": "IsWon:EQ:true",
        "source": "Join_OpportunityAccount"
      }
    },
    "Add_Neglected_To_Opportunity": {
      "action": "computeExpression",
      "parameters": {
        "source": "Add_Fields_To_Opportunity",
        "computedFields": [{
          "name": "Neglected",
          "saqlExpression": "case when DaysSinceLastActivity >= 60 && 'IsClosed' == \"false\" then \"true\" else \"false\" end",
          "label": "Neglected",
          "type": "Text"
        }],
        "mergeWithSource": true
      }
    },
    "Extract_Task_get_Demo_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:N:''",
        "source": "Extract_Task"
      }
    },
    "Register_Lead": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "'IsConverted' == \"false\" || 'ConvertedOpportunity_Owner_Role_Roles' == \"$User_UserRoleId\" || 'ConvertedOpportunity_OwnerId' == \"$User_Id\" || 'ConvertedAccount_OwnerId' == \"$User_Id\"",
        "name": "Leads",
        "alias": "${App.Datasets.lead_tp.FullyQualifiedName}",
        "source": "Compute_AdditionalFieldsForLead"
      }
    },
    "Extract_Opportunity_get_Demo_Data_drop_Dates": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Opportunity_get_Demo_Data",
        "fields": [
          {"name": "CreatedDate"},
          {"name": "LastModifiedDate"},
          {"name": "LastActivityDate"}
        ]
      }
    },
    "register_Test": {
      "action": "sfdcRegister",
      "parameters": {
        "name": "Test",
        "alias": "\\${App.Datasets.${App.Datasets[Rules.CurrentNode].Name}.FullyQualifiedName}",
        "source": "sfdcDigest_Opportunity"
      }
    },
    "Find_Last_Stage_Updates": {
      "action": "computeRelative",
      "parameters": {
        "partitionBy": ["OpportunityId"],
        "orderBy": [{
          "name": "Unique_Sort_Key",
          "direction": "desc"
        }],
        "source": "Filter_Out_Stage_Updates",
        "computedFields": [{
          "expression": {
            "sourceField": "Id",
            "default": "current()",
            "offset": "first()"
          },
          "name": "LastStageUpdate_Id",
          "description": "Final Stage Change Id",
          "label": "LastStageUpdate_Id"
        }]
      }
    },
    "Account_Custom_Filter_Flag": {
      "action": "computeExpression",
      "parameters": {
        "source": "Join_AccountOwner",
        "mergeWithSource": true,
        "computedFields": [{
          "name": "CustomFilter",
          "saqlExpression": "\"true\"",
          "type": "Text"
        }]
      }
    },
    "compute_CalculatedCaseDuration": {
      "action": "computeExpression",
      "parameters": {
        "source": "compute_CurrentDateForCase",
        "computedFields": [{
          "defaultValue": "0",
          "precision": 18,
          "name": "DurationCalculatedField",
          "saqlExpression": "case  when ('IsClosed' == \"true\") then ('ClosedDate_sec_epoch' - 'CreatedDate_sec_epoch')/86400   else ('CurrentDate_sec_epoch' - 'CreatedDate_sec_epoch')/86400  end",
          "scale": 2,
          "label": "Case Duration",
          "type": "Numeric"
        }],
        "mergeWithSource": true
      }
    },
    "Extract_Opportunity_get_Demo_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:N:''",
        "source": "Compute_OpportunityScore"
      }
    },
    "Flatten_Hierarchy_Grouping": {
      "schema": {"objects": [{
        "label": "Flatten_Hierarchy_Grouping",
        "fields": [
          {
            "name": "Hierarchy_RoleNames",
            "label": "Hierarchy_RoleNames",
            "isSystemField": false
          },
          {
            "name": "Hierarchy_RoleNamesPath",
            "label": "Hierarchy_RoleNamesPath",
            "isSystemField": false
          }
        ]
      }]},
      "action": "flatten",
      "parameters": {
        "include_self_id": true,
        "self_field": "UniqueUserName",
        "multi_field": "Hierarchy_RoleNames",
        "parent_field": "Role_ParentRole_ForecastManager_UniqueUserName",
        "path_field": "Hierarchy_RoleNamesPath",
        "source": "Flatten_ParentName"
      }
    },
    "Extract_Event_cleaned": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Event_merge",
        "fields": [
          {"name": "CreatedDate__c"},
          {"name": "External_ID__c"}
        ]
      }
    },
    "Join_LeadOwnerOpportunityAccount": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_LeadOwnerOpportunity",
        "left_key": ["ConvertedAccountId"],
        "right_select": [
          "Name",
          "Type",
          "Industry",
          "BillingState",
          "ShippingState",
          "AccountSource",
          "Parent_ParentAccount_Name",
          "Parent_ParentAccount_OwnerId",
          "Parent_ParentAccount_BillingState",
          "Parent_ParentAccount_ShippingState",
          "Parent_AccountParents",
          "NumberOfEmployees",
          "AnnualRevenue",
          "OwnerId",
          "Owner_Name",
          "Ownerâ€“UserManager_Name",
          "Owner_UserManagerNames",
          "Owner_UserManager_UniqueUserName",
          "Owner_UniqueUserName",
          "Owner_Role_Name",
          "Owner_Role_Roles",
          "Owner_Role_RolePath",
          "Owner_Role_ParentRoleId"
        ],
        "right": "Join_AccountOwner",
        "relationship": "ConvertedAccount"
      }
    },
    "Activity_Custom_Filter_Flag": {
      "action": "computeExpression",
      "parameters": {
        "source": "Compute_Activity_Days_Overdue",
        "mergeWithSource": true,
        "computedFields": [{
          "name": "CustomFilter",
          "saqlExpression": "\"true\"",
          "type": "Text"
        }]
      }
    },
    "Extract_Task_get_Demo_Data_drop_CreatedDate": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Task_get_Demo_Data",
        "fields": [{"name": "CreatedDate"}]
      }
    },
    "Join_OpportunityStage_Previous_with_Opp_Amount_Product": {
      "action": "augment",
      "parameters": {
        "right_key": ["OpportunityId"],
        "left": "Join_OpportunityStage_Previous_with_Opp_Amount",
        "left_key": ["OpportunityId"],
        "right_select": [
          "Product_Name",
          "Product_Family",
          "Opportunity_Competitor_EDD_c__c",
          "Opportunity_EDD_Prescription__c",
          "Opportunity_EDD_Leading_Causes__c",
          "Opportunity_EDD_Age__c",
          "Opportunity_Predicted_Close_Date__c",
          "Opportunity_EDD_Outcome__c",
          "Opportunity_EDD_CreatedDate__c",
          "Opportunity_Discount_Approved__c",
          "Opportunity_Close_Date_Difference__c",
          "Opportunity_DemoShow__c"
        ],
        "right": "Add_Fields_To_Oppty_Product",
        "relationship": "Opportunity",
        "operation": "LookupMultiValue"
      }
    },
    "Extract_Case_get_Demo_Data_rename_fields": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Case_get_Demo_Data_drop_Dates",
        "mergeWithSource": true,
        "computedFields": [
          {
            "default": "",
            "name": "CreatedDate",
            "saqlExpression": "toDate(CreatedDate__c, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")",
            "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
            "label": "CreatedDate",
            "type": "Date"
          },
          {
            "default": "",
            "name": "ClosedDate",
            "saqlExpression": "toDate(ClosedDate__c, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")",
            "format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
            "label": "ClosedDate",
            "type": "Date"
          }
        ]
      }
    },
    "Extract_Case_cleaned": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Case_merge",
        "fields": [
          {"name": "CreatedDate__c"},
          {"name": "ClosedDate__c"},
          {"name": "External_ID__c"}
        ]
      }
    },
    "Extract_Period": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "StartDate"
          },
          {
            "fiscalMonthOffset": 0,
            "firstDayOfWeek": 0,
            "name": "EndDate"
          },
          {"name": "FiscalYearSettingsId"},
          {"name": "IsForecastPeriod"},
          {"name": "Type"}
        ],
        "object": "Period"
      }
    },
    "Create_StageName_Multi_Value_Key": {
      "action": "augment",
      "parameters": {
        "right_key": ["OpportunityId"],
        "left": "Join_Time_In_Current_Stage_to_Opportunity",
        "left_key": ["Id"],
        "right_select": [
          "StageName",
          "IsPushed",
          "IsPulled"
        ],
        "right": "Join_OpportunityStage_Previous",
        "relationship": "Stage",
        "operation": "LookupMultiValue"
      }
    },
    "Extract_Account_get_Demo_Data": {
      "action": "filter",
      "parameters": {
        "filter": "External_ID__c:N:''",
        "source": "Extract_Account"
      }
    },
    "Add_Unique_Sort_Key_to_OpportunityHistory": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_OpportunityHistory_merge",
        "mergeWithSource": true,
        "computedFields": [{
          "defaultValue": "'CreatedDate'",
          "name": "Unique_Sort_Key",
          "saqlExpression": "'CreatedDate' + \"-\" +  'Id'",
          "type": "Text"
        }]
      }
    },
    "Join_OpportunityOpportunityLineItemPricebookEntryProduct": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Join_OpportunityLineItemPricebookEntryProduct",
        "left_key": ["OpportunityId"],
        "right_select": [
          "AccountId",
          "OwnerId",
          "Name",
          "StageName",
          "LeadSource",
          "IsWon",
          "Type",
          "IsClosed",
          "ForecastCategory",
          "ForecastCategoryName",
          "CloseDate",
          "RecordTypeId",
          "Competitor_EDD_c__c",
          "EDD_Prescription__c",
          "EDD_Leading_Causes__c",
          "EDD_Age__c",
          "Predicted_Close_Date__c",
          "EDD_Outcome__c",
          "EDD_CreatedDate__c",
          "Discount_Approved__c",
          "Close_Date_Difference__c",
          "CreatedDate",
          "DaysSinceLastActivity",
          "OpportunityAge",
          "DaysPastDue",
          "IsPastDue",
          "Neglected",
          "RecordType_Name",
          "Stage_IsPushed",
          "Stage_IsPulled",
          "IsLost",
          "Pushed",
          "Account_Name",
          "Account_OwnerId",
          "Account_NumberOfEmployees",
          "Account_AnnualRevenue",
          "Account_AccountSource",
          "Account_Type",
          "Account_Industry",
          "Account_BillingState",
          "Account_ShippingState",
          "Account_Parent_AccountParents",
          "Account_Parent_ParentAccount_Name",
          "Account_Parent_ParentAccount_OwnerId",
          "Account_Parent_ParentAccount_BillingState",
          "Account_Parent_ParentAccount_ShippingState",
          "Account_Owner_Name",
          "Account_Owner_UniqueUserName",
          "Account_Owner_Role_Name",
          "Account_Owner_Role_Roles",
          "Account_Owner_Role_RolePath",
          "Owner_Name",
          "Owner_FullPhotoUrl",
          "Owner_SmallPhotoUrl",
          "Owner_UniqueUserName",
          "Ownerâ€“UserManager_Name",
          "Owner_UserManager_UniqueUserName",
          "Owner_UserManagerNames",
          "Owner_Role_RoleNames",
          "Owner_Role_Hierarchy_RoleNames",
          "Owner_Role_Name",
          "Owner_Role_DeveloperName",
          "Owner_Role_ParentRoleId",
          "Owner_Role_Roles",
          "Owner_Role_RolePath",
          "Owner_Role_ParentRole_DeveloperName",
          "Owner_Role_ParentRole_ForecastManager_UniqueUserName",
          "OpenClosedWonLost",
          "DemoShow__c"
        ],
        "right": "Opportunity_add_closed_won",
        "relationship": "Opportunity",
        "operation": "LookupSingleValue"
      }
    },
    "Join_ForecastingItem_Period": {
      "action": "augment",
      "parameters": {
        "right_key": ["Id"],
        "left": "Extract_ForecastingItem",
        "left_key": ["PeriodId"],
        "right_select": [
          "StartDate",
          "EndDate",
          "FiscalYearSettingsId",
          "IsForecastPeriod",
          "Type"
        ],
        "right": "Extract_Period",
        "relationship": "Period"
      }
    },
    "Register_Quota": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "'User_Role_Roles' == \"$User_UserRoleId\" || 'User_Id' == \"$User_Id\"",
        "name": "User Allocation",
        "alias": "${App.Datasets.quota_tp.FullyQualifiedName}",
        "source": "Join_Quota_User"
      }
    },
    "Add_Fields_To_Task": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Task_cleaned",
        "computedFields": [
          {
            "name": "EventSubtype",
            "saqlExpression": "TaskSubtype",
            "label": "EventSubtype",
            "type": "Text"
          },
          {
            "defaultValue": "0",
            "precision": 8,
            "name": "DurationInMinutes",
            "saqlExpression": "0",
            "scale": 0,
            "label": "DurationInMinutes",
            "type": "Numeric"
          }
        ],
        "mergeWithSource": true
      }
    },
    "Join_OpportunityOwner_Product": {
      "action": "augment",
      "parameters": {
        "right_key": ["OpportunityId"],
        "left": "Opportunity_add_closed_won",
        "left_key": ["Id"],
        "right_select": [
          "Product_Family",
          "Product_Name",
          "Opportunity_Competitor_EDD_c__c",
          "Opportunity_EDD_Prescription__c",
          "Opportunity_EDD_Leading_Causes__c",
          "Opportunity_EDD_Age__c",
          "Opportunity_Predicted_Close_Date__c",
          "Opportunity_EDD_Outcome__c",
          "Opportunity_EDD_CreatedDate__c",
          "Opportunity_Discount_Approved__c",
          "Opportunity_Close_Date_Difference__c",
          "Opportunity_DemoShow__c"
        ],
        "right": "Add_Fields_To_Oppty_Product",
        "relationship": "Product",
        "operation": "LookupMultiValue"
      }
    },
    "Add_Fields_To_Opportunity": {
      "action": "computeExpression",
      "parameters": {
        "source": "Extract_Opportunity_cleaned",
        "computedFields": [
          {
            "precision": 8,
            "name": "DaysSinceLastActivity",
            "saqlExpression": "case    when LastActivityDate is null      then daysBetween(toDate(LastModifiedDate_sec_epoch), now())   when LastModifiedDate > LastActivityDate     then daysBetween(toDate(LastModifiedDate_sec_epoch), now())   else daysBetween(toDate(LastActivityDate_sec_epoch), now()) end",
            "scale": 0,
            "label": "Days Since Last Activity",
            "type": "Numeric"
          },
          {
            "precision": 8,
            "name": "OpportunityAge",
            "saqlExpression": "case    when IsClosed == \"false\"     then daysBetween(toDate(CreatedDate_sec_epoch), now())     else daysBetween(toDate(CreatedDate_sec_epoch),toDate(CloseDate_sec_epoch))     end",
            "scale": 0,
            "label": "Opportunity Age",
            "type": "Numeric"
          },
          {
            "precision": 8,
            "name": "DaysPastDue",
            "saqlExpression": "case when IsClosed == \"false\" && (toDate(CloseDate_sec_epoch) < now()) then daysBetween(toDate(CloseDate_sec_epoch), now()) else 0 end",
            "scale": 0,
            "label": "Days Past Due",
            "type": "Numeric"
          },
          {
            "name": "IsPastDue",
            "saqlExpression": "case when IsClosed == \"false\" && (toDate(CloseDate_sec_epoch) < now()) then \"true\" else \"false\" end",
            "label": "Past Due",
            "type": "Text"
          }
        ],
        "mergeWithSource": true
      }
    },
    "Opportunity_Products_Custom_Filter_Flag": {
      "action": "computeExpression",
      "parameters": {
        "source": "Add_Fields_To_Oppty_Product",
        "mergeWithSource": true,
        "computedFields": [{
          "name": "CustomFilter",
          "saqlExpression": "\"true\"",
          "type": "Text"
        }]
      }
    },
    "Register_Case": {
      "action": "sfdcRegister",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "rowLevelSecurityFilter": "",
        "name": "Cases",
        "alias": "${App.Datasets.case_tp.FullyQualifiedName}",
        "source": "Join_CaseAccount_Oppty"
      }
    },
    "Extract_Account_cleaned": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Extract_Account_merge",
        "fields": [
          {"name": "CreatedDate__c"},
          {"name": "External_ID__c"}
        ]
      }
    },
    "Extract_ForecastingType": {
      "action": "sfdcDigest",
      "parameters": {
        "SFDCtoken": "SFDCtoken",
        "fields": [
          {"name": "Id"},
          {"name": "DeveloperName"},
          {"name": "MasterLabel"},
          {"name": "IsAmount"},
          {"name": "IsQuantity"},
          {"name": "IsActive"}
        ],
        "object": "ForecastingType"
      }
    },
    "User_with_Roles_with_Opportunities": {
      "_comment": "Get user's role hierarchy",
      "action": "augment",
      "parameters": {
        "right_key": ["OwnerId"],
        "left": "User_with_Roles",
        "left_key": ["Id"],
        "right_select": [
          "Name",
          "Competitor_EDD_c__c",
          "EDD_Prescription__c",
          "EDD_Leading_Causes__c",
          "EDD_Age__c",
          "Predicted_Close_Date__c",
          "EDD_Outcome__c",
          "EDD_CreatedDate__c",
          "Discount_Approved__c",
          "Close_Date_Difference__c",
          "DemoShow__c"
        ],
        "right": "Extract_Opportunity_cleaned",
        "relationship": "Opportunity"
      }
    }
  },
  "DataflowType": "USER",
  "_type": "dataflow",
  "name": "Sales_Analytics_5_0",
  "description": "Dataflow for the Sales Analytics Application.",
  "MasterLabel": "Sales Analytics 5.0",
  "_url": "/insights/internal_api/v1.0/esObject/workflow//json",
  "_uid": "",
  "nextRun": "",
  "WorkflowStatus": "Inactive"
}