{
  "name" : "Account_Embedded18_tp",
  "label" : "Account Embedded",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "dateVersion" : 1,
  "mobileDisabled" : false,
  "xmd" : {
    "measures" : [
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Prod_ProdCat_Metric_3.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Prod_ProdCat_Metric_2.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "DeadOutlets_query_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Prod_ProdCat_Change_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Prod_ProdCat_Metric_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Store_Metric_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Store_PercentChange_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "decline_city_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "percent_change_accou_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "StoreGroup_PercentCh_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "StoreGroup_Metric_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics_KPI_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "AllMetrics_Changes_K_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_change_in_Sales",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics_Changes_K_1.Percent_change_in_Sales",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          },
          "chartColor" : {
            "referenceField" : "Percent_Change",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#F71979",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#FED444",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics_Changes_K_1.Percent_Change",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Prod_ProdCat_Change_2.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Prod_ProdCat_Change_3.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      }
    ],
    "derivedDimensions" : [ ],
    "organizations" : [ ],
    "showDetailsDefaultFields" : [ ],
    "dates" : [ ],
    "derivedMeasures" : [ ],
    "dimensions" : [
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Prod_ProdCat_Metric_3.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Prod_ProdCat_Metric_2.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "DeadOutlets_query_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Prod_ProdCat_Change_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Prod_ProdCat_Metric_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Store_Metric_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Store_PercentChange_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "decline_city_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "percent_change_accou_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "StoreGroup_PercentCh_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "StoreGroup_Metric_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "AllMetrics_KPI_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Percent_Change",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#F71979",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#FED444",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "AllMetrics_Changes_K_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Prod_ProdCat_Change_2.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Prod_ProdCat_Change_3.ALL",
        "members" : [ ],
        "customActions" : [ ]
      }
    ]
  },
  "state" : {
    "dataSourceLinks" : [
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_ProductCategory_ProductCategory_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ProductCategory_Name_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_ProductCategory31_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Name"
          }
        ],
        "label" : "ProductCategory",
        "name" : "Link_3327"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_Name_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Product31_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Name"
          }
        ],
        "label" : "Product",
        "name" : "Link_3304"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "SurveyResponse_SurveySubject_StoreName"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Name"
          }
        ],
        "label" : "Store Name",
        "name" : "Link_305"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_RetailStoreGroup_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_RetailStoreGroup_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "SurveyResponse_SurveySubject_StoreGroup"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStoreGroup_Name"
          }
        ],
        "label" : "Store Group",
        "name" : "Link_2577"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_Account_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_Account_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Account_Name_Computed"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_RetailStore_Account_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "SurveyResponse_SurveySubject_Account"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Account_Name"
          }
        ],
        "label" : "Account",
        "name" : "Link_1294"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AccountId"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_AccountId"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Visit36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_AccountId"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId"
          }
        ],
        "label" : "Account ID",
        "name" : "Link_2214"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_ActivatedDate"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Visit36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ActualVisitStartTime"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ActualVisitStartTime"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "SurveyResponse_CompletionDateTime"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "CreatedDate"
          }
        ],
        "label" : "Date",
        "name" : "Link_8847"
      }
    ],
    "filters" : [ ],
    "gridLayouts" : [
      {
        "maxWidth" : 1500,
        "name" : "Default",
        "numColumns" : 50,
        "pages" : [
          {
            "label" : "Store Group Performance",
            "name" : "29dbd5b7-ec2c-48c0-a601-d7b4e123400f",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "dateselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "dateselector_2",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(198, 211, 225, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 31,
                "name" : "text_25",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 22,
                "column" : 8,
                "name" : "chart_15",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 18,
                "column" : 31,
                "name" : "chart_13",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 17,
                "column" : 8,
                "name" : "text_27",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "text_28",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 9,
                "name" : "text_30",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 13,
                "column" : 0,
                "name" : "image_1",
                "row" : 38,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_4",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 25,
                "column" : 0,
                "name" : "link_10",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 112, 210)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 25,
                "column" : 25,
                "name" : "link_12",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 42,
                "column" : 8,
                "name" : "container_6",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "container_5",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_2",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_3",
                "row" : 25,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_5",
                "row" : 17,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_17",
                "row" : 29,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 17,
                "name" : "text_31",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 17,
                "name" : "listselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 24,
                "name" : "number_9",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 28,
                "name" : "number_10",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 31,
                "name" : "chart_10",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_8",
                "row" : 9,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_23",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom",
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Store Performance",
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "dateselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "dateselector_2",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(198, 211, 225, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_1",
                "row" : 9,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_2",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_3",
                "row" : 25,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 31,
                "name" : "text_25",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 25,
                "column" : 0,
                "name" : "link_10",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 112, 210)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 25,
                "column" : 25,
                "name" : "link_12",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 8,
                "name" : "chart_12",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 18,
                "column" : 31,
                "name" : "chart_9",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 8,
                "name" : "text_24",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_28",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "text_30",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 17,
                "name" : "listselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 13,
                "column" : 0,
                "name" : "image_1",
                "row" : 38,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 17,
                "name" : "text_31",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 31,
                "name" : "chart_10",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 24,
                "name" : "number_9",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 28,
                "name" : "number_10",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 42,
                "column" : 8,
                "name" : "container_3",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_17",
                "row" : 29,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_4",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "container_5",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_9",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 1,
                "column" : 4,
                "name" : "text_2",
                "row" : 49,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_15",
                "row" : 17,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom",
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Store - Dead Outlets",
            "name" : "d798b195-aa2b-4679-b34f-ae68d177ad27",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "dateselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "dateselector_2",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(198, 211, 225, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_1",
                "row" : 9,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_3",
                "row" : 25,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 25,
                "column" : 0,
                "name" : "link_10",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 112, 210)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 25,
                "column" : 25,
                "name" : "link_12",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 23,
                "column" : 8,
                "name" : "chart_11",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 17,
                "column" : 8,
                "name" : "text_29",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_28",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "text_30",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 17,
                "name" : "listselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 13,
                "column" : 0,
                "name" : "image_1",
                "row" : 38,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 17,
                "name" : "text_31",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 31,
                "name" : "chart_10",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 24,
                "name" : "number_9",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 28,
                "name" : "number_10",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 42,
                "column" : 8,
                "name" : "container_3",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_17",
                "row" : 29,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_4",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "container_5",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_11",
                "row" : 17,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_13",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom",
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_14",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "City Performance",
            "name" : "416c0093-aeec-48c0-b53a-39fcb175deb4",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 8,
                "name" : "chart_2",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 18,
                "column" : 31,
                "name" : "chart_6",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 8
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "dateselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "dateselector_2",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(198, 211, 225, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_28",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "text_30",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 8,
                "name" : "text_18",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(230, 236, 242, 0.44)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 18,
                "column" : 31,
                "name" : "text_25",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 13,
                "column" : 0,
                "name" : "image_1",
                "row" : 38,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 17,
                "name" : "text_31",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 17,
                "name" : "listselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 24,
                "name" : "number_9",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 28,
                "name" : "number_10",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 31,
                "name" : "chart_10",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 43,
                "column" : 7,
                "name" : "container_7",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_4",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 25,
                "column" : 0,
                "name" : "link_10",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 112, 210)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 25,
                "column" : 25,
                "name" : "link_12",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "container_5",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_1",
                "row" : 9,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_5",
                "row" : 17,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_17",
                "row" : 29,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_16",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_18",
                "row" : 25,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom",
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_22",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Product Category Performance",
            "name" : "68509d16-1149-448c-a60d-0cf708abb9bc",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "dateselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "dateselector_2",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(198, 211, 225, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_28",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "text_30",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 31,
                "name" : "text_25",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 13,
                "column" : 0,
                "name" : "image_1",
                "row" : 38,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 17,
                "name" : "text_31",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 17,
                "name" : "listselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 24,
                "name" : "number_9",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 28,
                "name" : "number_10",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 31,
                "name" : "chart_10",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_4",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 25,
                "column" : 0,
                "name" : "link_10",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 112, 210)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 25,
                "column" : 25,
                "name" : "link_12",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 8,
                "name" : "chart_14",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 18,
                "column" : 31,
                "name" : "chart_16",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 42,
                "column" : 8,
                "name" : "container_9",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "container_5",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_1",
                "row" : 9,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_2",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_4",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_5",
                "row" : 17,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 8,
                "name" : "text_1",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_21",
                "row" : 25,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_24",
                "row" : 29,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom",
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Product Performance",
            "name" : "c28932cf-7329-4140-a9e7-882f0d32ccad",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "dateselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "dateselector_2",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(198, 211, 225, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_28",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "text_30",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 31,
                "name" : "text_25",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 16,
                "column" : 8,
                "name" : "text_23",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 13,
                "column" : 0,
                "name" : "image_1",
                "row" : 38,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 17,
                "name" : "text_31",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 17,
                "name" : "listselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 24,
                "name" : "number_9",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 28,
                "name" : "number_10",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 31,
                "name" : "chart_10",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_4",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 25,
                "column" : 0,
                "name" : "link_10",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 112, 210)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 25,
                "column" : 25,
                "name" : "link_12",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 8,
                "name" : "chart_1",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 18,
                "column" : 31,
                "name" : "chart_5",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 42,
                "column" : 8,
                "name" : "container_8",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "container_5",
                "row" : 9,
                "rowspan" : 28,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_1",
                "row" : 9,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_2",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_4",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_5",
                "row" : 17,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_19",
                "row" : 25,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 0,
                "name" : "link_20",
                "row" : 29,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0.52)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              }
            ]
          },
          {
            "label" : "Accounts Hierarchy Performance",
            "name" : "894ddb4d-da7d-4082-91a9-c7c302b5929a",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 1,
                "name" : "text_5",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "dateselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "dateselector_2",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(198, 211, 225, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 9,
                "rowspan" : 29,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 24,
                "column" : 1,
                "name" : "chart_3",
                "row" : 12,
                "rowspan" : 25,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 27,
                "name" : "chart_7",
                "row" : 12,
                "rowspan" : 24,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_28",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 9,
                "name" : "text_30",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 27,
                "name" : "text_25",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 13,
                "column" : 0,
                "name" : "image_1",
                "row" : 38,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 17,
                "name" : "text_31",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 17,
                "name" : "listselector_1",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 24,
                "name" : "number_9",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 28,
                "name" : "number_10",
                "row" : 2,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 31,
                "name" : "chart_10",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_4",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 25,
                "column" : 0,
                "name" : "link_6",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 25,
                "column" : 25,
                "name" : "link_7",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(0, 112, 210)",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#FFFFFF",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "#FFFFFF"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "AllMetrics_Changes_K_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AllMetrics_Changes_KPI",
        "numbers" : [ ],
        "query" : "---Decline in OutofStock (CG_RetailVisitKpi)\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\n\r\ntotal_oos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter total_oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos_B = filter total_oos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_oos = group oos_A by all full, oos_B by all;\r\ntotal_oos = foreach total_oos generate avg(oos_A.'Compliance_Percentage') as 'current_out_of_stock', avg(oos_B.'Compliance_Percentage') as 'previous_out_of_stock';\r\ntotal_oos = foreach total_oos generate 'current_out_of_stock', 'previous_out_of_stock', (('current_out_of_stock'-'previous_out_of_stock')/('previous_out_of_stock')) as 'percent_change_out_of_stock_thisyear';\r\ntotal_oos = foreach total_oos generate 'current_out_of_stock','percent_change_out_of_stock_thisyear';\r\n-- Decline in Sales(CG_OrderItem)\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by all full, sales_B by all;\r\ntotal_sale = foreach total_sale generate sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sale = foreach total_sale generate 'current_sales', 'previous_sales', (('current_sales'-'previous_sales')/('previous_sales')) as 'percent_change_sales_thisyear';\r\ntotal_sale = foreach total_sale generate 'current_sales', 'percent_change_sales_thisyear';\r\n--Decline in Quantity(CG_OrderItem)\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nqty_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_qty = group qty_A by all full, qty_B by all;\r\ntotal_qty = foreach total_qty generate sum(qty_A.'Quantity') as 'current_quantity', sum(qty_B.'Quantity') as 'previous_quantity';\r\ntotal_qty = foreach total_qty generate 'current_quantity', 'previous_quantity', (('current_quantity'-'previous_quantity')/('previous_quantity')) as 'percent_change_quantity_thisyear';\r\ntotal_qty = foreach total_qty generate 'current_quantity','percent_change_quantity_thisyear';\r\n---Decline in SalesVelocity\r\nsv = foreach orders generate 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', 'TotalPrice';\r\nsv_A = filter sv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsv_B = filter sv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sv = group sv_A by all full, sv_B by all;\r\ntotal_sv = foreach total_sv generate (sum(sv_A.'TotalPrice')/unique(sv_A.'YearWeek')) as 'current_avg_week_revenue', (sum(sv_B.'TotalPrice')/unique(sv_B.'YearWeek')) as 'previous_avg_week_revenue';\r\ntotal_sv = foreach total_sv generate 'current_avg_week_revenue', 'previous_avg_week_revenue', (('current_avg_week_revenue'-'previous_avg_week_revenue')/('previous_avg_week_revenue')) as 'percent_change_avg_week_revenue_thisyear';\r\ntotal_sv = foreach total_sv generate 'current_avg_week_revenue','percent_change_avg_week_revenue_thisyear';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by all full, comp_B by all;\r\ntotal_comp = foreach total_comp generate avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'current_comp', 'previous_comp', (('current_comp'-'previous_comp')/('previous_comp')) as 'percent_change_comp_thisyear';\r\ntotal_comp = foreach total_comp generate 'current_comp', 'percent_change_comp_thisyear';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo_B = filter promo by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo_A by all full, promo_B by all;\r\npromo = foreach promo generate avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\npromo = foreach promo generate 'current_promo', 'previous_promo', (('current_promo'-'previous_promo')/'previous_promo') as 'percent_change_promo_thisyear';\r\npromo = foreach promo generate 'current_promo','percent_change_promo_thisyear';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nfcs_B = filter fcs by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_fcs = group fcs_A by all full, fcs_B by all;\r\ntotal_fcs = foreach total_fcs generate avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'current_fcs', 'previous_fcs', (('current_fcs'-'previous_fcs')/('previous_fcs')) as 'percent_change_fcs_thisyear';\r\ntotal_fcs = foreach total_fcs generate 'current_fcs', 'percent_change_fcs_thisyear';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nsos_B = filter sos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_sos = group sos_A by all full, sos_B by all;\r\ntotal_sos = foreach total_sos generate avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'current_sos', 'previous_sos', (('current_sos'-'previous_sos')/('previous_sos')) as 'percent_change_sos_thisyear';\r\ntotal_sos = foreach total_sos generate 'current_sos', 'percent_change_sos_thisyear';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ninv_B = filter inv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_inv = group inv_A by all full, inv_B by all;\r\ntotal_inv = foreach total_inv generate avg(inv_A.'Compliance_Percentage') as 'current_inventory', avg(inv_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inv = foreach total_inv generate 'current_inventory', 'previous_inventory', (('current_inventory'-'previous_inventory')/('previous_inventory')) as 'percent_change_inventory_thisyear';\r\ntotal_inv = foreach total_inv generate 'current_inventory', 'percent_change_inventory_thisyear';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by all full,\r\n              total_qty by all full,\r\n              total_sv by all full,\r\n              total_oos by all full,\r\n              total_comp by all full,\r\n              promo by all full,\r\n              total_fcs by all full,\r\n              total_sos by all full,\r\n              total_inv by all;\r\nfinal_table = foreach final_table generate\r\n        \r\n         sum(total_sale.'current_sales') as 'total_sales',\r\n         sum(total_sale.'percent_change_sales_thisyear') as 'Percent_change_in_Sales',\r\n         sum(total_qty.'current_quantity') as 'total_quantity',\r\n         sum(total_qty.'percent_change_quantity_thisyear') as 'Percent_Change_in_Quantity',\r\n         sum(total_sv.'current_avg_week_revenue') as 'avg_sales_velocity',\r\n         sum(total_sv.'percent_change_avg_week_revenue_thisyear') as 'Percent_Change_in_WeeklyRev',\r\n         sum(total_oos.'current_out_of_stock') as 'OutOfStock_Count',\r\n         sum(total_oos.'percent_change_out_of_stock_thisyear') as 'PoP_Out_of_Stock_percent',\r\n         avg(total_comp.'current_comp') as 'Avg_CompliancePercentage',\r\n         avg(total_comp.'percent_change_comp_thisyear') as 'Compliance_Percentate_Change_vs_Previous_Period',\r\n         avg(promo.'current_promo') as 'Avg_PromoCompliance_Percentage',\r\n         avg(promo.'percent_change_promo_thisyear') as 'PoP_Promotion_Compliance_percent',\r\n         avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\n         avg(total_fcs.'percent_change_fcs_thisyear') as 'PoP_Share_of_Shelf_Compliance_percent',  \r\n         avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage',\r\n         avg(total_sos.'percent_change_sos_thisyear') as 'PoP_Facings_Compliance_percent',  \r\n         avg(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage',\r\n         avg(total_inv.'percent_change_inventory_thisyear') as 'PoP_Inventory_Comp_percent';\r\nfinal_table = filter final_table by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate '{{cell(picklist_1_1.selection,0,\"Alias_change_percent_kpi\").asObject()}}' as 'Percent_Change';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "trend_multidatasetqu_1" : {
        "broadcastFacet" : false,
        "groups" : [ ],
        "label" : "trend_multidatasetquery",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = group retail_store by ('CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\n--OutofStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', count(oos) as 'OutOfStock_Count';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}'+\"-\"+'Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', sum('Sales') as 'Sales',sum('Quantity') as 'Quantity', (sum('Sales')/unique('YearWeek')) as 'sales_velocity';\r\n--StoreCompliance\r\n comp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp_result = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp_result by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',avg('avg_Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\n--Average Share of Shelf Compliance\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_result = group sos by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\nsos_result = group sos_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_SOSCompliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\n--Average Facings Compliance\r\n fcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_result = group fcs by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\nfcs_result = group fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_FCSCompliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\n--Average Promotion Compliance\r\n promo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_result = group promo by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\npromo_result = group promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_PromoCompliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\n--Average Inventory Compliance\r\n inv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_result = group inv by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv_result = group inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table\r\nfinal_table = cogroup\r\n             retail_store by 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n              order1 by 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             comp_result by  'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             sos_result  by  'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\nfinal_table = foreach final_table generate\r\ncoalesce(retail_store.'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', order1.'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',comp_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',sos_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',fcs_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',oos_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',promo_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',inv_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}') as 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n sum(order1.'Sales') as 'total_sales',sum(order1.'Quantity') as 'total_quantity', avg(order1.'sales_velocity') as 'avg_sales_velocity',\r\n         sum(oos_result.'OutOfStock_Count') as 'OutOfStock_Count',\r\n         avg(comp_result.'Avg_Compliance_Percentage') as 'Avg_CompliancePercentage',\r\n         avg(fcs_result.'avg_FCSCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage',\r\n         avg(sos_result.'avg_SOSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',\r\n         avg(promo_result.'avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage',\r\n         avg(inv_result.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table = filter final_table by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}} as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table = order final_table by 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "Comparative_Period_1" : {
        "broadcastFacet" : false,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_Visit36_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "PlannedVisitStartTime"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "start" : [
          [
            [
              "year",
              -1
            ],
            [
              "year",
              -1
            ]
          ]
        ],
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "date_parser_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "date_parser",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nq = foreach q generate \"1970\" as 'Date_Year', \"01\" as 'Date_Month', \"01\" as 'Date_Day';\r\nq = group q by ('Date_Year', 'Date_Month', 'Date_Day');\r\nq = foreach q generate 'Date_Year', 'Date_Month', 'Date_Day', count() as 'sum';\r\n-- use fill() to generate null rows for any missing dates. Then you can use timeseries().\r\nq = fill q by (dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = timeseries q generate 'sum' as 'cnt' with (length=60000,  dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = foreach q generate 'Date_Year' + \"-\" + 'Date_Month' + \"-\" + 'Date_Day'+ \" 00:00:00\" as 'Date','Date_Year', 'Date_Month', 'Date_Day';\r\nq_A = filter q by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Date_Year', 'Date_Month', 'Date_Day')\")}};\r\nq_A = foreach q_A generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_A = group q_A by all;\r\nq_A = foreach q_A generate min('Date') as 'min_Date', max('Date') as 'max_Date', min('Date_sec_epoch') as 'min_Date_sec_epoch', max('Date_sec_epoch') as 'max_Date_sec_epoch';\r\nq_B = filter q by date('Date_Year', 'Date_Month', 'Date_Day') in [\"current fiscal_year\"..\"current fiscal_year\"];\r\nq_B = foreach q_B generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_B = group q_B by all;\r\nq_B = foreach q_B generate min('Date') as 'min_current_fiscalYr_Date', max('Date') as 'max_current_fiscalYr_Date', min('Date_sec_epoch') as 'min_current_fiscalYr_Date_sec_epoch', max('Date_sec_epoch') as 'max_current_fiscalYr_Date_sec_epoch';\r\nq_C = filter q by date('Date_Year', 'Date_Month', 'Date_Day') in [\"current year\"..\"current year\"];\r\nq_C = foreach q_C generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_C = group q_C by all;\r\nq_C = foreach q_C generate min('Date') as 'min_current_CalendarYr_Date', max('Date') as 'max_current_CalendarYr_Date', min('Date_sec_epoch') as 'min_current_CalendarYr_Date_sec_epoch', max('Date_sec_epoch') as 'max_current_CalendarYr_Date_sec_epoch';\r\nq = cogroup q_A by all full, q_B by all full, q_C by all;\r\nq = foreach q generate first(q_A.'min_Date') as 'min_Date', toDate(first(q_A.'max_Date_sec_epoch')+86399) as 'max_Date', first(q_A.'min_Date_sec_epoch') as 'min_Date_sec_epoch', first(q_A.'max_Date_sec_epoch')+86399 as 'max_Date_sec_epoch', first(q_B.'min_current_fiscalYr_Date') as 'min_current_fiscalYr_Date', toDate(first(q_B.'max_current_fiscalYr_Date_sec_epoch')+86399) as 'max_current_fiscalYr_Date', first(q_C.'min_current_CalendarYr_Date') as 'min_current_CalendarYr_Date', toDate(first(q_C.'max_current_CalendarYr_Date_sec_epoch')+86399) as 'max_current_CalendarYr_Date', (case when \"{{coalesce(cell(Current_Period_1.selection,0,\"min\"),\"All\").asObject()}}\" matches \"fiscal\" and first(q_C.'min_current_CalendarYr_Date') != first(q_B.'min_current_fiscalYr_Date') then \"_Fiscal\" else \"\" end) as 'Is_Fiscal';\r\nq = foreach q generate 'min_Date', 'max_Date', 'min_Date_sec_epoch', 'max_Date_sec_epoch', 'min_current_fiscalYr_Date', 'min_current_CalendarYr_Date', \"[\"+replace(toString('min_Date',\"yyyy-MM-dd\"),\"-\",\",\")+\"]\" as 'Date_Min', \"[\"+replace(toString('max_Date',\"yyyy-MM-dd\"),\"-\",\",\")+\"]\" as 'Date_Max', 'Is_Fiscal';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "AllMetrics_KPI_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AllMetrics_KPI",
        "numbers" : [ ],
        "query" : "---Decline in OutofStock (CG_RetailVisitKpi)\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\n\r\ntotal_oos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter total_oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos_B = filter total_oos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_oos = group oos_A by all full, oos_B by all;\r\ntotal_oos = foreach total_oos generate avg(oos_A.'Compliance_Percentage') as 'current_out_of_stock', avg(oos_B.'Compliance_Percentage') as 'previous_out_of_stock';\r\ntotal_oos = foreach total_oos generate 'current_out_of_stock', 'previous_out_of_stock', (('current_out_of_stock'-'previous_out_of_stock')/('previous_out_of_stock')) as 'percent_change_out_of_stock_thisyear';\r\ntotal_oos = foreach total_oos generate 'current_out_of_stock','percent_change_out_of_stock_thisyear';\r\n-- Decline in Sales(CG_OrderItem)\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by all full, sales_B by all;\r\ntotal_sale = foreach total_sale generate sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sale = foreach total_sale generate 'current_sales', 'previous_sales', (('current_sales'-'previous_sales')/('previous_sales')) as 'percent_change_sales_thisyear';\r\ntotal_sale = foreach total_sale generate 'current_sales', 'percent_change_sales_thisyear';\r\n--Decline in Quantity(CG_OrderItem)\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nqty_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_qty = group qty_A by all full, qty_B by all;\r\ntotal_qty = foreach total_qty generate sum(qty_A.'Quantity') as 'current_quantity', sum(qty_B.'Quantity') as 'previous_quantity';\r\ntotal_qty = foreach total_qty generate 'current_quantity', 'previous_quantity', (('current_quantity'-'previous_quantity')/('previous_quantity')) as 'percent_change_quantity_thisyear';\r\ntotal_qty = foreach total_qty generate 'current_quantity','percent_change_quantity_thisyear';\r\n---Decline in SalesVelocity\r\nsv = foreach orders generate 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', 'TotalPrice';\r\nsv_A = filter sv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsv_B = filter sv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sv = group sv_A by all full, sv_B by all;\r\ntotal_sv = foreach total_sv generate (sum(sv_A.'TotalPrice')/unique(sv_A.'YearWeek')) as 'current_avg_week_revenue', (sum(sv_B.'TotalPrice')/unique(sv_B.'YearWeek')) as 'previous_avg_week_revenue';\r\ntotal_sv = foreach total_sv generate 'current_avg_week_revenue', 'previous_avg_week_revenue', (('current_avg_week_revenue'-'previous_avg_week_revenue')/('previous_avg_week_revenue')) as 'percent_change_avg_week_revenue_thisyear';\r\ntotal_sv = foreach total_sv generate 'current_avg_week_revenue','percent_change_avg_week_revenue_thisyear';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by all full, comp_B by all;\r\ntotal_comp = foreach total_comp generate avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'current_comp', 'previous_comp', (('current_comp'-'previous_comp')/('previous_comp')) as 'percent_change_comp_thisyear';\r\ntotal_comp = foreach total_comp generate 'current_comp', 'percent_change_comp_thisyear';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo_B = filter promo by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo_A by all full, promo_B by all;\r\npromo = foreach promo generate avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\npromo = foreach promo generate 'current_promo', 'previous_promo', (('current_promo'-'previous_promo')/'previous_promo') as 'percent_change_promo_thisyear';\r\npromo = foreach promo generate 'current_promo','percent_change_promo_thisyear';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nfcs_B = filter fcs by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_fcs = group fcs_A by all full, fcs_B by all;\r\ntotal_fcs = foreach total_fcs generate avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'current_fcs', 'previous_fcs', (('current_fcs'-'previous_fcs')/('previous_fcs')) as 'percent_change_fcs_thisyear';\r\ntotal_fcs = foreach total_fcs generate 'current_fcs', 'percent_change_fcs_thisyear';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nsos_B = filter sos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_sos = group sos_A by all full, sos_B by all;\r\ntotal_sos = foreach total_sos generate avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'current_sos', 'previous_sos', (('current_sos'-'previous_sos')/('previous_sos')) as 'percent_change_sos_thisyear';\r\ntotal_sos = foreach total_sos generate 'current_sos', 'percent_change_sos_thisyear';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ninv_B = filter inv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_inv = group inv_A by all full, inv_B by all;\r\ntotal_inv = foreach total_inv generate avg(inv_A.'Compliance_Percentage') as 'current_inventory', avg(inv_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inv = foreach total_inv generate 'current_inventory', 'previous_inventory', (('current_inventory'-'previous_inventory')/('previous_inventory')) as 'percent_change_inventory_thisyear';\r\ntotal_inv = foreach total_inv generate 'current_inventory', 'percent_change_inventory_thisyear';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by all full,\r\n              total_qty by all full,\r\n              total_sv by all full,\r\n              total_oos by all full,\r\n              total_comp by all full,\r\n              promo by all full,\r\n              total_fcs by all full,\r\n              total_sos by all full,\r\n              total_inv by all;\r\nfinal_table = foreach final_table generate\r\n        \r\n         sum(total_sale.'current_sales') as 'total_sales',\r\n         sum(total_sale.'percent_change_sales_thisyear') as 'Percent_change_in_Sales',\r\n         sum(total_qty.'current_quantity') as 'total_quantity',\r\n         sum(total_qty.'percent_change_quantity_thisyear') as 'Percent_Change_in_Quantity',\r\n         sum(total_sv.'current_avg_week_revenue') as 'avg_sales_velocity',\r\n         sum(total_sv.'percent_change_avg_week_revenue_thisyear') as 'Percent_Change_in_WeeklyRev',\r\n         sum(total_oos.'current_out_of_stock') as 'OutOfStock_Count',\r\n         sum(total_oos.'percent_change_out_of_stock_thisyear') as 'PoP_Out_of_Stock_percent',\r\n         avg(total_comp.'current_comp') as 'Avg_CompliancePercentage',\r\n         avg(total_comp.'percent_change_comp_thisyear') as 'Compliance_Percentate_Change_vs_Previous_Period',\r\n         avg(promo.'current_promo') as 'Avg_PromoCompliance_Percentage',\r\n         avg(promo.'percent_change_promo_thisyear') as 'PoP_Promotion_Compliance_percent',\r\n         avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\n         avg(total_fcs.'percent_change_fcs_thisyear') as 'PoP_Share_of_Shelf_Compliance_percent',  \r\n         avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage',\r\n         avg(total_sos.'percent_change_sos_thisyear') as 'PoP_Facings_Compliance_percent',  \r\n         avg(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage',\r\n         avg(total_inv.'percent_change_inventory_thisyear') as 'PoP_Inventory_Comp_percent';\r\nfinal_table = filter final_table by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Current_Period_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "StoreGroup_Metric_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "StoreGroup_Metric",
        "numbers" : [ ],
        "query" : "--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by 'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name';\r\noos_result = foreach oos_result generate oos.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name' as 'StoreGroup_Name', count(oos) as 'OutOfStock_Count';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name' as 'StoreGroup_Name','Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales', sum('Quantity') as 'Quantity';\r\norder1 = group order1 by 'StoreGroup_Name';\r\norder1 = foreach order1 generate 'StoreGroup_Name', (sum('Sales')/unique('YearWeek')) as 'avg_sales_velocity', sum('Sales') as 'total_sales',sum('Quantity') as 'total_quantity';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name' as 'StoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as Avg_SoSCompliance_Percentage;\r\nsos = group sos by 'StoreGroup_Name';\r\nsos = foreach sos generate 'StoreGroup_Name', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name' as 'StoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'StoreGroup_Name';\r\ncomp_result = foreach comp_result generate 'StoreGroup_Name', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name' as 'StoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by 'StoreGroup_Name';\r\nfcs = foreach fcs generate 'StoreGroup_Name', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name' as 'StoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by 'StoreGroup_Name';\r\npromo = foreach promo generate 'StoreGroup_Name', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name' as 'StoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by 'StoreGroup_Name';\r\ninv = foreach inv generate 'StoreGroup_Name', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by 'StoreGroup_Name' full, sos by 'StoreGroup_Name' full, oos_result by 'StoreGroup_Name' full, comp_result by 'StoreGroup_Name' full,fcs by 'StoreGroup_Name' full, promo by 'StoreGroup_Name' full, inv by 'StoreGroup_Name';\r\nfinal_table = foreach final_table generate coalesce(order1.'StoreGroup_Name',oos_result.'StoreGroup_Name',comp_result.'StoreGroup_Name',fcs.'StoreGroup_Name',sos.'StoreGroup_Name', promo.'StoreGroup_Name', inv.'StoreGroup_Name') as 'StoreGroup_Name',\r\nsum(order1.'avg_sales_velocity') as 'avg_sales_velocity',sum(order1.'total_sales') as 'total_sales',sum(order1.'total_quantity') as 'total_quantity',\r\nsum(oos_result.'OutOfStock_Count') as 'OutOfStock_Count',avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage',avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by 'StoreGroup_Name';\r\nfinal_table1 = filter final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} is not null;\r\nfinal_table1 = foreach final_table1 generate 'StoreGroup_Name' as 'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table1 = order final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Prod_ProdCat_Metric_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Prod&ProdCat_Metric",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId' == \"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'Product_Category';\r\ncomp_result = foreach comp_result generate 'Product_Category' as 'Product_Category', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by ('Product_ProductCategory_ProductCategory_Name','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Product_ProductCategory_ProductCategory_Name' as 'Product_Category','Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' \r\nas 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by 'Product_Category';\r\norder1 = foreach order1 generate 'Product_Category' as 'Product_Category', (sum('Sales')/unique('YearWeek')) as 'avg_sales_velocity',sum('Sales') as 'Sales',sum('Quantity') as 'Quantity';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by 'Product_Category';\r\nsos = foreach sos generate 'Product_Category' as 'Product_Category', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos = group oos by ('ProductCategory_Name_Custom');\r\noos = foreach oos generate 'ProductCategory_Name_Custom' as 'Product_Category',count() as 'OutOfStock_Count';\r\n-- FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by 'Product_Category';\r\nfcs = foreach fcs generate 'Product_Category' as 'Product_Category', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by 'Product_Category';\r\npromo = foreach promo generate 'Product_Category' as 'Product_Category', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by 'Product_Category';\r\ninv = foreach inv generate 'Product_Category', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by 'Product_Category' full, sos by 'Product_Category' full, oos by 'Product_Category' full, comp_result by 'Product_Category' full,fcs by 'Product_Category' full, promo by 'Product_Category' full, inv by 'Product_Category';\r\nfinal_table = foreach final_table generate coalesce(comp_result.'Product_Category',order1.'Product_Category',sos.'Product_Category',oos.'Product_Category',fcs.'Product_Category',promo.'Product_Category',inv.'Product_Category') as 'Product_Category', \r\navg(order1.'avg_sales_velocity') as 'avg_sales_velocity',sum(order1.'Sales') as 'total_sales',sum(order1.'Quantity') as 'total_quantity', sum(oos.'OutOfStock_Count') as 'OutOfStock_Count',avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage',avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage',avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by 'Product_Category';\r\nfinal_table1 = filter final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} is not null;\r\nfinal_table1 = foreach final_table1 generate 'Product_Category' as 'ProductCategory_Name_Custom', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table1 = order final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Prod_ProdCat_Change_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Prod&ProdCat_Change",
        "numbers" : [ ],
        "query" : "---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'ProductCategory_Name_Custom', comp_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'ProductCategory_Name_Custom';\r\ntotal_comp = foreach total_comp generate 'ProductCategory_Name_Custom', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\n---Decline in OutofStock (CG_RetailVisitKpi)\r\noos_A = filter comp_A by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_B = filter comp_B by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos = group oos_A by 'ProductCategory_Name_Custom' full, oos_B by 'ProductCategory_Name_Custom';\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'ProductCategory_Name_Custom', oos_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', count(oos_A) as 'current_oos', count(oos_B) as 'previous_oos';\r\n-- Decline in Sales(CG_OrderItem)\r\nsales = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nsales = filter sales by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsales_A = filter sales by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter sales by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by 'Product_ProductCategory_ProductCategory_Name' full, sales_B by 'Product_ProductCategory_ProductCategory_Name';\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Product_ProductCategory_ProductCategory_Name', sales_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales', sum(sales_A.'Quantity') as 'current_qty', sum(sales_B.'Quantity') as 'previous_qty';\r\n---Decline in SalesVelocity\r\ntotal_sv = group sales_A by ('Product_ProductCategory_ProductCategory_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sales_B by ('Product_ProductCategory_ProductCategory_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sales_A.'Product_ProductCategory_ProductCategory_Name', sales_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', sales_A.'Order_ActivatedDate_Year'+\"-\"+ sales_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sales_B.'Order_ActivatedDate_Year'+\"-\"+ sales_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Product_ProductCategory_ProductCategory_Name';\r\ntotal_sv = foreach total_sv generate 'Product_ProductCategory_ProductCategory_Name', sum('current_sales') / unique('CurrentPeriod_YearWeek') as 'current_sv', sum('previous_sales') / unique('PreviousPeriod_YearWeek') as 'previous_sv';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs_A = filter comp_A by 'Type_Computed' == \"Facing\";\r\nfcs_B = filter comp_B by 'Type_Computed' == \"Facing\";\r\ntotal_fcs = group fcs_A by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'ProductCategory_Name_Custom', fcs_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'ProductCategory_Name_Custom';\r\ntotal_fcs = foreach total_fcs generate 'ProductCategory_Name_Custom', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos_A = filter comp_A by 'Type_Computed' == \"ShareOfShelf\";\r\nsos_B = filter comp_B by 'Type_Computed' == \"ShareOfShelf\";\r\ntotal_sos = group sos_A by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'ProductCategory_Name_Custom', sos_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'ProductCategory_Name_Custom';\r\ntotal_sos = foreach total_sos generate 'ProductCategory_Name_Custom', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\n---Decline in PromotionCompliance (CG_RetailVisitKpi)\r\npromo_A = filter comp_A by 'Type_Computed' == \"OutofStock\";\r\npromo_B = filter comp_B by 'Type_Computed' == \"OutofStock\";\r\ntotal_promo = group promo_A by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'ProductCategory_Name_Custom', promo_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\ntotal_promo = group total_promo by 'ProductCategory_Name_Custom';\r\ntotal_promo = foreach total_promo generate 'ProductCategory_Name_Custom', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninventory_A = filter comp_A by 'Type_Computed' == \"Inventory\";\r\ninventory_B = filter comp_B by 'Type_Computed' == \"Inventory\";\r\ntotal_inventory = group inventory_A by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, inventory_B by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inventory = foreach total_inventory generate coalesce(inventory_A.'ProductCategory_Name_Custom', inventory_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Name', inventory_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(inventory_A.'Compliance_Percentage') as 'current_inventory', avg(inventory_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inventory = group total_inventory by 'ProductCategory_Name_Custom';\r\ntotal_inventory = foreach total_inventory generate 'ProductCategory_Name_Custom', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by 'Product_ProductCategory_ProductCategory_Name' full, total_sv by 'Product_ProductCategory_ProductCategory_Name' full, total_comp by 'ProductCategory_Name_Custom' full, total_fcs by  'ProductCategory_Name_Custom' full, total_sos by 'ProductCategory_Name_Custom' full, total_oos by 'ProductCategory_Name_Custom' full,total_promo by 'ProductCategory_Name_Custom' full, total_inventory by 'ProductCategory_Name_Custom';\r\nfinal_table = foreach final_table generate coalesce(total_sale.'Product_ProductCategory_ProductCategory_Name', total_sv.'Product_ProductCategory_ProductCategory_Name', total_fcs.'ProductCategory_Name_Custom',total_comp.'ProductCategory_Name_Custom',total_sos.'ProductCategory_Name_Custom',total_oos.'ProductCategory_Name_Custom',total_promo.'ProductCategory_Name_Custom', total_inventory.'ProductCategory_Name_Custom') as 'Product_Category', \r\n\r\n avg(total_comp.'current_comp') as 'current_comp', sum(total_oos.'current_oos') as 'current_oos', sum(total_sale.'current_sales') as 'current_sales', sum(total_sale.'current_qty') as 'current_qty', sum(total_sv.'current_sv') as 'current_sv', avg(total_fcs.'current_fcs') as 'current_fcs', avg(total_sos.'current_sos') as 'current_sos', avg(total_promo.'current_promo') as 'current_promo', avg(total_inventory.'current_inventory') as 'current_inventory', \r\n \r\n avg(total_comp.'previous_comp') as 'previous_comp', sum(total_oos.'previous_oos') as 'previous_oos', sum(total_sale.'previous_sales') as 'previous_sales', sum(total_sale.'previous_qty') as 'previous_qty', sum(total_sv.'previous_sv') as 'previous_sv', avg(total_fcs.'previous_fcs') as 'previous_fcs', avg(total_sos.'previous_sos') as 'previous_sos', avg(total_promo.'previous_promo') as 'previous_promo', avg(total_inventory.'previous_inventory') as 'previous_inventory';\r\nfinal_table1 = group final_table by 'Product_Category';\r\nfinal_table1 = foreach final_table1 generate 'Product_Category', avg('current_comp') as 'current_comp', sum('current_oos') as 'current_oos', sum('current_sales') as 'current_sales', sum('current_qty') as 'current_qty', sum('current_sv') as 'current_sv', avg('current_fcs') as 'current_fcs', avg('current_sos') as 'current_sos', avg('current_promo') as 'current_promo', avg('current_inventory') as 'current_inventory', \r\n \r\n avg('previous_comp') as 'previous_comp', sum('previous_oos') as 'previous_oos', sum('previous_sales') as 'previous_sales', sum('previous_qty') as 'previous_qty', sum('previous_sv') as 'previous_sv', avg('previous_fcs') as 'previous_fcs', avg('previous_sos') as 'previous_sos', avg('previous_promo') as 'previous_promo', avg('previous_inventory') as 'previous_inventory';\r\nfinal_table1 = foreach final_table1 generate 'Product_Category', 'current_comp' as 'Avg_CompliancePercentage', (current_comp-previous_comp)/previous_comp as 'CompliancePercent_Decline_percent', 'current_oos' as 'OutOfStock_Count', ('current_oos'-'previous_oos')/'previous_oos' as 'OOS_Decline_percent', 'current_sales' as  'total_sales', ('current_sales'-'previous_sales')/'previous_sales' as 'Sales_Decline_percent', 'current_qty' as 'total_quantity', ('current_qty'-'previous_qty')/'previous_qty' as 'Quantity_Decline_percent', 'current_sv' as 'avg_sales_velocity', ('current_sv'-'previous_sv')/'previous_sv' as 'SalesVelocity_Decline_percent', 'current_fcs' as 'Avg_FacingsCompliance_Percentage', (current_fcs-previous_fcs)/previous_fcs as 'FCS_Decline_percent', 'current_sos' as 'Avg_SoSCompliance_Percentage', (current_sos-previous_sos)/previous_sos as 'SoS_Decline_percent', 'current_promo' as 'Avg_PromoCompliance_Percentage', (current_promo-previous_promo)/(previous_promo) as 'Promo_Decline_percent', 'current_inventory' as 'Avg_InventoryCompliance_Percentage', (current_inventory - previous_inventory)/previous_inventory as 'Inventory_Decline_percent';\r\nfinal_table1 = foreach final_table1 generate 'Product_Category', '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}', {{row(picklist_1_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}};\r\nfinal_table1 = filter final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table1 = order final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' desc;\r\nfinal_table1 = foreach final_table1 generate 'Product_Category' as 'ProductCategory_Name_Custom', coalesce('{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}',0) as '{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "picklist_1_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "Alias_decline_percent" : {
            "type" : "string"
          },
          "Api_name" : {
            "type" : "string"
          },
          "Field_value" : {
            "type" : "string"
          },
          "Field_value_decline_percent" : {
            "type" : "string"
          },
          "Alias_change_percent_kpi" : {
            "type" : "string"
          },
          "Custom_text" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "picklist_1",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Revenue"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Revenue",
            "Field_value" : "sum('total_sales')",
            "Api_name" : "total_sales",
            "Field_value_decline_percent" : "sum('Sales_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "Percent_change_in_Sales"
          },
          {
            "Display" : "Quantity",
            "Field_value" : "sum('total_quantity')",
            "Api_name" : "total_quantity",
            "Field_value_decline_percent" : "sum('Quantity_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "Percent_Change_in_Quantity",
            "Custom_text" : "To view stores by Quantity for a specific product or category, set the appropriate filters in the filter bar."
          },
          {
            "Display" : "Avg Weekly Revenue",
            "Field_value" : "sum('avg_sales_velocity')",
            "Api_name" : "avg_sales_velocity",
            "Field_value_decline_percent" : "avg('SalesVelocity_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "Percent_Change_in_WeeklyRev"
          },
          {
            "Display" : "Avg Store Compliance",
            "Field_value" : "avg('Avg_CompliancePercentage')",
            "Api_name" : "Avg_CompliancePercentage",
            "Field_value_decline_percent" : "avg('CompliancePercent_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "Compliance_Percentate_Change_vs_Previous_Period"
          },
          {
            "Display" : "Out-of-Stock Occurrences",
            "Field_value" : "sum('OutOfStock_Count')",
            "Api_name" : "OutOfStock_Count",
            "Field_value_decline_percent" : "sum('OOS_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "PoP_Out_of_Stock_percent"
          },
          {
            "Display" : "Avg Share-of-Shelf Compliance",
            "Field_value" : "avg('Avg_SoSCompliance_Percentage')",
            "Api_name" : "Avg_SoSCompliance_Percentage",
            "Field_value_decline_percent" : "avg('SoS_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "PoP_Share_of_Shelf_Compliance_percent"
          },
          {
            "Display" : "Avg Facing Compliance",
            "Field_value" : "avg('Avg_FacingsCompliance_Percentage')",
            "Api_name" : "Avg_FacingsCompliance_Percentage",
            "Field_value_decline_percent" : "avg('FCS_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "PoP_Facings_Compliance_percent"
          },
          {
            "Display" : "Avg Promotion Compliance",
            "Field_value" : "avg('Avg_PromoCompliance_Percentage')",
            "Api_name" : "Avg_PromoCompliance_Percentage",
            "Field_value_decline_percent" : "avg('Promo_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "PoP_Promotion_Compliance_percent"
          },
          {
            "Display" : "Avg Inventory Compliance",
            "Field_value" : "avg('Avg_InventoryCompliance_Percentage')",
            "Api_name" : "Avg_InventoryCompliance_Percentage",
            "Field_value_decline_percent" : "avg('Inventory_Decline_percent')",
            "Alias_decline_percent" : "Decline_percent",
            "Alias_change_percent_kpi" : "PoP_Inventory_Comp_percent"
          }
        ]
      },
      "Prod_ProdCat_Change_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Prod&ProdCat_Change",
        "numbers" : [ ],
        "query" : "---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'Product_Name_Custom', comp_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'Product_Name_Custom';\r\ntotal_comp = foreach total_comp generate 'Product_Name_Custom', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\n---Decline in OutofStock (CG_RetailVisitKpi)\r\noos_A = filter comp_A by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_B = filter comp_B by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos = group oos_A by 'Product_Name_Custom' full, oos_B by 'Product_Name_Custom';\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'Product_Name_Custom', oos_B.'Product_Name_Custom') as 'Product_Name_Custom', count(oos_A) as 'current_oos', count(oos_B) as 'previous_oos';\r\n-- Decline in Sales(CG_OrderItem)\r\nsales = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nsales = filter sales by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsales_A = filter sales by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter sales by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by 'Product_Name' full, sales_B by 'Product_Name';\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Product_Name', sales_B.'Product_Name') as 'Product_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales', sum(sales_A.'Quantity') as 'current_qty', sum(sales_B.'Quantity') as 'previous_qty';\r\n---Decline in SalesVelocity\r\ntotal_sv = group sales_A by ('Product_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sales_B by ('Product_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sales_A.'Product_Name', sales_B.'Product_Name') as 'Product_Name', sales_A.'Order_ActivatedDate_Year'+\"-\"+ sales_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sales_B.'Order_ActivatedDate_Year'+\"-\"+ sales_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Product_Name';\r\ntotal_sv = foreach total_sv generate 'Product_Name', sum('current_sales') / unique('CurrentPeriod_YearWeek') as 'current_sv', sum('previous_sales') / unique('PreviousPeriod_YearWeek') as 'previous_sv';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs_A = filter comp_A by 'Type_Computed' == \"Facing\";\r\nfcs_B = filter comp_B by 'Type_Computed' == \"Facing\";\r\ntotal_fcs = group fcs_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'Product_Name_Custom', fcs_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'Product_Name_Custom';\r\ntotal_fcs = foreach total_fcs generate 'Product_Name_Custom', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos_A = filter comp_A by 'Type_Computed' == \"ShareOfShelf\";\r\nsos_B = filter comp_B by 'Type_Computed' == \"ShareOfShelf\";\r\ntotal_sos = group sos_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'Product_Name_Custom', sos_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'Product_Name_Custom';\r\ntotal_sos = foreach total_sos generate 'Product_Name_Custom', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\n---Decline in PromotionCompliance (CG_RetailVisitKpi)\r\npromo_A = filter comp_A by 'Type_Computed' == \"OutofStock\";\r\npromo_B = filter comp_B by 'Type_Computed' == \"OutofStock\";\r\ntotal_promo = group promo_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'Product_Name_Custom', promo_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\ntotal_promo = group total_promo by 'Product_Name_Custom';\r\ntotal_promo = foreach total_promo generate 'Product_Name_Custom', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninventory_A = filter comp_A by 'Type_Computed' == \"Inventory\";\r\ninventory_B = filter comp_B by 'Type_Computed' == \"Inventory\";\r\ntotal_inventory = group inventory_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, inventory_B by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inventory = foreach total_inventory generate coalesce(inventory_A.'Product_Name_Custom', inventory_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Name', inventory_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(inventory_A.'Compliance_Percentage') as 'current_inventory', avg(inventory_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inventory = group total_inventory by 'Product_Name_Custom';\r\ntotal_inventory = foreach total_inventory generate 'Product_Name_Custom', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by 'Product_Name' full, total_sv by 'Product_Name' full, total_comp by 'Product_Name_Custom' full, total_fcs by  'Product_Name_Custom' full, total_sos by 'Product_Name_Custom' full, total_oos by 'Product_Name_Custom' full,total_promo by 'Product_Name_Custom' full, total_inventory by 'Product_Name_Custom';\r\nfinal_table = foreach final_table generate coalesce(total_sale.'Product_Name', total_sv.'Product_Name', total_fcs.'Product_Name_Custom',total_comp.'Product_Name_Custom',total_sos.'Product_Name_Custom',total_oos.'Product_Name_Custom',total_promo.'Product_Name_Custom', total_inventory.'Product_Name_Custom') as 'Product', \r\n\r\n avg(total_comp.'current_comp') as 'current_comp', sum(total_oos.'current_oos') as 'current_oos', sum(total_sale.'current_sales') as 'current_sales', sum(total_sale.'current_qty') as 'current_qty', sum(total_sv.'current_sv') as 'current_sv', avg(total_fcs.'current_fcs') as 'current_fcs', avg(total_sos.'current_sos') as 'current_sos', avg(total_promo.'current_promo') as 'current_promo', avg(total_inventory.'current_inventory') as 'current_inventory', \r\n \r\n avg(total_comp.'previous_comp') as 'previous_comp', sum(total_oos.'previous_oos') as 'previous_oos', sum(total_sale.'previous_sales') as 'previous_sales', sum(total_sale.'previous_qty') as 'previous_qty', sum(total_sv.'previous_sv') as 'previous_sv', avg(total_fcs.'previous_fcs') as 'previous_fcs', avg(total_sos.'previous_sos') as 'previous_sos', avg(total_promo.'previous_promo') as 'previous_promo', avg(total_inventory.'previous_inventory') as 'previous_inventory';\r\nfinal_table1 = group final_table by 'Product';\r\nfinal_table1 = foreach final_table1 generate 'Product', avg('current_comp') as 'current_comp', sum('current_oos') as 'current_oos', sum('current_sales') as 'current_sales', sum('current_qty') as 'current_qty', sum('current_sv') as 'current_sv', avg('current_fcs') as 'current_fcs', avg('current_sos') as 'current_sos', avg('current_promo') as 'current_promo', avg('current_inventory') as 'current_inventory', \r\n \r\n avg('previous_comp') as 'previous_comp', sum('previous_oos') as 'previous_oos', sum('previous_sales') as 'previous_sales', sum('previous_qty') as 'previous_qty', sum('previous_sv') as 'previous_sv', avg('previous_fcs') as 'previous_fcs', avg('previous_sos') as 'previous_sos', avg('previous_promo') as 'previous_promo', avg('previous_inventory') as 'previous_inventory';\r\nfinal_table1 = foreach final_table1 generate 'Product', 'current_comp' as 'Avg_CompliancePercentage', (current_comp-previous_comp)/previous_comp as 'CompliancePercent_Decline_percent', 'current_oos' as 'OutOfStock_Count', ('current_oos'-'previous_oos')/'previous_oos' as 'OOS_Decline_percent', 'current_sales' as  'total_sales', ('current_sales'-'previous_sales')/'previous_sales' as 'Sales_Decline_percent', 'current_qty' as 'total_quantity', ('current_qty'-'previous_qty')/'previous_qty' as 'Quantity_Decline_percent', 'current_sv' as 'avg_sales_velocity', ('current_sv'-'previous_sv')/'previous_sv' as 'SalesVelocity_Decline_percent', 'current_fcs' as 'Avg_FacingsCompliance_Percentage', (current_fcs-previous_fcs)/previous_fcs as 'FCS_Decline_percent', 'current_sos' as 'Avg_SoSCompliance_Percentage', (current_sos-previous_sos)/previous_sos as 'SoS_Decline_percent', 'current_promo' as 'Avg_PromoCompliance_Percentage', (current_promo-previous_promo)/(previous_promo) as 'Promo_Decline_percent', 'current_inventory' as 'Avg_InventoryCompliance_Percentage', (current_inventory - previous_inventory)/previous_inventory as 'Inventory_Decline_percent';\r\nfinal_table1 = foreach final_table1 generate 'Product', '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}', {{row(picklist_1_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}};\r\nfinal_table1 = filter final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table1 = order final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' desc;\r\nfinal_table1 = foreach final_table1 generate 'Product' as 'Product_Name_Custom', coalesce('{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}',0) as '{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Prod_ProdCat_Metric_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Prod&ProdCat_Metric",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('ProductCategory_Name_Custom','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ProductCategory_Name_Custom' as 'Product_Category','Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by  ('Product_Category','Product');\r\ncomp_result = foreach comp_result generate 'Product_Category' as 'Product_Category','Product' as 'Product', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by('Product_ProductCategory_ProductCategory_Name','Product_Name','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Product_ProductCategory_ProductCategory_Name' as 'Product_Category','Product_Name' as 'Product','Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' \r\nas 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ({{column(product_toggle_1.selection,[\"Field_Value\"]).asObject()}});\r\norder1 = foreach order1 generate {{column(product_toggle_1.selection,[\"Field_Value\"]).asObject()}} as 'Product_Category', {{column(product_toggle_1.selection,[\"Field_Value\"]).asObject()}} as 'Product', (sum('Sales')/unique('YearWeek')) as 'avg_sales_velocity',sum('Sales') as 'Sales',sum('Quantity') as 'Quantity';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('ProductCategory_Name_Custom','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'ProductCategory_Name_Custom' as 'Product_Category','Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('Product_Category','Product');\r\nsos = foreach sos generate 'Product_Category', 'Product', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ProductCategory_Name_Custom','Product_Name_Custom');\r\noos_result = foreach oos_result generate oos.'ProductCategory_Name_Custom' as 'Product_Category',oos.'Product_Name_Custom' as 'Product',count(oos) as 'OutOfStock_Count';\r\n-- FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('ProductCategory_Name_Custom','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'ProductCategory_Name_Custom' as 'Product_Category','Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('Product_Category','Product');\r\nfcs = foreach fcs generate 'Product_Category', 'Product', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('ProductCategory_Name_Custom','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ProductCategory_Name_Custom' as 'Product_Category','Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('Product_Category','Product');\r\npromo = foreach promo generate 'Product_Category', 'Product', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('ProductCategory_Name_Custom','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'ProductCategory_Name_Custom' as 'Product_Category','Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('Product_Category','Product');\r\ninv = foreach inv generate 'Product_Category', 'Product', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Product_Category','Product') full, sos by ('Product_Category','Product') full, oos_result by ('Product_Category','Product') full, comp_result by ('Product_Category','Product') full,fcs by ('Product_Category','Product') full, promo by ('Product_Category','Product') full, inv by ('Product_Category','Product');\r\nfinal_table = foreach final_table generate coalesce(comp_result.'Product_Category',order1.'Product_Category',sos.'Product_Category',oos_result.'Product_Category',fcs.'Product_Category',promo.'Product_Category',inv.'Product_Category') as 'Product_Category',coalesce(comp_result.'Product',order1.'Product',sos.'Product',oos_result.'Product',fcs.'Product',promo.'Product',inv.'Product') as 'Product', \r\navg(order1.'avg_sales_velocity') as 'avg_sales_velocity',sum(order1.'Sales') as 'total_sales',sum(order1.'Quantity') as 'total_quantity', sum(oos_result.'OutOfStock_Count') as 'OutOfStock_Count',avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage',avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage',avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by {{column(product_toggle_1.selection,[\"Field_Value\"]).asObject()}};\r\nfinal_table1 = filter final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} is not null;\r\nfinal_table1 = foreach final_table1 generate {{row(product_toggle_1.selection,[0],[\"Field_Value\",\"API_Name\"]).asProjection()}},{{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table1 = order final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Prod_ProdCat_Metric_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Prod&ProdCat_Metric",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId' == \"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'Product';\r\ncomp_result = foreach comp_result generate 'Product' as 'Product', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by ('Product_Name','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Product_Name' as 'Product','Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' \r\nas 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by 'Product';\r\norder1 = foreach order1 generate 'Product' as 'Product', (sum('Sales')/unique('YearWeek')) as 'avg_sales_velocity',sum('Sales') as 'Sales',sum('Quantity') as 'Quantity';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by 'Product';\r\nsos = foreach sos generate 'Product' as 'Product', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos = group oos by ('Product_Name_Custom');\r\noos = foreach oos generate 'Product_Name_Custom' as 'Product',count() as 'OutOfStock_Count';\r\n-- FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by 'Product';\r\nfcs = foreach fcs generate 'Product' as 'Product', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by 'Product';\r\npromo = foreach promo generate 'Product' as 'Product', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'Product_Name_Custom' as 'Product', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by 'Product';\r\ninv = foreach inv generate 'Product', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by 'Product' full, sos by 'Product' full, oos by 'Product' full, comp_result by 'Product' full,fcs by 'Product' full, promo by 'Product' full, inv by 'Product';\r\nfinal_table = foreach final_table generate coalesce(comp_result.'Product',order1.'Product',sos.'Product',oos.'Product',fcs.'Product',promo.'Product',inv.'Product') as 'Product', \r\navg(order1.'avg_sales_velocity') as 'avg_sales_velocity',sum(order1.'Sales') as 'total_sales',sum(order1.'Quantity') as 'total_quantity', sum(oos.'OutOfStock_Count') as 'OutOfStock_Count',avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage',avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage',avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by 'Product';\r\nfinal_table1 = filter final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} is not null;\r\nfinal_table1 = foreach final_table1 generate 'Product' as 'Product_Name_Custom', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table1 = order final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Prod_ProdCat_Change_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Prod&ProdCat_Change",
        "numbers" : [ ],
        "query" : "---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'ProductCategory_Name_Custom', comp_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom',\r\ncoalesce(comp_A.'Product_Name_Custom', comp_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by ('ProductCategory_Name_Custom', 'Product_Name_Custom');\r\ntotal_comp = foreach total_comp generate 'ProductCategory_Name_Custom', 'Product_Name_Custom', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\n---Decline in OutofStock (CG_RetailVisitKpi)\r\noos_A = filter comp_A by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_B = filter comp_B by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos = group oos_A by ('ProductCategory_Name_Custom', 'Product_Name_Custom') full, oos_B by ('ProductCategory_Name_Custom', 'Product_Name_Custom');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'ProductCategory_Name_Custom', oos_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(oos_A.'Product_Name_Custom', oos_B.'Product_Name_Custom') as 'Product_Name_Custom', count(oos_A) as 'current_oos', count(oos_B) as 'previous_oos';\r\n-- Decline in Sales(CG_OrderItem)\r\nsales = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nsales = filter sales by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsales_A = filter sales by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter sales by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name') full, sales_B by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Product_ProductCategory_ProductCategory_Name', sales_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', coalesce(sales_A.'Product_Name', sales_B.'Product_Name') as 'Product_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales', sum(sales_A.'Quantity') as 'current_qty', sum(sales_B.'Quantity') as 'previous_qty';\r\n---Decline in SalesVelocity\r\ntotal_sv = group sales_A by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sales_B by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sales_A.'Product_ProductCategory_ProductCategory_Name', sales_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', coalesce(sales_A.'Product_Name', sales_B.'Product_Name') as 'Product_Name', sales_A.'Order_ActivatedDate_Year'+\"-\"+ sales_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sales_B.'Order_ActivatedDate_Year'+\"-\"+ sales_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name');\r\ntotal_sv = foreach total_sv generate 'Product_ProductCategory_ProductCategory_Name', 'Product_Name', sum('current_sales') / unique('CurrentPeriod_YearWeek') as 'current_sv', sum('previous_sales') / unique('PreviousPeriod_YearWeek') as 'previous_sv';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs_A = filter comp_A by 'Type_Computed' == \"Facing\";\r\nfcs_B = filter comp_B by 'Type_Computed' == \"Facing\";\r\ntotal_fcs = group fcs_A by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'ProductCategory_Name_Custom', fcs_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(fcs_A.'Product_Name_Custom', fcs_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by ('ProductCategory_Name_Custom', 'Product_Name_Custom');\r\ntotal_fcs = foreach total_fcs generate 'ProductCategory_Name_Custom', 'Product_Name_Custom', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos_A = filter comp_A by 'Type_Computed' == \"ShareOfShelf\";\r\nsos_B = filter comp_B by 'Type_Computed' == \"ShareOfShelf\";\r\ntotal_sos = group sos_A by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'ProductCategory_Name_Custom', sos_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(sos_A.'Product_Name_Custom', sos_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by ('ProductCategory_Name_Custom', 'Product_Name_Custom');\r\ntotal_sos = foreach total_sos generate 'ProductCategory_Name_Custom', 'Product_Name_Custom', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\n---Decline in PromotionCompliance (CG_RetailVisitKpi)\r\npromo_A = filter comp_A by 'Type_Computed' == \"OutofStock\";\r\npromo_B = filter comp_B by 'Type_Computed' == \"OutofStock\";\r\ntotal_promo = group promo_A by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'ProductCategory_Name_Custom', promo_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(promo_A.'Product_Name_Custom', promo_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\ntotal_promo = group total_promo by ('ProductCategory_Name_Custom', 'Product_Name_Custom');\r\ntotal_promo = foreach total_promo generate 'ProductCategory_Name_Custom', 'Product_Name_Custom', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninventory_A = filter comp_A by 'Type_Computed' == \"Inventory\";\r\ninventory_B = filter comp_B by 'Type_Computed' == \"Inventory\";\r\ntotal_inventory = group inventory_A by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name') full, inventory_B by ('ProductCategory_Name_Custom', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inventory = foreach total_inventory generate coalesce(inventory_A.'ProductCategory_Name_Custom', inventory_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(inventory_A.'Product_Name_Custom', inventory_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Name', inventory_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(inventory_A.'Compliance_Percentage') as 'current_inventory', avg(inventory_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inventory = group total_inventory by ('ProductCategory_Name_Custom', 'Product_Name_Custom');\r\ntotal_inventory = foreach total_inventory generate 'ProductCategory_Name_Custom', 'Product_Name_Custom', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name') full, total_sv by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name') full, total_comp by ('ProductCategory_Name_Custom', 'Product_Name_Custom') full, total_fcs by  ('ProductCategory_Name_Custom', 'Product_Name_Custom') full, total_sos by ('ProductCategory_Name_Custom', 'Product_Name_Custom') full, total_oos by ('ProductCategory_Name_Custom', 'Product_Name_Custom') full,total_promo by ('ProductCategory_Name_Custom', 'Product_Name_Custom') full, total_inventory by ('ProductCategory_Name_Custom', 'Product_Name_Custom');\r\nfinal_table = foreach final_table generate coalesce(total_sale.'Product_ProductCategory_ProductCategory_Name', total_sv.'Product_ProductCategory_ProductCategory_Name', total_fcs.'ProductCategory_Name_Custom',total_comp.'ProductCategory_Name_Custom',total_sos.'ProductCategory_Name_Custom',total_oos.'ProductCategory_Name_Custom',total_promo.'ProductCategory_Name_Custom', total_inventory.'ProductCategory_Name_Custom') as 'Product_Category', \r\n\r\ncoalesce(total_sale.'Product_Name', total_sv.'Product_Name', total_fcs.'Product_Name_Custom',total_comp.'Product_Name_Custom',total_sos.'Product_Name_Custom',total_oos.'Product_Name_Custom',total_promo.'Product_Name_Custom', total_inventory.'Product_Name_Custom') as 'Product', \r\n\r\n avg(total_comp.'current_comp') as 'current_comp', sum(total_oos.'current_oos') as 'current_oos', sum(total_sale.'current_sales') as 'current_sales', sum(total_sale.'current_qty') as 'current_qty', sum(total_sv.'current_sv') as 'current_sv', avg(total_fcs.'current_fcs') as 'current_fcs', avg(total_sos.'current_sos') as 'current_sos', avg(total_promo.'current_promo') as 'current_promo', avg(total_inventory.'current_inventory') as 'current_inventory', \r\n \r\n avg(total_comp.'previous_comp') as 'previous_comp', sum(total_oos.'previous_oos') as 'previous_oos', sum(total_sale.'previous_sales') as 'previous_sales', sum(total_sale.'previous_qty') as 'previous_qty', sum(total_sv.'previous_sv') as 'previous_sv', avg(total_fcs.'previous_fcs') as 'previous_fcs', avg(total_sos.'previous_sos') as 'previous_sos', avg(total_promo.'previous_promo') as 'previous_promo', avg(total_inventory.'previous_inventory') as 'previous_inventory';\r\nfinal_table1 = group final_table by {{column(product_toggle_1.selection,[\"Field_Value\"]).asObject()}};\r\nfinal_table1 = foreach final_table1 generate {{column(product_toggle_1.selection,[\"Field_Value\"]).asObject()}}, avg('current_comp') as 'current_comp', sum('current_oos') as 'current_oos', sum('current_sales') as 'current_sales', sum('current_qty') as 'current_qty', sum('current_sv') as 'current_sv', avg('current_fcs') as 'current_fcs', avg('current_sos') as 'current_sos', avg('current_promo') as 'current_promo', avg('current_inventory') as 'current_inventory', \r\n \r\n avg('previous_comp') as 'previous_comp', sum('previous_oos') as 'previous_oos', sum('previous_sales') as 'previous_sales', sum('previous_qty') as 'previous_qty', sum('previous_sv') as 'previous_sv', avg('previous_fcs') as 'previous_fcs', avg('previous_sos') as 'previous_sos', avg('previous_promo') as 'previous_promo', avg('previous_inventory') as 'previous_inventory';\r\nfinal_table1 = foreach final_table1 generate {{column(product_toggle_1.selection,[\"Field_Value\"]).asObject()}}, 'current_comp' as 'Avg_CompliancePercentage', (current_comp-previous_comp)/previous_comp as 'CompliancePercent_Decline_percent', 'current_oos' as 'OutOfStock_Count', ('current_oos'-'previous_oos')/'previous_oos' as 'OOS_Decline_percent', 'current_sales' as  'total_sales', ('current_sales'-'previous_sales')/'previous_sales' as 'Sales_Decline_percent', 'current_qty' as 'total_quantity', ('current_qty'-'previous_qty')/'previous_qty' as 'Quantity_Decline_percent', 'current_sv' as 'avg_sales_velocity', ('current_sv'-'previous_sv')/'previous_sv' as 'SalesVelocity_Decline_percent', 'current_fcs' as 'Avg_FacingsCompliance_Percentage', (current_fcs-previous_fcs)/previous_fcs as 'FCS_Decline_percent', 'current_sos' as 'Avg_SoSCompliance_Percentage', (current_sos-previous_sos)/previous_sos as 'SoS_Decline_percent', 'current_promo' as 'Avg_PromoCompliance_Percentage', (current_promo-previous_promo)/(previous_promo) as 'Promo_Decline_percent', 'current_inventory' as 'Avg_InventoryCompliance_Percentage', (current_inventory - previous_inventory)/previous_inventory as 'Inventory_Decline_percent';\r\nfinal_table1 = foreach final_table1 generate {{column(product_toggle_1.selection,[\"Field_Value\"]).asObject()}}, '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}', {{row(picklist_1_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}};\r\nfinal_table1 = filter final_table1 by {{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}} is not null;\r\nfinal_table1 = order final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' desc;\r\nfinal_table1 = foreach final_table1 generate {{row(product_toggle_1.selection,[0],[\"Field_Value\",\"API_Name\"]).asProjection()}}, '{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "zipcode_metric_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "city_metric",
        "numbers" : [ ],
        "query" : "--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by 'AssessmentTask_Visit_RetailStore_Location_Address_City';\r\noos_result = foreach oos_result generate oos.'AssessmentTask_Visit_RetailStore_Location_Address_City' as 'City',count(oos) as 'OutOfStock_Count';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by( 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City' as 'City','Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'total_sales', sum('Quantity') as 'total_quantity';\r\norder1 = group order1 by 'City';\r\norder1 = foreach order1 generate 'City', (sum('total_sales')/unique('YearWeek')) as 'avg_sales_velocity', sum('total_sales') as 'total_sales',sum('total_quantity') as 'total_quantity';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'AssessmentTask_Visit_RetailStore_Location_Address_City' as 'City', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as Avg_SoSCompliance_Percentage;\r\nsos = group sos by 'City';\r\nsos = foreach sos generate 'City', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('AssessmentTask_Visit_RetailStore_Location_Address_City','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'AssessmentTask_Visit_RetailStore_Location_Address_City' as 'City', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_CompliancePercentage';\r\ncomp_result = group comp_result by 'City';\r\ncomp_result = foreach comp_result generate 'City' as 'City', avg('Avg_CompliancePercentage') as 'Avg_CompliancePercentage';\r\n-- FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'AssessmentTask_Visit_RetailStore_Location_Address_City' as 'City', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by 'City';\r\nfcs = foreach fcs generate 'City', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'AssessmentTask_Visit_RetailStore_Location_Address_City' as 'City', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by 'City';\r\npromo = foreach promo generate 'City', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--Average Inventory Compliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_result = group inv by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv_result = foreach inv_result generate 'AssessmentTask_Visit_RetailStore_Location_Address_City' as 'City', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv_result = group inv_result by 'City';\r\ninv_result = foreach inv_result generate 'City', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by 'City' full, sos by  'City' full, oos_result by  'City' full, comp_result by 'City' full,fcs by 'City' full, promo by 'City' full, inv_result by 'City';\r\nfinal_table = foreach final_table generate coalesce(order1.'City',oos_result.'City',comp_result.'City',fcs.'City',sos.'City',promo.'City', inv_result.'City') as 'City', sum(order1.'avg_sales_velocity') as 'avg_sales_velocity',sum(order1.'total_sales') as 'total_sales', sum(order1.'total_quantity') as 'total_quantity', sum(oos_result.'OutOfStock_Count') as 'OutOfStock_Count', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage',avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv_result.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by 'City';\r\nfinal_table1 = filter final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} is not null;\r\nfinal_table1 = foreach final_table1 generate 'City' as 'AssessmentTask_Visit_RetailStore_Location_Address_City', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table1 = order final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Store_PercentChange_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Store_PercentChange",
        "numbers" : [ ],
        "query" : "--Store Details\r\nstore = load \"${App.Datasets.CG_Visit36_tp.FullyQualifiedName}\";\r\nstore = group store by 'RetailStore_Name';\r\nstore = foreach store generate 'RetailStore_Name' as 'Store_Name';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'Store_Name';\r\ntotal_comp = foreach total_comp generate 'Store_Name', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'Store_Name','current_comp', 'previous_comp', current_comp-previous_comp as 'Decline', (current_comp-previous_comp)/previous_comp as 'Decline_percent';\r\n---Decline in OutofStock (CG_RetailVisitKpi)\r\noos_A = filter comp_A by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_B = filter comp_B by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos = group oos_A by ('AssessmentTask_Visit_RetailStore_Name') full, oos_B by ('AssessmentTask_Visit_RetailStore_Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'AssessmentTask_Visit_RetailStore_Name', oos_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', count(oos_A) as 'current_oos', count(oos_B) as 'previous_oos', count(oos_A) - count(oos_B) as 'Decline', (count(oos_A) - count(oos_B)) / count(oos_B) as 'Decline_percent';\r\n-- Decline in Sales(CG_OrderItem)\r\nsales = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nsales = filter sales by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsales_A = filter sales by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter sales by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name') full, sales_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', sales_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales', sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice') as 'Sales_Decline', (sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice'))/sum(sales_B.'TotalPrice') as 'Sales_Decline_percent', sum(sales_A.'Quantity') as 'current_qty', sum(sales_B.'Quantity') as 'previous_qty', sum(sales_A.'Quantity') - sum(sales_B.'Quantity') as 'Quantity_Decline', (sum(sales_A.'Quantity') - sum(sales_B.'Quantity'))/sum(sales_B.'Quantity') as 'Quantity_Decline_percent';\r\n---Decline in SalesVelocity\r\ntotal_sv = group sales_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sales_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sales_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', sales_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', sales_A.'Order_ActivatedDate_Year'+\"-\"+ sales_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sales_B.'Order_ActivatedDate_Year'+\"-\"+ sales_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Store_Name';\r\ntotal_sv = foreach total_sv generate 'Store_Name', sum('current_sales') / unique('CurrentPeriod_YearWeek') as 'current_sv', sum('previous_sales') / unique('PreviousPeriod_YearWeek') as 'previous_sv', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) as 'SalesVelocity_Decline', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) / (sum('previous_sales') / unique('PreviousPeriod_YearWeek')) as 'SalesVelocity_Decline_percent';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs_A = filter comp_A by 'Type_Computed' == \"Facing\";\r\nfcs_B = filter comp_B by 'Type_Computed' == \"Facing\";\r\ntotal_fcs = group fcs_A by ('AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'Store_Name';\r\ntotal_fcs = foreach total_fcs generate 'Store_Name', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'Store_Name','current_fcs', 'previous_fcs', current_fcs-previous_fcs as 'Decline', (current_fcs-previous_fcs)/previous_fcs as 'Decline_percent';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos_A = filter comp_A by 'Type_Computed' == \"ShareOfShelf\";\r\nsos_B = filter comp_B by 'Type_Computed' == \"ShareOfShelf\";\r\ntotal_sos = group sos_A by ('AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'Store_Name';\r\ntotal_sos = foreach total_sos generate 'Store_Name', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'Store_Name','current_sos', 'previous_sos', current_sos-previous_sos as 'Decline', (current_sos-previous_sos)/previous_sos as 'Decline_percent';\r\n---Decline in PromotionCompliance (CG_RetailVisitKpi)\r\npromo_A = filter comp_A by 'Type_Computed' == \"OutofStock\";\r\npromo_B = filter comp_B by 'Type_Computed' == \"OutofStock\";\r\ntotal_promo = group promo_A by ('AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('AssessmentTask_Visit_RetailStore_Name');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\ntotal_promo = group total_promo by 'Store_Name';\r\ntotal_promo = foreach total_promo generate 'Store_Name', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\ntotal_promo = foreach total_promo generate 'Store_Name','current_promo', 'previous_promo', current_promo-previous_promo as 'Decline', (current_promo-previous_promo)/(previous_promo) as 'Decline_percent';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninventory_A = filter comp_A by 'Type_Computed' == \"Inventory\";\r\ninventory_B = filter comp_B by 'Type_Computed' == \"Inventory\";\r\ntotal_inventory = group inventory_A by ('AssessmentTask_Visit_RetailStore_Name') full, inventory_B by ('AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inventory = foreach total_inventory generate coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Name', inventory_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(inventory_A.'Compliance_Percentage') as 'current_inventory', avg(inventory_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inventory = group total_inventory by 'Store_Name';\r\ntotal_inventory = foreach total_inventory generate 'Store_Name', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inventory = foreach total_inventory generate 'Store_Name','current_inventory', 'previous_inventory', current_inventory-previous_inventory as 'Decline', (current_inventory - previous_inventory)/previous_inventory as 'Decline_percent';\r\n--final multidataset table\r\nfinal_table = cogroup store by 'Store_Name' full, total_sale by 'Store_Name' full, total_sv by 'Store_Name' full, total_comp by 'Store_Name' full, total_fcs by  'Store_Name' full, total_sos by 'Store_Name' full, total_oos by 'Store_Name' full,total_promo by 'Store_Name' full, total_inventory by 'Store_Name';\r\nfinal_table = foreach final_table generate coalesce(store.'Store_Name', total_sale.'Store_Name', total_sv.'Store_Name', total_fcs.'Store_Name',total_comp.'Store_Name',total_sos.'Store_Name',total_oos.'Store_Name',total_promo.'Store_Name', total_inventory.'Store_Name') as 'Store_Name', \r\n\r\nsum(total_sale.'Sales_Decline') as 'Sales_Decline', sum(total_sale.'Sales_Decline_percent') as 'Sales_Decline_percent', sum(total_sale.'Quantity_Decline') as 'Quantity_Decline', sum(total_sale.'Quantity_Decline_percent') as 'Quantity_Decline_percent', sum(total_fcs.'Decline') as 'FCS_Decline', sum(total_fcs.'Decline_percent') as 'FCS_Decline_percent', avg(total_sv.'SalesVelocity_Decline') as 'SalesVelocity_Decline', avg(total_sv.'SalesVelocity_Decline_percent') as 'SalesVelocity_Decline_percent', avg(total_comp.'Decline') as 'CompliancePercent_Decline', avg(total_comp.'Decline_percent') as 'CompliancePercent_Decline_percent', avg(total_sos.'Decline') as 'SoS_Decline', avg(total_sos.'Decline_percent') as 'SoS_Decline_percent', sum(total_oos.'Decline') as 'OOS_Decline', sum(total_oos.'Decline_percent') as 'OOS_Decline_percent', avg(total_promo.'Decline') as 'Promo_Decline', avg(total_promo.'Decline_percent') as 'Promo_Decline_percent', avg(total_inventory.'Decline') as 'Inventory_Decline', avg(total_inventory.'Decline_percent') as 'Inventory_Decline_percent', avg(total_comp.'current_comp') as 'Avg_CompliancePercentage', sum(total_oos.'current_oos') as 'OutOfStock_Count', sum(total_sale.'current_sales') as 'total_sales', sum(total_sale.'current_qty') as 'total_quantity', sum(total_sv.'current_sv') as 'avg_sales_velocity', avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', avg(total_promo.'current_promo') as 'Avg_PromoCompliance_Percentage', avg(total_inventory.'current_inventory') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by 'Store_Name';\r\nfinal_table1 = foreach final_table1 generate 'Store_Name' as 'RetailStore_Name', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}', {{row(picklist_1_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}};\r\nfinal_table1 = filter final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table1 = order final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' desc;\r\nfinal_table1 = foreach final_table1 generate 'RetailStore_Name', coalesce('{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}',0) as '{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "percent_change_accou_1" : {
        "broadcastFacet" : false,
        "groups" : [ ],
        "label" : "percent_change_account",
        "numbers" : [ ],
        "query" : "--Account Details\r\naccount = load \"${App.Datasets.CG_Visit36_tp.FullyQualifiedName}\";\r\naccount = group account by 'RetailStore_Account_Name';\r\naccount = foreach account generate 'RetailStore_Account_Name' as 'Account';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Account_Name', comp_B.'AssessmentTask_Visit_RetailStore_Account_Name') as 'Account', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'Account';\r\ntotal_comp = foreach total_comp generate 'Account', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'Account','current_comp', 'previous_comp', current_comp-previous_comp as 'Decline', (current_comp-previous_comp)/previous_comp as 'Decline_percent';\r\n---Decline in OutofStock (CG_RetailVisitKpi)\r\noos_A = filter comp_A by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_B = filter comp_B by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos = group oos_A by ('AssessmentTask_Visit_RetailStore_Account_Name') full, oos_B by ('AssessmentTask_Visit_RetailStore_Account_Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'AssessmentTask_Visit_RetailStore_Account_Name', oos_B.'AssessmentTask_Visit_RetailStore_Account_Name') as 'Account', count(oos_A) as 'current_oos', count(oos_B) as 'previous_oos', count(oos_A) - count(oos_B) as 'Decline', (count(oos_A) - count(oos_B)) / count(oos_B) as 'Decline_percent';\r\n-- Decline in Sales(CG_OrderItem)\r\nsales = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nsales = filter sales by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\nsales_A = filter sales by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter sales by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name') full, sales_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name', sales_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name') as 'Account', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales', sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice') as 'Sales_Decline', (sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice'))/sum(sales_B.'TotalPrice') as 'Sales_Decline_percent', sum(sales_A.'Quantity') as 'current_qty', sum(sales_B.'Quantity') as 'previous_qty', sum(sales_A.'Quantity') - sum(sales_B.'Quantity') as 'Quantity_Decline', (sum(sales_A.'Quantity') - sum(sales_B.'Quantity'))/sum(sales_B.'Quantity') as 'Quantity_Decline_percent';\r\n---Decline in SalesVelocity\r\ntotal_sv = group sales_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sales_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sales_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name', sales_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name') as 'Account', sales_A.'Order_ActivatedDate_Year'+\"-\"+ sales_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sales_B.'Order_ActivatedDate_Year'+\"-\"+ sales_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Account';\r\ntotal_sv = foreach total_sv generate 'Account', sum('current_sales') / unique('CurrentPeriod_YearWeek') as 'current_sv', sum('previous_sales') / unique('PreviousPeriod_YearWeek') as 'previous_sv', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) as 'SalesVelocity_Decline', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) / (sum('previous_sales') / unique('PreviousPeriod_YearWeek')) as 'SalesVelocity_Decline_percent';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs_A = filter comp_A by 'Type_Computed' == \"Facing\";\r\nfcs_B = filter comp_B by 'Type_Computed' == \"Facing\";\r\ntotal_fcs = group fcs_A by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Account_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Account_Name') as 'Account', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'Account';\r\ntotal_fcs = foreach total_fcs generate 'Account', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'Account','current_fcs', 'previous_fcs', current_fcs-previous_fcs as 'Decline', (current_fcs-previous_fcs)/previous_fcs as 'Decline_percent';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos_A = filter comp_A by 'Type_Computed' == \"ShareOfShelf\";\r\nsos_B = filter comp_B by 'Type_Computed' == \"ShareOfShelf\";\r\ntotal_sos = group sos_A by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Account_Name', sos_B.'AssessmentTask_Visit_RetailStore_Account_Name') as 'Account', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'Account';\r\ntotal_sos = foreach total_sos generate 'Account', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'Account','current_sos', 'previous_sos', current_sos-previous_sos as 'Decline', (current_sos-previous_sos)/previous_sos as 'Decline_percent';\r\n---Decline in PromotionCompliance (CG_RetailVisitKpi)\r\npromo_A = filter comp_A by 'Type_Computed' == \"OutofStock\";\r\npromo_B = filter comp_B by 'Type_Computed' == \"OutofStock\";\r\ntotal_promo = group promo_A by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Account_Name', promo_B.'AssessmentTask_Visit_RetailStore_Account_Name') as 'Account', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\ntotal_promo = group total_promo by 'Account';\r\ntotal_promo = foreach total_promo generate 'Account', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\ntotal_promo = foreach total_promo generate 'Account','current_promo', 'previous_promo', current_promo-previous_promo as 'Decline', (current_promo-previous_promo)/(previous_promo) as 'Decline_percent';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninventory_A = filter comp_A by 'Type_Computed' == \"Inventory\";\r\ninventory_B = filter comp_B by 'Type_Computed' == \"Inventory\";\r\ntotal_inventory = group inventory_A by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name') full, inventory_B by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inventory = foreach total_inventory generate coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Account_Name', inventory_B.'AssessmentTask_Visit_RetailStore_Account_Name') as 'Account', coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Name', inventory_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(inventory_A.'Compliance_Percentage') as 'current_inventory', avg(inventory_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inventory = group total_inventory by 'Account';\r\ntotal_inventory = foreach total_inventory generate 'Account', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inventory = foreach total_inventory generate 'Account','current_inventory', 'previous_inventory', current_inventory-previous_inventory as 'Decline', (current_inventory - previous_inventory)/previous_inventory as 'Decline_percent';\r\n--final multidataset table\r\nfinal_table = cogroup account by 'Account' full, total_sale by 'Account' full, total_sv by 'Account' full, total_comp by 'Account' full, total_fcs by  'Account' full, total_sos by 'Account' full, total_oos by 'Account' full,total_promo by 'Account' full, total_inventory by 'Account';\r\nfinal_table = foreach final_table generate coalesce(account.'Account', total_sale.'Account', total_sv.'Account', total_fcs.'Account',total_comp.'Account',total_sos.'Account',total_oos.'Account',total_promo.'Account', total_inventory.'Account') as 'Account', \r\n\r\nsum(total_sale.'current_sales') as 'total_sales', sum(total_sale.'Sales_Decline_percent') as 'Sales_Decline_percent', sum(total_sale.'current_qty') as 'total_quantity', sum(total_sale.'Quantity_Decline_percent') as 'Quantity_Decline_percent', sum(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', sum(total_fcs.'Decline_percent') as 'FCS_Decline_percent', avg(total_sv.'current_sv') as 'avg_sales_velocity', avg(total_sv.'SalesVelocity_Decline_percent') as 'SalesVelocity_Decline_percent', avg(total_comp.'current_comp') as 'Avg_CompliancePercentage', avg(total_comp.'Decline_percent') as 'CompliancePercent_Decline_percent', avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', avg(total_sos.'Decline_percent') as 'SoS_Decline_percent', sum(total_oos.'current_oos') as 'OutOfStock_Count', sum(total_oos.'Decline_percent') as 'OOS_Decline_percent', avg(total_promo.'current_promo') as 'Avg_PromoCompliance_Percentage', avg(total_promo.'Decline_percent') as 'Promo_Decline_percent', avg(total_inventory.'current_inventory') as 'Avg_InventoryCompliance_Percentage', avg(total_inventory.'Decline_percent') as 'Inventory_Decline_percent';\r\nfinal_table1 = group final_table by 'Account';\r\nfinal_table1 = foreach final_table1 generate 'Account' as 'RetailStore_Account_Name', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}', {{row(picklist_1_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}};\r\nfinal_table1 = filter final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table1 = order final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' desc;\r\nfinal_table1 = foreach final_table1 generate 'RetailStore_Account_Name', coalesce('{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}',0) as '{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Current_Period_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_Visit36_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "ActualVisitStartTime"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "start" : [
          [
            [
              "year",
              0
            ],
            [
              "year",
              0
            ]
          ]
        ],
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "Account_metric_1" : {
        "broadcastFacet" : false,
        "groups" : [ ],
        "label" : "Account_metric",
        "numbers" : [ ],
        "query" : "--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by 'AssessmentTask_Visit_RetailStore_Account_Name';\r\noos_result = foreach oos_result generate oos.'AssessmentTask_Visit_RetailStore_Account_Name' as 'Account', count(oos) as 'OutOfStock_Count';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\norder1 = group order1 by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name' as 'Account','Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales', sum('Quantity') as 'Quantity';\r\norder1 = group order1 by 'Account';\r\norder1 = foreach order1 generate 'Account', (sum('Sales')/unique('YearWeek')) as 'avg_sales_velocity', sum('Sales') as 'total_sales',sum('Quantity') as 'total_quantity';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'AssessmentTask_Visit_RetailStore_Account_Name' as 'Account', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as Avg_SoSCompliance_Percentage;\r\nsos = group sos by 'Account';\r\nsos = foreach sos generate 'Account', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('AssessmentTask_Visit_RetailStore_Account_Name','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'AssessmentTask_Visit_RetailStore_Account_Name' as 'Account', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'Account';\r\ncomp_result = foreach comp_result generate 'Account', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'AssessmentTask_Visit_RetailStore_Account_Name' as 'Account', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by 'Account';\r\nfcs = foreach fcs generate 'Account', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'AssessmentTask_Visit_RetailStore_Account_Name' as 'Account', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by 'Account';\r\npromo = foreach promo generate 'Account', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names' == \"{{cell(Get_AccountID_1.result, 0, \"Account_Name\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('AssessmentTask_Visit_RetailStore_Account_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'AssessmentTask_Visit_RetailStore_Account_Name' as 'Account', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by 'Account';\r\ninv = foreach inv generate 'Account', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by 'Account' full, sos by 'Account' full, oos_result by 'Account' full, comp_result by 'Account' full,fcs by 'Account' full, promo by 'Account' full, inv by 'Account';\r\nfinal_table = foreach final_table generate coalesce(order1.'Account',oos_result.'Account',comp_result.'Account',fcs.'Account',sos.'Account', promo.'Account', inv.'Account') as 'Account',\r\nsum(order1.'avg_sales_velocity') as 'avg_sales_velocity',sum(order1.'total_sales') as 'total_sales',sum(order1.'total_quantity') as 'total_quantity',\r\nsum(oos_result.'OutOfStock_Count') as 'OutOfStock_Count',avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage',avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by 'Account';\r\nfinal_table1 = filter final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} is not null;\r\nfinal_table1 = foreach final_table1 generate 'Account' as 'AssessmentTask_Visit_RetailStore_Account_Name', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table1 = order final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} desc;",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "query_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "query",
        "numbers" : [ ],
        "query" : "--OutofStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', count(oos) as 'OutOfStock_Count';\r\n\r\n--Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\n\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\n\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"-\" + 'Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\n\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\n\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', sum('Sales') as 'Sales',sum('Quantity') as 'Quantity', (sum('Sales')/unique('YearWeek')) as 'sales_velocity';\r\n\r\nfinal_table = cogroup\r\n              oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n              order1 by 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\n\r\nfinal_table = foreach final_table generate\r\ncoalesce(oos_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', order1.'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}') as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\nsum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_quantity', avg(order1.'sales_velocity') as 'avg_sales_velocity', sum(oos_result.'OutOfStock_Count') as 'OutOfStock_Count';\r\n\r\nfinal_table = foreach final_table generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'total_sales';\r\nfinal_table = order final_table by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Month{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Get_AccountID_1",
            "Account_metric_1",
            "percent_change_accou_1"
          ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "decline_city_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "decline_city",
        "numbers" : [ ],
        "query" : "--City Details\r\ncity1 = load \"${App.Datasets.CG_Visit36_tp.FullyQualifiedName}\";\r\ncity1 = group city1 by 'RetailStore_Location_Address_City';\r\ncity1 = foreach city1 generate 'RetailStore_Location_Address_City' as 'City';\r\n-- Decline in Sales(CG_OrderItem)\r\nsales = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nsales = filter sales by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsales_A = filter sales by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter sales by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City') full, sales_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City', sales_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City') as 'City', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales', sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice') as 'Sales_Decline', (sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice'))/sum(sales_B.'TotalPrice') as 'Sales_Decline_percent', sum(sales_A.'Quantity') as 'current_qty', sum(sales_B.'Quantity') as 'previous_qty', sum(sales_A.'Quantity') - sum(sales_B.'Quantity') as 'Quantity_Decline', (sum(sales_A.'Quantity') - sum(sales_B.'Quantity'))/sum(sales_B.'Quantity') as 'Quantity_Decline_percent';\r\n---Decline in SalesVelocity\r\ntotal_sv = group sales_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sales_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sales_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City', sales_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City') as 'City', sales_A.'Order_ActivatedDate_Year'+\"-\"+ sales_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sales_B.'Order_ActivatedDate_Year'+\"-\"+ sales_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'City';\r\ntotal_sv = foreach total_sv generate 'City' as 'City', sum('current_sales') / unique('CurrentPeriod_YearWeek') as 'current_sv', sum('previous_sales') / unique('PreviousPeriod_YearWeek') as 'previous_sv', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) as 'SalesVelocity_Decline', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) / (sum('previous_sales') / unique('PreviousPeriod_YearWeek')) as 'SalesVelocity_Decline_percent';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Location_Address_City', comp_B.'AssessmentTask_Visit_RetailStore_Location_Address_City') as 'City', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'City';\r\ntotal_comp = foreach total_comp generate 'City', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'City','current_comp', 'previous_comp', current_comp-previous_comp as 'Decline', (current_comp-previous_comp)/previous_comp as 'Decline_percent';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs_A = filter comp_A by 'Type_Computed' == \"Facing\";\r\nfcs_B = filter comp_B by 'Type_Computed' == \"Facing\";\r\ntotal_fcs = group fcs_A by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Location_Address_City', fcs_B.'AssessmentTask_Visit_RetailStore_Location_Address_City') as 'City', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'City';\r\ntotal_fcs = foreach total_fcs generate 'City', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'City','current_fcs', 'previous_fcs', current_fcs-previous_fcs as 'Decline', (current_fcs-previous_fcs)/previous_fcs as 'Decline_percent';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos_A = filter comp_A by 'Type_Computed' == \"ShareOfShelf\";\r\nsos_B = filter comp_B by 'Type_Computed' == \"ShareOfShelf\";\r\ntotal_sos = group sos_A by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Location_Address_City', sos_B.'AssessmentTask_Visit_RetailStore_Location_Address_City') as 'City', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'City';\r\ntotal_sos = foreach total_sos generate 'City', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'City','current_sos', 'previous_sos', current_sos-previous_sos as 'Decline', (current_sos-previous_sos)/previous_sos as 'Decline_percent';\r\n---Decline in OutofStock (CG_RetailVisitKpi)\r\noos_A = filter comp_A by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_B = filter comp_B by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos = group oos_A by ('AssessmentTask_Visit_RetailStore_Location_Address_City') full, oos_B by ('AssessmentTask_Visit_RetailStore_Location_Address_City');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'AssessmentTask_Visit_RetailStore_Location_Address_City', oos_B.'AssessmentTask_Visit_RetailStore_Location_Address_City') as 'City', count(oos_A) as 'current_oos', count(oos_B) as 'previous_oos', count(oos_A) - count(oos_B) as 'Decline', (count(oos_A) - count(oos_B)) / count(oos_B) as 'Decline_percent';\r\n---Decline in PromotionCompliance (CG_RetailVisitKpi)\r\npromo_A = filter comp_A by 'Type_Computed' == \"OutofStock\";\r\npromo_B = filter comp_B by 'Type_Computed' == \"OutofStock\";\r\ntotal_promo = group promo_A by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Location_Address_City', promo_B.'AssessmentTask_Visit_RetailStore_Location_Address_City') as 'City', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\ntotal_promo = group total_promo by 'City';\r\ntotal_promo = foreach total_promo generate 'City', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\ntotal_promo = foreach total_promo generate 'City','current_promo', 'previous_promo', current_promo-previous_promo as 'Decline', (current_promo-previous_promo)/(previous_promo) as 'Decline_percent';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninventory_A = filter comp_A by 'Type_Computed' == \"Inventory\";\r\ninventory_B = filter comp_B by 'Type_Computed' == \"Inventory\";\r\ntotal_inventory = group inventory_A by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name') full, inventory_B by ('AssessmentTask_Visit_RetailStore_Location_Address_City', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inventory = foreach total_inventory generate coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Location_Address_City', inventory_B.'AssessmentTask_Visit_RetailStore_Location_Address_City') as 'City', coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Name', inventory_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(inventory_A.'Compliance_Percentage') as 'current_inventory', avg(inventory_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inventory = group total_inventory by 'City';\r\ntotal_inventory = foreach total_inventory generate 'City', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inventory = foreach total_inventory generate 'City','current_inventory', 'previous_inventory', current_inventory-previous_inventory as 'Decline', (current_inventory - previous_inventory)/previous_inventory as 'Decline_percent';\r\n--final multidataset table\r\nfinal_table = cogroup city1 by 'City' full, total_sale by  'City' full, total_sv by 'City' full, total_comp by 'City' full, total_fcs by  'City' full, total_sos by 'City' full, total_oos by 'City' full,total_promo by 'City' full, total_inventory by 'City';\r\nfinal_table = foreach final_table generate coalesce(city1.'City',total_sale.'City', total_sv.'City', total_fcs.'City',total_comp.'City',total_sos.'City',total_oos.'City',total_promo.'City', total_inventory.'City') as 'City', sum(total_sale.'current_sales') as 'total_sales', sum(total_sale.'Sales_Decline_percent') as 'Sales_Decline_percent', sum(total_sale.'current_qty') as 'total_quantity', sum(total_sale.'Quantity_Decline_percent') as 'Quantity_Decline_percent', sum(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', sum(total_fcs.'Decline_percent') as 'FCS_Decline_percent', avg(total_sv.'current_sv') as 'avg_sales_velocity', avg(total_sv.'SalesVelocity_Decline_percent') as 'SalesVelocity_Decline_percent', avg(total_comp.'current_comp') as 'Avg_CompliancePercentage', avg(total_comp.'Decline_percent') as 'CompliancePercent_Decline_percent', avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', avg(total_sos.'Decline_percent') as 'SoS_Decline_percent', sum(total_oos.'current_oos') as 'OutOfStock_Count', sum(total_oos.'Decline_percent') as 'OOS_Decline_percent', avg(total_promo.'current_promo') as 'Avg_PromoCompliance_Percentage', avg(total_promo.'Decline_percent') as 'Promo_Decline_percent', avg(total_inventory.'current_inventory') as 'Avg_InventoryCompliance_Percentage', avg(total_inventory.'Decline_percent') as 'Inventory_Decline_percent';\r\nfinal_table1 = group final_table by 'City';\r\nfinal_table1 = foreach final_table1 generate 'City' as 'RetailStore_Location_Address_City', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}', {{row(picklist_1_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}};\r\nfinal_table1 = filter final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table1 = order final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' desc;\r\nfinal_table1 = foreach final_table1 generate 'RetailStore_Location_Address_City', coalesce('{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}',0) as '{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "percent_change_accou_1",
            "Account_metric_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "StoreGroup_PercentCh_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "StoreGroup_PercentChange",
        "numbers" : [ ],
        "query" : "--StoreGroup Details\r\nstore_grp = load \"${App.Datasets.CG_Visit36_tp.FullyQualifiedName}\";\r\nstore_grp = group store_grp by 'RetailStore_RetailStoreGroup_Name';\r\nstore_grp = foreach store_grp generate 'RetailStore_RetailStoreGroup_Name' as 'StoreGroup_Name';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', comp_B.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') as 'StoreGroup_Name', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'StoreGroup_Name';\r\ntotal_comp = foreach total_comp generate 'StoreGroup_Name', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'StoreGroup_Name','current_comp', 'previous_comp', current_comp-previous_comp as 'Decline', (current_comp-previous_comp)/previous_comp as 'Decline_percent';\r\n---Decline in OutofStock (CG_RetailVisitKpi)\r\noos_A = filter comp_A by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_B = filter comp_B by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos = group oos_A by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') full, oos_B by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', oos_B.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') as 'StoreGroup_Name', count(oos_A) as 'current_oos', count(oos_B) as 'previous_oos', count(oos_A) - count(oos_B) as 'Decline', (count(oos_A) - count(oos_B)) / count(oos_B) as 'Decline_percent';\r\n-- Decline in Sales(CG_OrderItem)\r\nsales = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nsales = filter sales by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsales_A = filter sales by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter sales by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') full, sales_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', sales_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') as 'StoreGroup_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales', sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice') as 'Sales_Decline', (sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice'))/sum(sales_B.'TotalPrice') as 'Sales_Decline_percent', sum(sales_A.'Quantity') as 'current_qty', sum(sales_B.'Quantity') as 'previous_qty', sum(sales_A.'Quantity') - sum(sales_B.'Quantity') as 'Quantity_Decline', (sum(sales_A.'Quantity') - sum(sales_B.'Quantity'))/sum(sales_B.'Quantity') as 'Quantity_Decline_percent';\r\n---Decline in SalesVelocity\r\ntotal_sv = group sales_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sales_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sales_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', sales_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') as 'StoreGroup_Name', sales_A.'Order_ActivatedDate_Year'+\"-\"+ sales_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sales_B.'Order_ActivatedDate_Year'+\"-\"+ sales_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'StoreGroup_Name';\r\ntotal_sv = foreach total_sv generate 'StoreGroup_Name', sum('current_sales') / unique('CurrentPeriod_YearWeek') as 'current_sv', sum('previous_sales') / unique('PreviousPeriod_YearWeek') as 'previous_sv', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) as 'SalesVelocity_Decline', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) / (sum('previous_sales') / unique('PreviousPeriod_YearWeek')) as 'SalesVelocity_Decline_percent';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs_A = filter comp_A by 'Type_Computed' == \"Facing\";\r\nfcs_B = filter comp_B by 'Type_Computed' == \"Facing\";\r\ntotal_fcs = group fcs_A by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', fcs_B.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') as 'StoreGroup_Name', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'StoreGroup_Name';\r\ntotal_fcs = foreach total_fcs generate 'StoreGroup_Name', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'StoreGroup_Name','current_fcs', 'previous_fcs', current_fcs-previous_fcs as 'Decline', (current_fcs-previous_fcs)/previous_fcs as 'Decline_percent';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos_A = filter comp_A by 'Type_Computed' == \"ShareOfShelf\";\r\nsos_B = filter comp_B by 'Type_Computed' == \"ShareOfShelf\";\r\ntotal_sos = group sos_A by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', sos_B.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') as 'StoreGroup_Name', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'StoreGroup_Name';\r\ntotal_sos = foreach total_sos generate 'StoreGroup_Name', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'StoreGroup_Name','current_sos', 'previous_sos', current_sos-previous_sos as 'Decline', (current_sos-previous_sos)/previous_sos as 'Decline_percent';\r\n---Decline in PromotionCompliance (CG_RetailVisitKpi)\r\npromo_A = filter comp_A by 'Type_Computed' == \"OutofStock\";\r\npromo_B = filter comp_B by 'Type_Computed' == \"OutofStock\";\r\ntotal_promo = group promo_A by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', promo_B.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') as 'StoreGroup_Name', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\ntotal_promo = group total_promo by 'StoreGroup_Name';\r\ntotal_promo = foreach total_promo generate 'StoreGroup_Name', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\ntotal_promo = foreach total_promo generate 'StoreGroup_Name','current_promo', 'previous_promo', current_promo-previous_promo as 'Decline', (current_promo-previous_promo)/(previous_promo) as 'Decline_percent';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninventory_A = filter comp_A by 'Type_Computed' == \"Inventory\";\r\ninventory_B = filter comp_B by 'Type_Computed' == \"Inventory\";\r\ntotal_inventory = group inventory_A by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name') full, inventory_B by ('AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inventory = foreach total_inventory generate coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name', inventory_B.'AssessmentTask_Visit_RetailStore_RetailStoreGroup_Name') as 'StoreGroup_Name', coalesce(inventory_A.'AssessmentTask_Visit_RetailStore_Name', inventory_B.'AssessmentTask_Visit_RetailStore_Name') as 'Store_Name', avg(inventory_A.'Compliance_Percentage') as 'current_inventory', avg(inventory_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inventory = group total_inventory by 'StoreGroup_Name';\r\ntotal_inventory = foreach total_inventory generate 'StoreGroup_Name', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inventory = foreach total_inventory generate 'StoreGroup_Name','current_inventory', 'previous_inventory', current_inventory-previous_inventory as 'Decline', (current_inventory - previous_inventory)/previous_inventory as 'Decline_percent';\r\n--final multidataset table\r\nfinal_table = cogroup store_grp by 'StoreGroup_Name' full, total_sale by 'StoreGroup_Name' full, total_sv by 'StoreGroup_Name' full, total_comp by 'StoreGroup_Name' full, total_fcs by  'StoreGroup_Name' full, total_sos by 'StoreGroup_Name' full, total_oos by 'StoreGroup_Name' full,total_promo by 'StoreGroup_Name' full, total_inventory by 'StoreGroup_Name';\r\nfinal_table = foreach final_table generate coalesce(store_grp.'StoreGroup_Name', total_sale.'StoreGroup_Name', total_sv.'StoreGroup_Name', total_fcs.'StoreGroup_Name',total_comp.'StoreGroup_Name',total_sos.'StoreGroup_Name',total_oos.'StoreGroup_Name',total_promo.'StoreGroup_Name', total_inventory.'StoreGroup_Name') as 'StoreGroup_Name', \r\n\r\nsum(total_sale.'Sales_Decline') as 'Sales_Decline', sum(total_sale.'Sales_Decline_percent') as 'Sales_Decline_percent', sum(total_sale.'Quantity_Decline') as 'Quantity_Decline', sum(total_sale.'Quantity_Decline_percent') as 'Quantity_Decline_percent', sum(total_fcs.'Decline') as 'FCS_Decline', sum(total_fcs.'Decline_percent') as 'FCS_Decline_percent', avg(total_sv.'SalesVelocity_Decline') as 'SalesVelocity_Decline', avg(total_sv.'SalesVelocity_Decline_percent') as 'SalesVelocity_Decline_percent', avg(total_comp.'Decline') as 'CompliancePercent_Decline', avg(total_comp.'Decline_percent') as 'CompliancePercent_Decline_percent', avg(total_sos.'Decline') as 'SoS_Decline', avg(total_sos.'Decline_percent') as 'SoS_Decline_percent', sum(total_oos.'Decline') as 'OOS_Decline', sum(total_oos.'Decline_percent') as 'OOS_Decline_percent', avg(total_promo.'Decline') as 'Promo_Decline', avg(total_promo.'Decline_percent') as 'Promo_Decline_percent', avg(total_inventory.'Decline') as 'Inventory_Decline', avg(total_inventory.'Decline_percent') as 'Inventory_Decline_percent', avg(total_comp.'current_comp') as 'Avg_CompliancePercentage', sum(total_oos.'current_oos') as 'OutOfStock_Count', sum(total_sale.'current_sales') as 'total_sales', sum(total_sale.'current_qty') as 'total_quantity', sum(total_sv.'current_sv') as 'avg_sales_velocity', avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', avg(total_promo.'current_promo') as 'Avg_PromoCompliance_Percentage', avg(total_inventory.'current_inventory') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by 'StoreGroup_Name';\r\nfinal_table1 = foreach final_table1 generate 'StoreGroup_Name' as 'RetailStore_RetailStoreGroup_Name', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}', {{row(picklist_1_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}};\r\nfinal_table1 = filter final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' is not null;\r\nfinal_table1 = order final_table1 by '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}' desc;\r\nfinal_table1 = foreach final_table1 generate 'RetailStore_RetailStoreGroup_Name', coalesce('{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}',0) as '{{cell(picklist_1_1.selection,0,\"Alias_decline_percent\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Get_AccountID_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Get_AccountID",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nq = foreach q generate 'AccountId', 'Account_Name', coalesce('Account_Parent_Account_Names',\"NA\") as 'Account_Parent_Account_Names';\r\nq = group q by ('AccountId', 'Account_Name', 'Account_Parent_Account_Names');\r\nq = foreach q generate 'AccountId', 'Account_Name', 'Account_Parent_Account_Names';\r\nq = limit q 1;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "singlerequired",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "pivoted" : false,
            "showActionMenu" : true,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "DeadOutlets_query_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "DeadOutlets_query",
        "numbers" : [ ],
        "query" : "---Stores_with_orders_inLast3months---\r\norders_A = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders_A = filter orders_A by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norders_A = filter orders_A by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"3 months ago\"..\"current day\"];\r\norders_A = group orders_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Id', 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name');\r\norders_A = foreach orders_A generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Id', 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', unique('OrderId') as 'Number of Orders';\r\n---EachStores_CreatedDt_LastOrderDt---\r\norders_B = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders_B = filter orders_B by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norders_B = foreach orders_B generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Id', 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', toDate(substr('Order_ActivatedDate', 1, 10),\"yyyy-MM-dd\") as 'Order_ActivatedDate';\r\nstore = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nstore = filter store by 'AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nstore = filter store by date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day') in [..\"3 months ago\"];\r\nstore = foreach store generate toDate(substr('CreatedDate', 1, 10),\"yyyy-MM-dd\") as 'CreatedDate', 'Name', 'Id', 0 as 'Number of Orders';\r\n---multidataset---\r\nresult = cogroup store by ('Id', 'Name') full, orders_B by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Id', 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name') full, orders_A by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Id', 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name');\r\nresult = foreach result generate store.'Id' as 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Id', store.'Name' as 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', max(orders_B.'Order_ActivatedDate') as 'Order_ActivatedDate', first(store.'CreatedDate') as 'CreatedDate', coalesce(sum(orders_A.'Number of Orders'),0) as 'Number_of_Orders_A', sum(store.'Number of Orders') as 'Number_of_Orders_B';\r\nresult = foreach result generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Id', 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', 'Order_ActivatedDate', 'CreatedDate', ('Number_of_Orders_A'+'Number_of_Orders_B') as 'Number of Orders', now() as 'today';\r\nresult = filter result by 'Number of Orders' == 0;\r\nresult = foreach result generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', 'Order_ActivatedDate', daysBetween('CreatedDate', 'today') as 'Days Since Store Creation', daysBetween('Order_ActivatedDate', 'today') as 'Days Since Last Order';\r\nresult = foreach result generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name', (case when 'Order_ActivatedDate' is not null then 'Days Since Last Order' else 'Days Since Store Creation' end) as 'Number of Days';\r\nresult = order result by 'Number of Days' desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1",
            "Current_Period_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "query_2_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "query_2",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = group retail_store by ('CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\n--OutofStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', count(oos) as 'OutOfStock_Count';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}'+\"-\"+'Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', sum('Sales') as 'Sales',sum('Quantity') as 'Quantity', (sum('Sales')/unique('YearWeek')) as 'sales_velocity';\r\n--StoreCompliance\r\n comp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp_result = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp_result by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',avg('avg_Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\n--Average Share of Shelf Compliance\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_result = group sos by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\nsos_result = group sos_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_SOSCompliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\n--Average Facings Compliance\r\n fcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_result = group fcs by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\nfcs_result = group fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_FCSCompliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\n--Average Promotion Compliance\r\n promo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_result = group promo by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\npromo_result = group promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_PromoCompliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\n--Average Inventory Compliance\r\n inv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_result = group inv by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv_result = group inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table\r\nfinal_table = cogroup\r\n             retail_store by 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n              order1 by 'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             comp_result by  'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             sos_result  by  'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\nfinal_table = foreach final_table generate\r\ncoalesce(retail_store.'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', order1.'Order_ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',comp_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',sos_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',fcs_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',oos_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',promo_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',inv_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}') as 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',\r\n sum(order1.'Sales') as 'total_sales',sum(order1.'Quantity') as 'total_quantity', avg(order1.'sales_velocity') as 'avg_sales_velocity',\r\n         sum(oos_result.'OutOfStock_Count') as 'OutOfStock_Count',\r\n         avg(comp_result.'Avg_Compliance_Percentage') as 'Avg_CompliancePercentage',\r\n         avg(fcs_result.'avg_FCSCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage',\r\n         avg(sos_result.'avg_SOSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',\r\n         avg(promo_result.'avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage',\r\n         avg(inv_result.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table = foreach final_table generate 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}} as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table = order final_table by 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' asc;\r\n",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "product_toggle_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "Field_Value" : {
            "type" : "string"
          },
          "API_Name" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "product_toggle",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Product"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Product",
            "Field_Value" : "'Product'",
            "API_Name" : "Product_Name_Custom"
          },
          {
            "Display" : "Product Category",
            "Field_Value" : "'Product_Category'",
            "API_Name" : "ProductCategory_Name_Custom"
          }
        ]
      },
      "Store_Metric_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Store_Metric",
        "numbers" : [ ],
        "query" : "--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by 'AssessmentTask_Visit_RetailStore_Name';\r\noos_result = foreach oos_result generate oos.'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', count(oos) as 'OutOfStock_Count';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\norder1 = group order1 by ('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name' as 'Store_Name','Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales', sum('Quantity') as 'Quantity';\r\norder1 = group order1 by 'Store_Name';\r\norder1 = foreach order1 generate 'Store_Name', (sum('Sales')/unique('YearWeek')) as 'avg_sales_velocity', sum('Sales') as 'total_sales',sum('Quantity') as 'total_quantity';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as Avg_SoSCompliance_Percentage;\r\n-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\n-- FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by ('AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'AssessmentTask_Visit_RetailStore_AccountId'==\"{{cell(Get_AccountID_1.result, 0, \"AccountId\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by 'Store_Name' full, sos by 'Store_Name' full, oos_result by 'Store_Name' full, comp_result by 'Store_Name' full,fcs by 'Store_Name' full, promo by 'Store_Name' full, inv by 'Store_Name';\r\nfinal_table = foreach final_table generate coalesce(order1.'Store_Name',oos_result.'Store_Name',comp_result.'Store_Name',fcs.'Store_Name',sos.'Store_Name', promo.'Store_Name', inv.'Store_Name') as 'Store_Name',\r\nsum(order1.'avg_sales_velocity') as 'avg_sales_velocity',sum(order1.'total_sales') as 'total_sales',sum(order1.'total_quantity') as 'total_quantity',\r\nsum(oos_result.'OutOfStock_Count') as 'OutOfStock_Count',avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',avg(comp_result.'Avg_Compliance_Percentage') as 'Avg_CompliancePercentage',avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by 'Store_Name';\r\nfinal_table1 = filter final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} is not null;\r\nfinal_table1 = foreach final_table1 generate 'Store_Name' as 'AssessmentTask_Visit_RetailStore_Name', {{cell(picklist_1_1.selection,0,\"Field_value\").asObject()}}  as '{{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}}';\r\nfinal_table1 = order final_table1 by {{cell(picklist_1_1.selection,0,\"Api_name\").asObject()}} desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Account_metric_1",
            "percent_change_accou_1",
            "Get_AccountID_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : false,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : false,
              "showAxis" : false,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : false,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "number_10" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics_Changes_K_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#FFFFFF",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_18" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "68509d16-1149-448c-a60d-0cf708abb9bc"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Product Categories",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_19" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "68509d16-1149-448c-a60d-0cf708abb9bc"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Product Categories",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_18" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Cities by {{cell(picklist_1_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "link_16" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "416c0093-aeec-48c0-b53a-39fcb175deb4"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Cities",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_17" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c28932cf-7329-4140-a9e7-882f0d32ccad"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Products",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_14" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Stores",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_15" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "d798b195-aa2b-4679-b34f-ae68d177ad27"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Dead Outlets",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_12" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "894ddb4d-da7d-4082-91a9-c7c302b5929a"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Account Hierarchy",
          "textAlignment" : "center",
          "textColor" : "#7D98B3"
        },
        "type" : "link"
      },
      "link_13" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "416c0093-aeec-48c0-b53a-39fcb175deb4"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Cities",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_10" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "29dbd5b7-ec2c-48c0-a601-d7b4e123400f"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Performance",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_11" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "d798b195-aa2b-4679-b34f-ae68d177ad27"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Dead Outlets",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_2" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_9" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Store_PercentChange_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "container_3" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_4" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_5" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_6" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "decline_city_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "container_6" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_7" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_5" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Prod_ProdCat_Change_2",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_2" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_5" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Accounts by {{cell(picklist_1_1.selection,0,\"Display\").asObject()}} "
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "container_8" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_7" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "percent_change_accou_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "container_9" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_2" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "zipcode_metric_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_1" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Prod_ProdCat_Metric_2",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_3" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Account_metric_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "dateselector_1" : {
        "parameters" : {
          "absoluteModeEnabled" : true,
          "calendarTypeSwitchingAllowed" : true,
          "defaultFiscalMode" : false,
          "displayMode" : "filter",
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "presetsEnabled" : true,
          "relativeModeEnabled" : true,
          "showActionMenu" : true,
          "step" : "Current_Period_1",
          "title" : ""
        },
        "type" : "dateselector"
      },
      "text_1" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Product Categories by {{cell(picklist_1_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "link_23" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Stores",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_24" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c28932cf-7329-4140-a9e7-882f0d32ccad"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Products",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_21" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "68509d16-1149-448c-a60d-0cf708abb9bc"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Product Categories",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_22" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Stores",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_20" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c28932cf-7329-4140-a9e7-882f0d32ccad"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Products",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "image_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "fitheight",
          "image" : {
            "name" : "${App.Images['Preview_CG_PoweredByEApng63'].Name}",
            "namespace" : "${Org.Namespace}"
          }
        },
        "type" : "image"
      },
      "chart_16" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Prod_ProdCat_Change_3",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_15" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "StoreGroup_Metric_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_14" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Prod_ProdCat_Metric_3",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_13" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "StoreGroup_PercentCh_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_12" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Store_Metric_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_11" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "DeadOutlets_query_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "chart_10" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "sync",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : false,
          "showActionMenu" : true,
          "showZero" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "light",
          "step" : "trend_multidatasetqu_1",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "number_9" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "total_sales",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics_KPI_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_31" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select KPI"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_30" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Compare To"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "dateselector_2" : {
        "parameters" : {
          "absoluteModeEnabled" : true,
          "calendarTypeSwitchingAllowed" : true,
          "defaultFiscalMode" : false,
          "displayMode" : "filter",
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "presetsEnabled" : true,
          "relativeModeEnabled" : true,
          "showActionMenu" : false,
          "step" : "Comparative_Period_1",
          "title" : ""
        },
        "type" : "dateselector"
      },
      "text_29" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Stores Without Orders in Last 3 Months"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_28" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Duration"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "link_3" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "68509d16-1149-448c-a60d-0cf708abb9bc"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Product Categories",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_25" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Change in {{cell(picklist_1_1.selection,0,\"Display\").asObject()}} "
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_24" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Stores by {{cell(picklist_1_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "link_4" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Stores",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_1" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "29dbd5b7-ec2c-48c0-a601-d7b4e123400f"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Store Groups",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_27" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Store Groups by {{cell(picklist_1_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "link_2" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "416c0093-aeec-48c0-b53a-39fcb175deb4"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Cities",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "text_23" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Products by {{cell(picklist_1_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "link_9" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Stores",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_7" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "894ddb4d-da7d-4082-91a9-c7c302b5929a"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Account Hierarchy",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_8" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "29dbd5b7-ec2c-48c0-a601-d7b4e123400f"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Store Groups",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_5" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "d798b195-aa2b-4679-b34f-ae68d177ad27"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Dead Outlets",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_6" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "29dbd5b7-ec2c-48c0-a601-d7b4e123400f"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Performance",
          "textAlignment" : "center",
          "textColor" : "#7D98B3"
        },
        "type" : "link"
      },
      "listselector_1" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#091A3E"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "picklist_1_1",
          "title" : ""
        },
        "type" : "listselector"
      }
    }
  }
}