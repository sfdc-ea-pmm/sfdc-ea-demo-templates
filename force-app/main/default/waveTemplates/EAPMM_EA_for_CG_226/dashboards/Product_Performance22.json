{
  "name" : "Product_Performance22_tp",
  "label" : "Product Performance",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "dateVersion" : 1,
  "mobileDisabled" : false,
  "xmd" : {
    "measures" : [
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_StoreCoverage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.Percent_Change_in_StoreCoverage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Inventory_Comp_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.PoP_Inventory_Comp_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Facings_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.PoP_Facings_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Share_of_Shelf_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.PoP_Share_of_Shelf_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Promotion_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.PoP_Promotion_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Compliance_Percentate_Change_vs_Previous_Period",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.Compliance_Percentate_Change_vs_Previous_Period",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Out_of_Stock_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.PoP_Out_of_Stock_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_WeeklyRev",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.Percent_Change_in_WeeklyRev",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_AvgOrderValue",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.Percent_Change_in_AvgOrderValue",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_Quantity",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.Percent_Change_in_Quantity",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_change_in_Sales",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_7.Percent_change_in_Sales",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_StoreCoverage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.Percent_Change_in_StoreCoverage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Inventory_Comp_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.PoP_Inventory_Comp_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Facings_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.PoP_Facings_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Share_of_Shelf_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.PoP_Share_of_Shelf_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Promotion_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.PoP_Promotion_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Compliance_Percentate_Change_vs_Previous_Period",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.Compliance_Percentate_Change_vs_Previous_Period",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Out_of_Stock_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.PoP_Out_of_Stock_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_WeeklyRev",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.Percent_Change_in_WeeklyRev",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_AvgOrderValue",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.Percent_Change_in_AvgOrderValue",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_Quantity",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.Percent_Change_in_Quantity",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_change_in_Sales",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_5.Percent_change_in_Sales",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_StoreCoverage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.Percent_Change_in_StoreCoverage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Inventory_Comp_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.PoP_Inventory_Comp_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Facings_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.PoP_Facings_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Share_of_Shelf_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.PoP_Share_of_Shelf_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Promotion_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.PoP_Promotion_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Compliance_Percentate_Change_vs_Previous_Period",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.Compliance_Percentate_Change_vs_Previous_Period",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Out_of_Stock_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.PoP_Out_of_Stock_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_WeeklyRev",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.Percent_Change_in_WeeklyRev",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_AvgOrderValue",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.Percent_Change_in_AvgOrderValue",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_Quantity",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.Percent_Change_in_Quantity",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "store_coverage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Store_Coverage_Gauge_1.store_coverage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_InventoryCompliance_Percentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Avg_INV_compliance_g_1.Avg_InventoryCompliance_Percentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_FacingsCompliance_Percentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Avg_FCS_compliance_g_1.Avg_FacingsCompliance_Percentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_SoSCompliance_Percentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Avg_SOS_compliance_g_1.Avg_SoSCompliance_Percentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_PromoCompliance_Percentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Avg_promo_compliance_1.Avg_PromoCompliance_Percentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_CompliancePercentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Avg_store_compliance_1.Avg_CompliancePercentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_OutOfStock_Compliance",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Avg_OOS_compliance_g_1.Avg_OutOfStock_Compliance",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "avg_weekly_revenue",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AvgWeeklyRevenue_Gau_1.avg_weekly_revenue",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "avg_order_value",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AvgOrderValue_Gauge_1.avg_order_value",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Quantity",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Quantity_Gauge_1.Quantity",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "TotalPrice",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #B50E03, #B50E03)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "lens_5.TotalPrice",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Value",
            "type" : "gradient",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "rgb(22, 116, 217)"
                },
                {
                  "formatValue" : "rgb(22, 116, 217)"
                }
              ]
            }
          }
        },
        "field" : "Promotion_Final_1.Value",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Value",
            "type" : "gradient",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "rgb(22, 116, 217)"
                },
                {
                  "formatValue" : "#1674D9"
                }
              ]
            }
          }
        },
        "field" : "Promotion_Final_2.Value",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Value",
            "type" : "gradient",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "rgb(22, 116, 217)"
                },
                {
                  "formatValue" : "#1674D9"
                }
              ]
            }
          }
        },
        "field" : "Promotion_Final_3.Value",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_change_in_Sales",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_1.Percent_change_in_Sales",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_StoreCoverage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.Percent_Change_in_StoreCoverage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Inventory_Comp_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.PoP_Inventory_Comp_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Facings_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.PoP_Facings_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Share_of_Shelf_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.PoP_Share_of_Shelf_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Promotion_Compliance_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.PoP_Promotion_Compliance_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Compliance_Percentate_Change_vs_Previous_Period",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.Compliance_Percentate_Change_vs_Previous_Period",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "PoP_Out_of_Stock_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.PoP_Out_of_Stock_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_WeeklyRev",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.Percent_Change_in_WeeklyRev",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_AvgOrderValue",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.Percent_Change_in_AvgOrderValue",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_Change_in_Quantity",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.Percent_Change_in_Quantity",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Percent_change_in_Sales",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "AllMetrics___Percent_2.Percent_change_in_Sales",
        "format" : {
          "delimiters" : { }
        }
      }
    ],
    "derivedDimensions" : [ ],
    "organizations" : [ ],
    "showDetailsDefaultFields" : [ ],
    "dates" : [ ],
    "derivedMeasures" : [ ],
    "dimensions" : [
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "store_coverage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Store_Coverage_Gauge_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_InventoryCompliance_Percentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Avg_INV_compliance_g_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_FacingsCompliance_Percentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Avg_FCS_compliance_g_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_SoSCompliance_Percentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Avg_SOS_compliance_g_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_PromoCompliance_Percentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Avg_promo_compliance_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_CompliancePercentage",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Avg_store_compliance_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Avg_OutOfStock_Compliance",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Avg_OOS_compliance_g_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "avg_weekly_revenue",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "AvgWeeklyRevenue_Gau_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "avg_order_value",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "AvgOrderValue_Gauge_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Quantity",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #FED444, #F29946)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Quantity_Gauge_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "TotalPrice",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "linear-gradient(to bottom, #F71979, #CC203D)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "linear-gradient(to bottom, #B50E03, #B50E03)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "lens_5.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Value",
            "type" : "gradient",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "rgb(22, 116, 217)"
                },
                {
                  "formatValue" : "rgb(22, 116, 217)"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Promotion_Final_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Value",
            "type" : "gradient",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "rgb(22, 116, 217)"
                },
                {
                  "formatValue" : "#1674D9"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Promotion_Final_2.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Value",
            "type" : "gradient",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "rgb(22, 116, 217)"
                },
                {
                  "formatValue" : "#1674D9"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Promotion_Final_3.ALL",
        "members" : [ ],
        "customActions" : [ ]
      }
    ]
  },
  "state" : {
    "dataSourceLinks" : [
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "PlannedVisitStartTime"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ActualVisitStartTime"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_ActivatedDate"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "CreatedDate"
          }
        ],
        "label" : "Date",
        "name" : "Link_1577"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_Family"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_Family"
          }
        ],
        "label" : "Brand",
        "name" : "Link_23792"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Assortment_AssortmentProduct_Assortment_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Assortment_AssortmentProduct_Assortment_Name"
          }
        ],
        "label" : "Assortment",
        "name" : "Link_2115"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_Name_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Product31_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_PromotionChannel36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "PromotionProduct_Product_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_StoreProduct21_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_Name"
          }
        ],
        "label" : "Product",
        "name" : "Link_19070"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ProductCategory_Name_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Product_ProductCategory_ProductCategory_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_PromotionChannel36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "PromotionProductCategory_Promotion_ProductCategory_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_StoreProduct21_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ProductCategory_ProductCategory_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_ProductCategory31_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Name"
          }
        ],
        "label" : "Product Category",
        "name" : "Link_779"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Name"
          }
        ],
        "label" : "Store",
        "name" : "Link_80185"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_Account_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Account_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_StoreProduct21_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_Account_Name"
          }
        ],
        "label" : "Account",
        "name" : "Link_80311"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_State"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_Location_Address_State"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Location_Address_State"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_StoreProduct21_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_Location_Address_State"
          }
        ],
        "label" : "State",
        "name" : "Link_80064"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Location_Address_City"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_Location_Address_City"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Location_Address_City"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_StoreProduct21_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_Location_Address_City"
          }
        ],
        "label" : "City",
        "name" : "Link_80085"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_RetailStoreGroupName_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_RetailStoreGroupName_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStoreGroupName_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_StoreProduct21_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_RetailStoreGroup_Name"
          }
        ],
        "label" : "Store Group",
        "name" : "Link_80207"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi37_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssessmentTask_Visit_RetailStore_Account_Parent_Account_Names"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore20_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "Account_Parent_Account_Names"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Visit36_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "RetailStore_Account_Parent_Account_Names"
          }
        ],
        "label" : "Parent Account",
        "name" : "Link_6168"
      }
    ],
    "filters" : [
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_RetailStore20_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "Account_Parent_Account_Names"
        ],
        "label" : "Parent Account Name",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_RetailStore20_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "Account_Name"
        ],
        "label" : "Account",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_RetailStore20_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "Name"
        ],
        "label" : "Store",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_RetailStore20_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "RetailStoreGroupName_Custom"
        ],
        "label" : "Store Group",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_RetailStore20_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "Location_Address_State"
        ],
        "label" : "State",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_RetailStore20_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "Location_Address_City"
        ],
        "label" : "City",
        "locked" : false,
        "operator" : "in"
      }
    ],
    "gridLayouts" : [
      {
        "maxWidth" : 1500,
        "name" : "Default",
        "numColumns" : 50,
        "pages" : [
          {
            "label" : "Category Performance",
            "name" : "66b86539-8d6c-442f-8df1-942d79ef84bf",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 4,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "image_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_3",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_7",
                "row" : 12,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(207, 215, 225)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "container_8",
                "row" : 65,
                "rowspan" : 5,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 4,
                "name" : "listselector_1",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_3",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 34,
                "name" : "text_4",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 10,
                "column" : 38,
                "name" : "listselector_2",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_10",
                "row" : 18,
                "rowspan" : 44,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_1",
                "row" : 26,
                "rowspan" : 34,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "pillbox_3",
                "row" : 23,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(14, 47, 92)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 2,
                "name" : "link_3",
                "row" : 63,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(52, 127, 219)",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "link_4",
                "row" : 63,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_7",
                "row" : 101,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "dateselector_2",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "link_5",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(51, 87, 121, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "link_7",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(198, 211, 225, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 30,
                "column" : 1,
                "name" : "filterpanel_1",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "text_52",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_87",
                "row" : 66,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 112, 210, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "link_22",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "link_17",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_3",
                "row" : 137,
                "rowspan" : 33,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 39,
                "column" : 1,
                "name" : "text_104",
                "row" : 134,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "listselector_7",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_117",
                "row" : 19,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "text_58",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_15",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_23",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_4",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_20",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_73",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_24",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_11",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_12",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "container_21",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_13",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_25",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_26",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_27",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_28",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "number_29",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_22",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_14",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_23",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_15",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_24",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_16",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_30",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_31",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_32",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_33",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_34",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_35",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_36",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "container_25",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_39",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_26",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_40",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_27",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_41",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_28",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_42",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "number_38",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_39",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_40",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_41",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_42",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_43",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_44",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_45",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_5",
                "row" : 70,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_18",
                "row" : 67,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 4,
                "name" : "text_23",
                "row" : 16,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 38,
                "name" : "text_28",
                "row" : 16,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 14,
                "name" : "text_36",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Category Promotion",
            "name" : "7b937a30-4712-4f85-acde-9be26fa70e0c",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 4,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "image_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_3",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "dateselector_2",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_7",
                "row" : 12,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(207, 215, 225)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 10,
                "column" : 4,
                "name" : "listselector_1",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_3",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 34,
                "name" : "text_4",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 10,
                "column" : 38,
                "name" : "listselector_2",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_10",
                "row" : 18,
                "rowspan" : 44,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_1",
                "row" : 26,
                "rowspan" : 34,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "pillbox_3",
                "row" : 23,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(14, 47, 92)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 2,
                "name" : "link_1",
                "row" : 63,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "link_2",
                "row" : 63,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(52, 127, 219)",
                  "borderColor" : "rgb(51, 87, 121)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "link_5",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(51, 87, 121, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "link_7",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(198, 211, 225, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_3",
                "row" : 105,
                "rowspan" : 28,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_6",
                "row" : 102,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 30,
                "column" : 1,
                "name" : "filterpanel_1",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "text_52",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_87",
                "row" : 66,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 112, 210, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "link_22",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "link_17",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_3",
                "row" : 136,
                "rowspan" : 25,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_104",
                "row" : 133,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "listselector_7",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_90",
                "row" : 72,
                "rowspan" : 29,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_112",
                "row" : 67,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_117",
                "row" : 19,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "text_59",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 4,
                "name" : "text_23",
                "row" : 16,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 14,
                "name" : "text_36",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 38,
                "name" : "text_28",
                "row" : 16,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_33",
                "row" : 70,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Product Performance",
            "name" : "6600a831-5a4b-431d-893b-2d9c582e3b47",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 4,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "image_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_3",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_3",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "dateselector_2",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "link_7",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(198, 211, 225, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "link_9",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(51, 87, 121, 0)",
                  "borderColor" : "rgba(51, 87, 121, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "link_10",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_26",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 4,
                "name" : "listselector_4",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_25",
                "row" : 26,
                "rowspan" : 26,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 40,
                "column" : 1,
                "name" : "text_29",
                "row" : 94,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 1,
                "name" : "text_30",
                "row" : 99,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 2,
                "name" : "link_11",
                "row" : 55,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(52, 127, 219)",
                  "borderColor" : "rgba(0, 112, 210, 0.75)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "link_12",
                "row" : 55,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 39,
                "name" : "link_13",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0)",
                  "borderColor" : "rgb(121, 184, 234)",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "chart_44",
                "row" : 106,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "chart_49",
                "row" : 120,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "filterpanel_1",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "text_52",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 27,
                "column" : 2,
                "name" : "text_88",
                "row" : 24,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 29,
                "name" : "text_89",
                "row" : 24,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_87",
                "row" : 58,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 112, 210, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 26,
                "name" : "chart_99",
                "row" : 106,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 14,
                "name" : "chart_46",
                "row" : 106,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 38,
                "name" : "chart_95",
                "row" : 106,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 14,
                "name" : "chart_101",
                "row" : 120,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 26,
                "name" : "chart_103",
                "row" : 120,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 38,
                "name" : "chart_47",
                "row" : 120,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "chart_50",
                "row" : 134,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 14,
                "name" : "chart_51",
                "row" : 134,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 26,
                "name" : "chart_93",
                "row" : 134,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "link_22",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_4",
                "row" : 142,
                "rowspan" : 29,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_105",
                "row" : 139,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 23,
                "name" : "listselector_6",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 27,
                "name" : "listselector_7",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 31,
                "name" : "listselector_9",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 35,
                "name" : "listselector_10",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "text_56",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 13,
                "column" : 13,
                "name" : "pillbox_1",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(14, 47, 92, 0.69)",
                  "borderColor" : "rgba(125, 152, 179, 0.7)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_6",
                "row" : 98,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_1",
                "row" : 101,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_27",
                "row" : 104,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_3",
                "row" : 101,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_9",
                "row" : 98,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 13,
                "name" : "text_62",
                "row" : 99,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_63",
                "row" : 104,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_11",
                "row" : 98,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 25,
                "name" : "text_64",
                "row" : 99,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_65",
                "row" : 104,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "container_12",
                "row" : 98,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 37,
                "name" : "text_66",
                "row" : 99,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_67",
                "row" : 104,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_5",
                "row" : 101,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_6",
                "row" : 101,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_7",
                "row" : 101,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_8",
                "row" : 101,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_13",
                "row" : 112,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_69",
                "row" : 113,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_70",
                "row" : 118,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_14",
                "row" : 112,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_71",
                "row" : 113,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_72",
                "row" : 118,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_74",
                "row" : 118,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "container_16",
                "row" : 112,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_75",
                "row" : 113,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_76",
                "row" : 118,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_17",
                "row" : 126,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_77",
                "row" : 127,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_78",
                "row" : 132,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_18",
                "row" : 126,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_79",
                "row" : 127,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_80",
                "row" : 132,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_19",
                "row" : 126,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_81",
                "row" : 127,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_82",
                "row" : 132,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "number_9",
                "row" : 101,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_10",
                "row" : 101,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_11",
                "row" : 115,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_13",
                "row" : 115,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_2",
                "row" : 115,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_4",
                "row" : 115,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_12",
                "row" : 115,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_14",
                "row" : 115,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "number_16",
                "row" : 115,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_17",
                "row" : 115,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_15",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_18",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_19",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_20",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_21",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_22",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_16",
                "row" : 113,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_4",
                "row" : 62,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "text_2",
                "row" : 59,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 1,
                "column" : 41,
                "name" : "image_3",
                "row" : 95,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_19",
                "row" : 97,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 42,
                "name" : "text_21",
                "row" : 95,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_57",
                "row" : 21,
                "rowspan" : 33,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_59",
                "row" : 12,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(207, 215, 225)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 1,
                "column" : 49,
                "name" : "text_31",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "text_32",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "text_37",
                "row" : 21,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_24",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_2",
                "row" : 112,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Product Promotion",
            "name" : "c9cd8f01-38d8-4f0c-a3f2-3af15e171e4a",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 4,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "image_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_3",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "container_8",
                "row" : 63,
                "rowspan" : 5,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_3",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "dateselector_2",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "link_7",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(198, 211, 225, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "link_9",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(51, 87, 121, 0)",
                  "borderColor" : "rgba(51, 87, 121, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "link_10",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 20,
                "column" : 1,
                "name" : "text_26",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 4,
                "name" : "listselector_4",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_25",
                "row" : 26,
                "rowspan" : 26,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_15",
                "row" : 97,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 39,
                "name" : "link_13",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0)",
                  "borderColor" : "rgb(121, 184, 234)",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 2,
                "name" : "link_14",
                "row" : 55,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "link_15",
                "row" : 55,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(52, 127, 219)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "text_52",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 27,
                "column" : 2,
                "name" : "text_88",
                "row" : 24,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 29,
                "name" : "text_89",
                "row" : 24,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_87",
                "row" : 58,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 112, 210, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "link_22",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_106",
                "row" : 94,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_105",
                "row" : 125,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_4",
                "row" : 128,
                "rowspan" : 25,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "filterpanel_1",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 23,
                "name" : "listselector_6",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 31,
                "name" : "listselector_9",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 27,
                "name" : "listselector_7",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 35,
                "name" : "listselector_10",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_61",
                "row" : 64,
                "rowspan" : 29,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_115",
                "row" : 59,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "text_57",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 13,
                "column" : 13,
                "name" : "pillbox_1",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(14, 47, 92, 0.69)",
                  "borderColor" : "rgba(125, 152, 179, 0.7)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_59",
                "row" : 12,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(207, 215, 225)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_57",
                "row" : 21,
                "rowspan" : 33,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "text_32",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 49,
                "name" : "text_31",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "text_37",
                "row" : 21,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_24",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_33",
                "row" : 62,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "New Products Performance",
            "name" : "01d94675-fe97-4c4d-ba9b-247714ebb005",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 4,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "image_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_3",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "link_7",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(198, 211, 225, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "link_9",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(51, 87, 121, 0)",
                  "borderColor" : "rgba(51, 87, 121, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 41,
                "name" : "link_16",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "link_17",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_54",
                "row" : 22,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 2,
                "name" : "link_18",
                "row" : 55,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(52, 127, 219)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "link_19",
                "row" : 55,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_3",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 4,
                "name" : "listselector_4",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_87",
                "row" : 58,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 112, 210, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "link_22",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_5",
                "row" : 95,
                "rowspan" : 26,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_109",
                "row" : 92,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 27,
                "column" : 1,
                "name" : "filterpanel_1",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 28,
                "name" : "listselector_6",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 34,
                "name" : "listselector_7",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "listselector_9",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "listselector_10",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_6",
                "row" : 62,
                "rowspan" : 30,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_17",
                "row" : 59,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_59",
                "row" : 12,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(207, 215, 225)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_60",
                "row" : 20,
                "rowspan" : 34,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 49,
                "name" : "text_31",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "text_32",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_38",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_22",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "New Product Promotions",
            "name" : "26e5573b-0d39-4c72-b1f9-7fff54dad213",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 4,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "image_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_3",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "link_7",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(198, 211, 225, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "link_9",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(51, 87, 121, 0)",
                  "borderColor" : "rgba(51, 87, 121, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_20",
                "row" : 94,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 41,
                "name" : "link_16",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_54",
                "row" : 22,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "link_20",
                "row" : 55,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(52, 127, 219)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 11,
                "column" : 2,
                "name" : "link_21",
                "row" : 55,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_88",
                "row" : 97,
                "rowspan" : 27,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_3",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 4,
                "name" : "listselector_4",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_87",
                "row" : 58,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 112, 210, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "link_22",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "link_17",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_109",
                "row" : 124,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_5",
                "row" : 127,
                "rowspan" : 25,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 34,
                "name" : "listselector_7",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 28,
                "name" : "listselector_6",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 27,
                "column" : 1,
                "name" : "filterpanel_1",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "listselector_9",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "listselector_10",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_71",
                "row" : 64,
                "rowspan" : 29,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 8,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 1,
                "name" : "text_116",
                "row" : 59,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_59",
                "row" : 12,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(207, 215, 225)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "text_32",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 49,
                "name" : "text_31",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_60",
                "row" : 20,
                "rowspan" : 34,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_38",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_22",
                "row" : 20,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_25",
                "row" : 62,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Brand Performance",
            "name" : "448e985e-a4fa-4652-bf1b-99d8d3325a0a",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 4,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "image_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_3",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_7",
                "row" : 12,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(207, 215, 225)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 10,
                "column" : 4,
                "name" : "listselector_1",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_3",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 34,
                "name" : "text_4",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 10,
                "column" : 38,
                "name" : "listselector_2",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_10",
                "row" : 18,
                "rowspan" : 44,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_5",
                "row" : 19,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "pillbox_3",
                "row" : 23,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(14, 47, 92)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "dateselector_2",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "link_6",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "link_7",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgba(198, 211, 225, 0)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "text_52",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_87",
                "row" : 66,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 112, 210, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "link_9",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(51, 87, 121, 0)",
                  "borderColor" : "rgba(51, 87, 121, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "link_17",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_19",
                "row" : 26,
                "rowspan" : 34,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_22",
                "row" : 70,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 2,
                "name" : "text_101",
                "row" : 63,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(52, 127, 219)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_107",
                "row" : 67,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_108",
                "row" : 101,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_6",
                "row" : 138,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_110",
                "row" : 135,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 34,
                "name" : "listselector_9",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 29,
                "name" : "listselector_7",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "filterpanel_1",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 24,
                "name" : "listselector_6",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "text_60",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_29",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_37",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_8",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_30",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_9",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_31",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_10",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "container_32",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_43",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_47",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_48",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_49",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_50",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_51",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_33",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_44",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_34",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_45",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_35",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_46",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "container_36",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_49",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_37",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_53",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_38",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_54",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_39",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_55",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "number_52",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_53",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_54",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_55",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_56",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_57",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_58",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_59",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "number_60",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_61",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_62",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_63",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_64",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_65",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_66",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_67",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 4,
                "name" : "text_23",
                "row" : 16,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 38,
                "name" : "text_28",
                "row" : 16,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 14,
                "name" : "text_47",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Assortment Performance",
            "name" : "686a88d9-d63b-41b0-ae3d-323b0e3ca2da",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 11,
                "column" : 4,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "image_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_3",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_7",
                "row" : 12,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(207, 215, 225)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 10,
                "column" : 4,
                "name" : "listselector_1",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_3",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 34,
                "name" : "text_4",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 10,
                "column" : 38,
                "name" : "listselector_2",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_10",
                "row" : 18,
                "rowspan" : 44,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "pillbox_3",
                "row" : 23,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(14, 47, 92)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "dateselector_2",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "text_52",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_87",
                "row" : 66,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(0, 112, 210, 0)",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "link_9",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(51, 87, 121, 0)",
                  "borderColor" : "rgba(51, 87, 121, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "link_17",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_102",
                "row" : 67,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "link_22",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "link_8",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(52, 127, 219)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_32",
                "row" : 26,
                "rowspan" : 34,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 2,
                "name" : "text_103",
                "row" : 63,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(52, 127, 219)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_34",
                "row" : 70,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_1",
                "row" : 137,
                "rowspan" : 26,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_111",
                "row" : 134,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 30,
                "column" : 1,
                "name" : "filterpanel_1",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "listselector_10",
                "row" : 7,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_114",
                "row" : 101,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(230, 236, 242, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_113",
                "row" : 19,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "text_61",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_40",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_46",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_68",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_69",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_41",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_83",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_42",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_84",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "container_43",
                "row" : 105,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_85",
                "row" : 106,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_70",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_71",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_72",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_73",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_44",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_86",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_45",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_90",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_46",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_118",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "container_47",
                "row" : 115,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 37,
                "name" : "text_119",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "container_48",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_120",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "container_49",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 13,
                "name" : "text_121",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "container_50",
                "row" : 125,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 11,
                "column" : 25,
                "name" : "text_122",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "number_74",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_75",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_76",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_77",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_78",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_79",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_80",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_81",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 37,
                "name" : "number_82",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 44,
                "name" : "number_83",
                "row" : 119,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_84",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 8,
                "name" : "number_85",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 13,
                "name" : "number_86",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 20,
                "name" : "number_87",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "number_88",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 32,
                "name" : "number_89",
                "row" : 129,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 4,
                "name" : "text_23",
                "row" : 16,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 38,
                "name" : "text_28",
                "row" : 16,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 14,
                "name" : "text_48",
                "row" : 13,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#FFFFFF",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "#C5D3E0"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "AvgWeeklyRevenue_Gau_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AvgWeeklyRevenue_Gauge",
        "numbers" : [ ],
        "query" : "total_weekrev = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\ntotal_weekrev_A = filter total_weekrev by 'Product_Name' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ntotal_weekrev_A = group total_weekrev_A by 'Product_Name';\r\ntotal_weekrev_A = foreach total_weekrev_A generate 'Product_Name' as 'Product', (sum('TotalPrice')/unique('Order_ActivatedDate_Week')) as 'avg_weekly_revenue', \"select\" as 'text', \"A\" as 'order';\r\nweekly_rev = group total_weekrev by 'Product_Name';\r\nweekly_rev = foreach weekly_rev generate 'Product_Name', (sum('TotalPrice')/unique('Order_ActivatedDate_Week')) as 'avg_weekly_revenue';\r\ntotal_weekrev_B = foreach weekly_rev generate 'Product_Name' as 'Product', 'avg_weekly_revenue' as 'max_avg_weekly_revenue', \"max\" as 'text', \"B\" as 'order';\r\ntotal_weekrev_B = order total_weekrev_B by 'max_avg_weekly_revenue' desc;\r\ntotal_weekrev_B = limit total_weekrev_B 1;\r\ntotal_weekrev_C = foreach weekly_rev generate 'Product_Name' as 'Product', 'avg_weekly_revenue' as 'min_avg_weekly_revenue', \"min\" as 'text', \"C\" as 'order';\r\ntotal_weekrev_C = order total_weekrev_C by 'min_avg_weekly_revenue' asc;\r\ntotal_weekrev_C = limit total_weekrev_C 1;\r\ntotal_weekrev_D = group weekly_rev by 'Product_Name';\r\ntotal_weekrev_D = foreach total_weekrev_D generate 'Product_Name' as 'Product', avg(sum('avg_weekly_revenue')) over([..] partition by all) as 'avg_avg_weekly_revenue', \"avg\" as 'text', \"D\" as 'order';\r\ntotal_weekrev_D = limit total_weekrev_D 1;\r\nweekrev = cogroup total_weekrev_A by ('Product', 'order') full, total_weekrev_B by ('Product', 'order') full, total_weekrev_C by ('Product', 'order') full, total_weekrev_D by ('Product', 'order');\r\nweekrev = foreach weekrev generate coalesce(total_weekrev_A.'Product', total_weekrev_B.'Product', total_weekrev_C.'Product', total_weekrev_D.'Product') as 'Product', coalesce(total_weekrev_A.'order', total_weekrev_B.'order', total_weekrev_C.'order', total_weekrev_D.'order') as 'order', sum(total_weekrev_A.'avg_weekly_revenue') as 'avg_weekly_revenue', coalesce(sum(total_weekrev_A.'avg_weekly_revenue'),0) as 'avg_weekly_revenue_coalesced', coalesce(sum(total_weekrev_B.'max_avg_weekly_revenue'),0) as 'max_avg_weekly_revenue', coalesce(sum(total_weekrev_C.'min_avg_weekly_revenue'),0) as 'min_avg_weekly_revenue', coalesce(sum(total_weekrev_D.'avg_avg_weekly_revenue'),0) as 'avg_avg_weekly_revenue';\r\nweekrev = group weekrev by ('Product', 'order');\r\nweekrev = foreach weekrev generate 'Product', 'order', sum('avg_weekly_revenue') as 'avg_weekly_revenue', sum('max_avg_weekly_revenue') as 'max_avg_weekly_revenue', sum('avg_avg_weekly_revenue') as 'avg_avg_weekly_revenue', sum('min_avg_weekly_revenue') as 'min_avg_weekly_revenue', (case when sum(sum('max_avg_weekly_revenue')) over([..] partition by all) == sum(sum('min_avg_weekly_revenue')) over([..] partition by all) then  0 else sum('min_avg_weekly_revenue') end) as 'min_range', (case when sum(sum('avg_weekly_revenue_coalesced')) over([..] partition by all) >= sum(sum('avg_avg_weekly_revenue')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\nweekrev = foreach weekrev generate 'Product', 'order', 'avg_weekly_revenue', 'max_avg_weekly_revenue', number_to_string('max_avg_weekly_revenue', \"$#,####0.00\") as 'max_avg_weekly_revenue_str', 'min_avg_weekly_revenue', number_to_string('min_avg_weekly_revenue', \"$#,###0.00\") as 'min_avg_weekly_revenue_str', 'avg_avg_weekly_revenue', number_to_string('avg_avg_weekly_revenue', \"$#,####0.00\") as 'avg_avg_weekly_revenue_str', 'min_range', 'color';\r\nweekrev = order weekrev by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 1.0E8,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                150,
                80
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "high" : 66,
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "avg_weekly_revenue"
              ]
            },
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "MasterTable_5" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "MasterTable",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('Assortment_AssortmentProduct_Assortment_Name','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'Assortment_AssortmentProduct_Assortment_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom');\r\ncomp_result = foreach comp_result generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\norder1 = group order1 by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name','OrderId','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name','OrderId', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name');\r\norder1 = foreach order1 generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = filter store_cv by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\nstore_cv = group store_cv by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name');\r\nstore_cv = foreach store_cv generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom');\r\nsos = foreach sos generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom');\r\noos_result = foreach oos_result generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n--FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom');\r\nfcs = foreach fcs generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('Assortment_AssortmentProduct_Assortment_Name','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom');\r\npromo = foreach promo generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom');\r\ninv = foreach inv generate 'Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name') full, sos by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom') full, oos_result by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom') full, comp_result by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom') full,fcs by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom') full, promo by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom') full, inv by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name_Custom') full, store_cv by ('Assortment_AssortmentProduct_Assortment_Name', 'Product_Name');\r\nfinal_table = foreach final_table generate coalesce(order1.'Assortment_AssortmentProduct_Assortment_Name', comp_result.'Assortment_AssortmentProduct_Assortment_Name', sos.'Assortment_AssortmentProduct_Assortment_Name',oos_result.'Assortment_AssortmentProduct_Assortment_Name', fcs.'Assortment_AssortmentProduct_Assortment_Name', promo.'Assortment_AssortmentProduct_Assortment_Name', inv.'Assortment_AssortmentProduct_Assortment_Name', store_cv.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', \r\n\r\ncoalesce(order1.'Product_Name', comp_result.'Product_Name_Custom', sos.'Product_Name_Custom',oos_result.'Product_Name_Custom', fcs.'Product_Name_Custom', promo.'Product_Name_Custom', inv.'Product_Name_Custom', store_cv.'Product_Name') as 'Product', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage';",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "radiusRatio" : 5,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "visualizationType" : "scatter",
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "MasterTable_4" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "MasterTable",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('Product_Family','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by ('Product_Family','Product_Name_Custom');\r\ncomp_result = foreach comp_result generate 'Product_Family','Product_Name_Custom', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\norder1 = group order1 by ('Product_Family',  'Product_Name', 'OrderId','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Product_Family',  'Product_Name', 'OrderId', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Product_Family',  'Product_Name');\r\norder1 = foreach order1 generate 'Product_Family',  'Product_Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = filter store_cv by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\nstore_cv = group store_cv by ('Product_Family',  'Product_Name');\r\nstore_cv = foreach store_cv generate 'Product_Family',  'Product_Name', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('Product_Family','Product_Name_Custom');\r\nsos = foreach sos generate 'Product_Family','Product_Name_Custom', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate 'Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by ('Product_Family','Product_Name_Custom');\r\noos_result = foreach oos_result generate 'Product_Family','Product_Name_Custom', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n--FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('Product_Family','Product_Name_Custom');\r\nfcs = foreach fcs generate 'Product_Family','Product_Name_Custom', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('Product_Family','Product_Name_Custom');\r\npromo = foreach promo generate 'Product_Family','Product_Name_Custom', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('Product_Family','Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'Product_Family','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('Product_Family','Product_Name_Custom');\r\ninv = foreach inv generate 'Product_Family','Product_Name_Custom', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Product_Family',  'Product_Name') full, sos by ('Product_Family','Product_Name_Custom') full, oos_result by ('Product_Family','Product_Name_Custom') full, comp_result by ('Product_Family','Product_Name_Custom') full, fcs by ('Product_Family','Product_Name_Custom') full, promo by ('Product_Family','Product_Name_Custom') full, inv by ('Product_Family','Product_Name_Custom') full, store_cv by ('Product_Family',  'Product_Name');\r\nfinal_table = foreach final_table generate coalesce(order1.'Product_Family', comp_result.'Product_Family', sos.'Product_Family',oos_result.'Product_Family', fcs.'Product_Family', promo.'Product_Family', inv.'Product_Family', store_cv.'Product_Family') as 'Product_Family', \r\n\r\ncoalesce(order1.'Product_Name', comp_result.'Product_Name_Custom', sos.'Product_Name_Custom',oos_result.'Product_Name_Custom', fcs.'Product_Name_Custom', promo.'Product_Name_Custom', inv.'Product_Name_Custom', store_cv.'Product_Name') as 'Product', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage';",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "radiusRatio" : 5,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "visualizationType" : "scatter",
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "MasterTable_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "MasterTable",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Product_Name_Custom' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\ncomp_result = foreach comp_result generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Product_Name' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\norder1 = group order1 by ('Product_Name', 'OrderId','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate  first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', 'Product_Name', 'OrderId', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name');\r\norder1 = foreach order1 generate  'Product_ProductCategory_ProductCategory_Name', 'Product_Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = filter store_cv by 'Product_Name' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nstore_cv = group store_cv by ('Product_Name');\r\nstore_cv = foreach store_cv generate  first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', 'Product_Name', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Product_Name_Custom' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\nsos = foreach sos generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Product_Name_Custom' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\noos_result = foreach oos_result generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n--FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Product_Name_Custom' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\nfcs = foreach fcs generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Product_Name_Custom' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\npromo = foreach promo generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Product_Name_Custom' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\ninv = foreach inv generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name') full, sos by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, oos_result by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, comp_result by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, fcs by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, promo by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, inv by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, store_cv by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name');\r\nfinal_table = foreach final_table generate  \r\n\r\ncoalesce(order1.'Product_Name', comp_result.'Product_Name_Custom', sos.'Product_Name_Custom',oos_result.'Product_Name_Custom', fcs.'Product_Name_Custom', promo.'Product_Name_Custom', inv.'Product_Name_Custom', store_cv.'Product_Name') as 'Product', \r\n\r\ncoalesce(order1.'Product_ProductCategory_ProductCategory_Name', comp_result.'Product_ProductCategory_ProductCategory_Name', sos.'Product_ProductCategory_ProductCategory_Name',oos_result.'Product_ProductCategory_ProductCategory_Name', fcs.'Product_ProductCategory_ProductCategory_Name', promo.'Product_ProductCategory_ProductCategory_Name', inv.'Product_ProductCategory_ProductCategory_Name', store_cv.'Product_ProductCategory_ProductCategory_Name') as 'Product Category', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage';",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "radiusRatio" : 5,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "visualizationType" : "scatter",
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "AllMetrics_refline_q_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AllMetrics_refline_query",
        "numbers" : [ ],
        "query" : "--OutOfStockOccurences--\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\noos = filter retail by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos = group oos_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\noos = foreach oos generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_out_of_stock';\r\noos = group oos by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\noos = foreach oos generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_out_of_stock') as 'current_out_of_stock';\r\n--Revenue--\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_sale = foreach total_sale generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('TotalPrice') as 'current_sales';\r\n--Quantity--\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_qty = group qty_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_qty = foreach total_qty generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('Quantity') as 'current_quantity';\r\n--AvgOrderValue--\r\nordval_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_ordval = group ordval_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_ordval = foreach total_ordval generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (sum('TotalPrice')/unique('OrderId')) as 'current_avg_order_value';\r\n--AvgWeeklyRevenue--\r\nweekrev_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_weekrev = group weekrev_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_weekrev = foreach total_weekrev generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('TotalPrice') as 'current_sales';\r\ntotal_weekrev = group total_weekrev by 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_weekrev = foreach total_weekrev generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (sum('current_sales')/unique('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}')) as 'current_avg_week_revenue';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_comp';\r\ntotal_comp = group total_comp by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_comp') as 'current_comp';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_promo';\r\npromo = group promo by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\npromo = foreach promo generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_promo') as 'current_promo';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_fcs = group fcs_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_fcs';\r\ntotal_fcs = group total_fcs by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_fcs') as 'current_fcs';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_sos = group sos_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_sos';\r\ntotal_sos = group total_sos by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_sos') as 'current_sos';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_inv = group inv_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_inventory';\r\ntotal_inv = group total_inv by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_inventory') as 'current_inventory';\r\n---Decline in StoreCoverage\r\nstore_orders_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders = group store_orders_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nstore_orders = foreach store_orders generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage';\r\n--Metric_multidatset---\r\nfinal_table = cogroup\r\n             total_sale by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_qty by  ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_ordval  by  ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_weekrev by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             oos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_comp by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             promo by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_fcs by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_sos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_inv by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             store_orders by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nfinal_table = foreach final_table generate coalesce(total_sale.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_qty.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_ordval.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_weekrev.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',  oos.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_comp.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', promo.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_fcs.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_sos.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_inv.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', store_orders.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}')  as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n\r\nsum(total_sale.'current_sales') as 'total_sales', sum(total_qty.'current_quantity') as 'total_qty', sum(total_ordval.'current_avg_order_value') as 'avg_order_value', sum(total_weekrev.'current_avg_week_revenue') as 'avg_weekly_revenue', avg(oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance', sum(total_comp.'current_comp') as 'Avg_CompliancePercentage', sum(promo.'current_promo') as 'Avg_PromoCompliance_Percentage', sum(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', sum(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', sum(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage', sum(store_orders.'current_store_coverage') as 'store_coverage';\r\n\r\nfinal_table = group final_table by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nfinal_table = foreach final_table generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg(sum('total_sales')) over([..] partition by all) as 'total_sales_refline', avg(sum('total_qty')) over([..] partition by all) as 'total_qty_refline', avg(sum('avg_order_value')) over([..] partition by all) as 'avg_order_value_refline', avg(sum('avg_weekly_revenue')) over([..] partition by all) as 'avg_weekly_revenue_refline', avg(sum('Avg_OutOfStock_Compliance')) over([..] partition by all) as 'Avg_OutOfStock_Compliance_refline', avg(sum('Avg_CompliancePercentage')) over([..] partition by all) as 'Avg_CompliancePercentage_refline', avg(sum('Avg_PromoCompliance_Percentage')) over([..] partition by all) as 'Avg_PromoCompliance_Percentage_refline', avg(sum('Avg_FacingsCompliance_Percentage')) over([..] partition by all) as 'Avg_FacingsCompliance_Percentage_refline', avg(sum('Avg_SoSCompliance_Percentage')) over([..] partition by all) as 'Avg_SoSCompliance_Percentage_refline', avg(sum('Avg_InventoryCompliance_Percentage')) over([..] partition by all) as 'Avg_InventoryCompliance_Percentage_refline', (avg(sum('store_coverage')) over([..] partition by all)*100) as 'store_coverage_refline';\r\nfinal_table = foreach final_table generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', '{{cell(static_10.selection, 0, \"refline_name\").asString()}}' as 'Reference Line', number_to_string('{{cell(static_10.selection, 0, \"refline_name\").asString()}}', \"#,###0.00\") as 'refline_value_label', (case when \"{{cell(static_10.selection, 0, \"unit\").asString()}}\"==\"$\" then \"$\" else \"\" end) as 'refline_text_prefix', (case when \"{{cell(static_10.selection, 0, \"unit\").asString()}}\"==\"%\" then \"%\" else \"\" end) as 'refline_text_suffix';\r\nfinal_table = limit final_table 1;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Avg_promo_compliance_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Avg_promo_compliance_gauge",
        "numbers" : [ ],
        "query" : "promo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo_A = filter promo by 'Product_Name_Custom' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\npromo_A = filter promo_A by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = group promo_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo_A = foreach promo_A generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_promo';\r\npromo_A = group promo_A by 'Product_Name_Custom';\r\npromo_A = foreach promo_A generate 'Product_Name_Custom' as 'Product', avg('current_promo') as 'Avg_PromoCompliance_Percentage', \"select\" as 'text', \"A\" as 'order';\r\npromotions = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromotions = group promotions by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\npromotions = foreach promotions generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_promo';\r\npromotions = group promotions by 'Product_Name_Custom';\r\npromo_B = foreach promotions generate 'Product_Name_Custom' as 'Product', avg('current_promo') as 'max_Avg_PromoCompliance_Percentage', \"max\" as 'text', \"B\" as 'order';\r\npromo_B = order promo_B by 'max_Avg_PromoCompliance_Percentage' desc;\r\npromo_B = limit promo_B 1;\r\npromo_C = foreach promotions generate 'Product_Name_Custom' as 'Product', avg('current_promo') as 'min_Avg_PromoCompliance_Percentage', \"min\" as 'text', \"C\" as 'order';\r\npromo_C = order promo_C by 'min_Avg_PromoCompliance_Percentage' asc;\r\npromo_C = limit promo_C 1;\r\npromo_D = foreach promotions generate 'Product_Name_Custom' as 'Product', avg(avg('current_promo')) over([..] partition by all) as 'avg_Avg_PromoCompliance_Percentage', \"avg\" as 'text', \"D\" as 'order';\r\npromo_D = limit promo_D 1;\r\ntotal_promo = cogroup promo_A by ('Product', 'text', 'order') full, promo_B by ('Product', 'text', 'order') full, promo_C by ('Product', 'text', 'order') full, promo_D by ('Product', 'text', 'order');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'Product', promo_B.'Product', promo_C.'Product', promo_D.'Product') as 'Product', coalesce(promo_A.'order', promo_B.'order', promo_C.'order', promo_D.'order') as 'order', sum(promo_A.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', coalesce(sum(promo_A.'Avg_PromoCompliance_Percentage'),0) as 'Avg_PromoCompliance_Percentage_coalesced', coalesce(sum(promo_B.'max_Avg_PromoCompliance_Percentage'),0) as 'max_Avg_PromoCompliance_Percentage', coalesce(sum(promo_C.'min_Avg_PromoCompliance_Percentage'),0) as 'min_Avg_PromoCompliance_Percentage', sum(promo_D.'avg_Avg_PromoCompliance_Percentage') as 'avg_Avg_PromoCompliance_Percentage';\r\n\r\ntotal_promo = group total_promo by ('Product', 'order');\r\n\r\ntotal_promo = foreach total_promo generate 'Product', 'order', sum('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', sum('max_Avg_PromoCompliance_Percentage') as 'max_Avg_PromoCompliance_Percentage', sum('avg_Avg_PromoCompliance_Percentage') as 'avg_Avg_PromoCompliance_Percentage', sum('min_Avg_PromoCompliance_Percentage') as 'min_Avg_PromoCompliance_Percentage', (case when sum(sum('max_Avg_PromoCompliance_Percentage')) over([..] partition by all) == sum(sum('min_Avg_PromoCompliance_Percentage')) over([..] partition by all) then  0 else sum('min_Avg_PromoCompliance_Percentage') end) as 'min_range', (case when sum(sum('Avg_PromoCompliance_Percentage_coalesced')) over([..] partition by all) >= sum(sum('avg_Avg_PromoCompliance_Percentage')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\n\r\ntotal_promo = foreach total_promo generate 'Product', 'order', 'Avg_PromoCompliance_Percentage', 'max_Avg_PromoCompliance_Percentage', number_to_string('max_Avg_PromoCompliance_Percentage', \"##0.00\") as 'max_Avg_PromoCompliance_Percentage_str', 'min_range', 'min_Avg_PromoCompliance_Percentage', number_to_string('min_Avg_PromoCompliance_Percentage', \"##0.00\") as 'min_Avg_PromoCompliance_Percentage_str', 'avg_Avg_PromoCompliance_Percentage', number_to_string('avg_Avg_PromoCompliance_Percentage', \"##0.00\") as 'avg_Avg_PromoCompliance_Percentage_str', 'color';\r\n\r\ntotal_promo = order total_promo by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 100,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "Avg_PromoCompliance_Percentage"
              ]
            },
            "high" : 66,
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Avg_FCS_compliance_g_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Avg_FCS_compliance_gauge",
        "numbers" : [ ],
        "query" : "fcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs_A = filter fcs by 'Product_Name_Custom' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nfcs_A = filter fcs_A by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = group fcs_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs_A = foreach fcs_A generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_fcs';\r\nfcs_A = group fcs_A by 'Product_Name_Custom';\r\nfcs_A = foreach fcs_A generate 'Product_Name_Custom' as 'Product', avg('current_fcs') as 'Avg_FacingsCompliance_Percentage', \"select\" as 'text', \"A\" as 'order';\r\nfacing = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfacing = group facing by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nfacing = foreach facing generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_fcs';\r\nfacing = group facing by 'Product_Name_Custom';\r\nfcs_B = foreach facing generate 'Product_Name_Custom' as 'Product', avg('current_fcs') as 'max_Avg_FacingsCompliance_Percentage', \"max\" as 'text', \"B\" as 'order';\r\nfcs_B = order fcs_B by 'max_Avg_FacingsCompliance_Percentage' desc;\r\nfcs_B = limit fcs_B 1;\r\nfcs_C = foreach facing generate 'Product_Name_Custom' as 'Product', avg('current_fcs') as 'min_Avg_FacingsCompliance_Percentage', \"min\" as 'text', \"C\" as 'order';\r\nfcs_C = order fcs_C by 'min_Avg_FacingsCompliance_Percentage' asc;\r\nfcs_C = limit fcs_C 1;\r\nfcs_D = foreach facing generate 'Product_Name_Custom' as 'Product', avg(avg('current_fcs')) over([..] partition by all) as 'avg_Avg_FacingsCompliance_Percentage', \"avg\" as 'text', \"D\" as 'order';\r\nfcs_D = limit fcs_D 1;\r\ntotal_fcs = cogroup fcs_A by ('Product', 'order') full, fcs_B by ('Product', 'order') full, fcs_C by ('Product', 'order') full, fcs_D by ('Product', 'order');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'Product', fcs_B.'Product', fcs_C.'Product', fcs_D.'Product') as 'Product', coalesce(fcs_A.'order', fcs_B.'order', fcs_C.'order', fcs_D.'order') as 'order', sum(fcs_A.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', coalesce(sum(fcs_A.'Avg_FacingsCompliance_Percentage'),0) as 'Avg_FacingsCompliance_Percentage_coalesced', coalesce(sum(fcs_B.'max_Avg_FacingsCompliance_Percentage'), 0) as 'max_Avg_FacingsCompliance_Percentage', coalesce(sum(fcs_C.'min_Avg_FacingsCompliance_Percentage'), 0) as 'min_Avg_FacingsCompliance_Percentage', sum(fcs_D.'avg_Avg_FacingsCompliance_Percentage') as 'avg_Avg_FacingsCompliance_Percentage';\r\n\r\ntotal_fcs = group total_fcs by ('Product', 'order');\r\n\r\ntotal_fcs = foreach total_fcs generate 'Product', 'order', sum('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', sum('max_Avg_FacingsCompliance_Percentage') as 'max_Avg_FacingsCompliance_Percentage', sum('avg_Avg_FacingsCompliance_Percentage') as 'avg_Avg_FacingsCompliance_Percentage', sum('min_Avg_FacingsCompliance_Percentage') as 'min_Avg_FacingsCompliance_Percentage', (case when sum(sum('max_Avg_FacingsCompliance_Percentage')) over([..] partition by all) == sum(sum('min_Avg_FacingsCompliance_Percentage')) over([..] partition by all) then 0 else sum('min_Avg_FacingsCompliance_Percentage') end) as 'min_range', (case when sum(sum('Avg_FacingsCompliance_Percentage_coalesced')) over([..] partition by all) >= sum(sum('avg_Avg_FacingsCompliance_Percentage')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\n\r\ntotal_fcs = foreach total_fcs generate 'Product', 'order', 'Avg_FacingsCompliance_Percentage', 'max_Avg_FacingsCompliance_Percentage', number_to_string('max_Avg_FacingsCompliance_Percentage', \"##0.00\") as 'max_Avg_FacingsCompliance_Percentage_str', 'min_Avg_FacingsCompliance_Percentage', number_to_string('min_Avg_FacingsCompliance_Percentage', \"##0.00\") as 'min_Avg_FacingsCompliance_Percentage_str', 'avg_Avg_FacingsCompliance_Percentage', number_to_string('avg_Avg_FacingsCompliance_Percentage', \"##0.00\") as 'avg_Avg_FacingsCompliance_Percentage_str', 'min_range', 'color';\r\n\r\ntotal_fcs = order total_fcs by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 100,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "Avg_FacingsCompliance_Percentage"
              ]
            },
            "high" : 66,
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "ProdCat_Promo_Trend__1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "ProdCat_Promo_Trend__1",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = filter retail_store by date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day') in [\"180 days ago\"..\"current day\"];\r\nretail_store = group retail_store by ('CreatedDate_Year', 'CreatedDate_Week');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year' + \"~~~\" + 'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week';\r\n--OutOfStockOccurences--\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos = filter oos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\noos = group oos by ('ActualVisitStartTime_Year','ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\noos = foreach oos generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_out_of_stock';\r\noos = group oos by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\noos = foreach oos generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_out_of_stock') as 'current_out_of_stock';\r\n--Revenue--\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_Name'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\norders = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"180 days ago\"..\"current day\"];\r\norders = group orders by ('Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norders = foreach orders generate 'Order_ActivatedDate_Year' + \"~~~\" + 'Order_ActivatedDate_Week' as 'Order_ActivatedDate_Year~~~Order_ActivatedDate_Week', sum('TotalPrice') as 'current_sales', sum('Quantity') as 'current_quantity', (sum('TotalPrice')/unique('OrderId')) as 'current_avg_order_value', (sum('TotalPrice')/unique('Order_ActivatedDate_Week')) as 'current_avg_week_revenue', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp = filter comp by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_comp = group comp by ('ActualVisitStartTime_Year','ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_comp';\r\ntotal_comp = group total_comp by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_comp') as 'current_comp';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = filter promo by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\npromo = group promo by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_promo';\r\npromo = group promo by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\npromo = foreach promo generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_promo') as 'current_promo';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = filter fcs by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_fcs = group fcs by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_fcs';\r\ntotal_fcs = group total_fcs by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_fcs') as 'current_fcs';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = filter sos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_sos = group sos by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_sos';\r\ntotal_sos = group total_sos by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_sos') as 'current_sos';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = filter inv by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_inv = group inv by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_inventory';\r\ntotal_inv = group total_inv by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_inventory') as 'current_inventory';\r\n--Metric_multidatset---\r\nfinal_table = cogroup\r\n             retail_store by ('CreatedDate_Year~~~CreatedDate_Week') full,\r\n             orders by ('Order_ActivatedDate_Year~~~Order_ActivatedDate_Week') full,\r\n             oos by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_comp by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             promo by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_fcs by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_sos by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_inv by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week');\r\nfinal_table = foreach final_table generate coalesce(retail_store.'CreatedDate_Year~~~CreatedDate_Week', orders.'Order_ActivatedDate_Year~~~Order_ActivatedDate_Week', oos.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_comp.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', promo.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_fcs.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_sos.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_inv.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') as 'CreatedDate_Year~~~CreatedDate_Week',\r\n\r\nsum(orders.'current_sales') as 'total_sales',\r\nsum(orders.'current_quantity') as 'total_qty', \r\nsum(orders.'current_avg_order_value') as 'avg_order_value', \r\nsum(orders.'current_avg_week_revenue') as 'avg_weekly_revenue', \r\nsum(oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance',\r\nsum(total_comp.'current_comp') as 'Avg_CompliancePercentage', \r\nsum(promo.'current_promo') as 'Avg_PromoCompliance_Percentage', \r\nsum(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\nsum(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', \r\nsum(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage', \r\nsum(orders.'current_store_coverage') as 'store_coverage';\r\n---Promotions---\r\nq = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nq =  filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [..\"current day\"] and date('EndDate_Computed_Year', 'EndDate_Computed_Month', 'EndDate_Computed_Day') in [\"180 days ago\"..];\r\nq = filter q by 'PromotionId' in {{coalesce(column(PromoChannel_Combine_3.result, [\"PromotionId\"]),toArray(\"NA\")).asString()}};\r\nq1 = group q by ('StartDate', 'StartDate_Year', 'StartDate_Quarter', 'StartDate_Month', 'StartDate_Week', 'StartDate_Day', 'Promotion_Name', 'Id');\r\nq1 = foreach q1 generate 'Id', 'Promotion_Name', 'StartDate_Year' as 'Year','StartDate_Quarter' as 'Quarter', 'StartDate_Week' as 'Week', 'StartDate_Month' as 'Month', 'StartDate_Day' as 'Day', count(q) as 'A', date_to_epoch(toDate('StartDate' + \" 00:00:00\")) as Start, string_to_number(StartDate_Year+StartDate_Week) as 'StartYearWeek';\r\nq2 = group q by ('EndDate_Computed', 'EndDate_Computed_Year', 'EndDate_Computed_Quarter', 'EndDate_Computed_Month', 'EndDate_Computed_Week', 'EndDate_Computed_Day', 'Promotion_Name', 'Id');\r\nq2 = foreach q2 generate 'Id', 'Promotion_Name','EndDate_Computed_Year' as 'Year','EndDate_Computed_Quarter' as 'Quarter', 'EndDate_Computed_Month' as 'Month', 'EndDate_Computed_Week' as 'Week', 'EndDate_Computed_Day' as 'Day', count() as 'A', date_to_epoch(toDate('EndDate_Computed' + \" 00:00:00\")) as End, string_to_number(EndDate_Computed_Year+EndDate_Computed_Week) as 'EndYearWeek';\r\nq = union q1,q2;\r\nq = group q by ('Id', 'Promotion_Name', 'Year','Quarter', 'Month', 'Week', 'Day');\r\nq = foreach q generate 'Id'+\"_\"+'Promotion_Name' as 'Key','Id', 'Promotion_Name', 'Year','Quarter', 'Month', 'Week', 'Day',sum('A') as 'A', sum(Start) as Start, sum(End) as End, sum('StartYearWeek') as 'StartYearWeek', sum('EndYearWeek') as 'EndYearWeek';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"), partition = 'Key');\r\nq = group q by ('Key', 'Year', 'Week');\r\nq = foreach q generate substr('Key',index_of('Key',\"_\")+1) as 'Promotion_Name_New',  'Year', 'Week', coalesce(sum(A) , sum(sum('A')) over([..-1] partition by ('Key') order by ('Year', 'Week'))) as 'Value', toString(toDate(max(sum('Start')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as Start, toString(toDate(max(sum('End')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as End, string_to_number('Year'+'Week') as 'YearWeek_filter',\r\n\r\nmax(sum('StartYearWeek')) over ([..] partition by 'Key') as 'StartYearWeek', max(sum('EndYearWeek')) over ([..] partition by 'Key') as 'EndYearWeek', case when string_to_number('Year'+'Week') <= max(sum('EndYearWeek')) over ([..] partition by 'Key') and string_to_number('Year'+'Week') >= max(sum('StartYearWeek')) over ([..] partition by 'Key') then 1 else 0 end as 'Promotion_Period_Filter_Flag';\r\nq = filter q by 'Promotion_Period_Filter_Flag' == 1;\r\nq = filter q by 'YearWeek_filter' >= string_to_number(\"{{cell(date_parser_2.result, 0, \"180days_prior_yrweek\").asString()}}\") and 'YearWeek_filter' <= string_to_number(\"{{cell(date_parser_2.result, 0, \"yrweek_now\").asString()}}\");\r\nq = filter q by 'Promotion_Name_New'==\"{{cell(Promotion_Final_3.selection, 0, \"Promotion Name\").asString()}}\";\r\nq = foreach q generate 'Promotion_Name_New', 'Year', 'Week', 'Value', 'Start' as 'Start', 'End' as 'End';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"));\r\nq = group q by ('Promotion_Name_New', 'Year', 'Week', 'Start', 'End');\r\nq = foreach q generate 'Promotion_Name_New' as 'Promotion Name', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', sum('Value') as 'Value', 'Start' as 'Start', 'End' as 'End';\r\n---result_multidataset---\r\nresult = cogroup final_table by ('CreatedDate_Year~~~CreatedDate_Week') full, q by ('Year~~~Week');\r\nresult = foreach result generate coalesce(final_table.'CreatedDate_Year~~~CreatedDate_Week', q.'Year~~~Week') as 'CreatedDate_Year~~~CreatedDate_Week', first(q.'Promotion Name') as 'Promotion Name', first(q.'Start') as 'Start', first(q.'End') as 'End',\r\n\r\nsum(final_table.'total_sales') as 'total_sales',\r\nsum(final_table.'total_qty') as 'total_qty', \r\nsum(final_table.'avg_order_value') as 'avg_order_value', \r\nsum(final_table.'avg_weekly_revenue') as 'avg_weekly_revenue', \r\nsum(final_table.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance',\r\nsum(final_table.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', \r\nsum(final_table.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', \r\nsum(final_table.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', \r\nsum(final_table.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', \r\nsum(final_table.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', \r\nsum(final_table.'store_coverage') as 'store_coverage', min(q.'Value') as 'Value';\r\nresult = filter result by '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}' is not null or 'Value' is not null;\r\nresult = foreach result generate 'CreatedDate_Year~~~CreatedDate_Week', 'Promotion Name', 'Start' as 'Start Date', 'End' as 'End Date', coalesce('{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}',0) as '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}', coalesce('Value',0) as 'Promotion', case when 'Value'==1 then \"Promotion is running\" else \"Promotion has ended\" end as 'Promotion Status';\r\nresult = order result by 'CreatedDate_Year~~~CreatedDate_Week' asc;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "AllMetrics___Percent_7" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AllMetrics_&_PercentChanges",
        "numbers" : [ ],
        "query" : "---Decline in OutofStock (CG_RetailVisitKpi)\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\ntotal_oos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter total_oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos_B = filter total_oos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_oos = group oos_A by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name') full, oos_B by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'Assortment_AssortmentProduct_Assortment_Name', oos_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', \r\ncoalesce(oos_A.'AssessmentTask_Visit_RetailStore_Name', oos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name',\r\navg(oos_A.'Compliance_Percentage') as 'current_out_of_stock', avg(oos_B.'Compliance_Percentage') as 'previous_out_of_stock';\r\ntotal_oos = group total_oos by 'Assortment_AssortmentProduct_Assortment_Name';\r\ntotal_oos = foreach total_oos generate 'Assortment_AssortmentProduct_Assortment_Name', avg('current_out_of_stock') as 'current_out_of_stock', avg('previous_out_of_stock') as 'previous_out_of_stock';\r\ntotal_oos = foreach total_oos generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_out_of_stock', 'previous_out_of_stock', (('current_out_of_stock'-'previous_out_of_stock')/('previous_out_of_stock')) as 'PoP_Out_of_Stock_percent';\r\ntotal_oos = foreach total_oos generate 'Assortment_AssortmentProduct_Assortment_Name','current_out_of_stock','PoP_Out_of_Stock_percent';\r\n-- Decline in Sales(CG_OrderItem)\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Assortment_AssortmentProduct_Assortment_Name') full, sales_B by ('Assortment_AssortmentProduct_Assortment_Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Assortment_AssortmentProduct_Assortment_Name', sales_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sale = foreach total_sale generate 'Assortment_AssortmentProduct_Assortment_Name','current_sales', 'previous_sales', (('current_sales'-'previous_sales')/('previous_sales')) as 'Percent_change_in_Sales';\r\ntotal_sale = foreach total_sale generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_sales', 'Percent_change_in_Sales';\r\n--Decline in Quantity(CG_OrderItem)\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nqty_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_qty = group qty_A by ('Assortment_AssortmentProduct_Assortment_Name') full, qty_B by ('Assortment_AssortmentProduct_Assortment_Name');\r\ntotal_qty = foreach total_qty generate coalesce(qty_A.'Assortment_AssortmentProduct_Assortment_Name', qty_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', sum(qty_A.'Quantity') as 'current_quantity', sum(qty_B.'Quantity') as 'previous_quantity';\r\ntotal_qty = foreach total_qty generate 'Assortment_AssortmentProduct_Assortment_Name','current_quantity', 'previous_quantity', (('current_quantity'-'previous_quantity')/('previous_quantity')) as 'Percent_Change_in_Quantity';\r\ntotal_qty = foreach total_qty generate 'Assortment_AssortmentProduct_Assortment_Name','current_quantity','Percent_Change_in_Quantity';\r\n---Decline in AvgOrderValue\r\nordval_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nordval_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_ordval = group ordval_A by ('Assortment_AssortmentProduct_Assortment_Name') full, ordval_B by ('Assortment_AssortmentProduct_Assortment_Name');\r\ntotal_ordval = foreach total_ordval generate coalesce(ordval_A.'Assortment_AssortmentProduct_Assortment_Name', ordval_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', (sum(ordval_A.'TotalPrice')/unique(ordval_A.'OrderId')) as 'current_avg_order_value', (sum(ordval_B.'TotalPrice')/unique(ordval_B.'OrderId')) as 'previous_avg_order_value';\r\ntotal_ordval = foreach total_ordval generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_avg_order_value', 'previous_avg_order_value', (('current_avg_order_value'-'previous_avg_order_value')/('previous_avg_order_value')) as 'Percent_Change_in_AvgOrderValue';\r\ntotal_ordval = foreach total_ordval generate 'Assortment_AssortmentProduct_Assortment_Name','current_avg_order_value','Percent_Change_in_AvgOrderValue';\r\n---Decline in SalesVelocity\r\nsv_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsv_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sv = group sv_A by ('Assortment_AssortmentProduct_Assortment_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sv_B by ('Assortment_AssortmentProduct_Assortment_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sv_A.'Assortment_AssortmentProduct_Assortment_Name', sv_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', sv_A.'Order_ActivatedDate_Year'+\"-\"+ sv_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sv_B.'Order_ActivatedDate_Year'+\"-\"+ sv_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sv_A.'TotalPrice') as 'current_sales', sum(sv_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Assortment_AssortmentProduct_Assortment_Name';\r\ntotal_sv = foreach total_sv generate 'Assortment_AssortmentProduct_Assortment_Name', sum('current_sales')/unique('CurrentPeriod_YearWeek') as 'current_avg_week_revenue', sum('previous_sales')/unique('PreviousPeriod_YearWeek') as 'previous_avg_week_revenue';\r\ntotal_sv = foreach total_sv generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_avg_week_revenue', 'previous_avg_week_revenue', (('current_avg_week_revenue'-'previous_avg_week_revenue')/('previous_avg_week_revenue')) as 'Percent_Change_in_WeeklyRev';\r\ntotal_sv = foreach total_sv generate 'Assortment_AssortmentProduct_Assortment_Name','current_avg_week_revenue','Percent_Change_in_WeeklyRev';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'Assortment_AssortmentProduct_Assortment_Name', comp_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'Assortment_AssortmentProduct_Assortment_Name';\r\ntotal_comp = foreach total_comp generate 'Assortment_AssortmentProduct_Assortment_Name', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_comp', 'previous_comp', (('current_comp'-'previous_comp')/('previous_comp')) as 'Compliance_Percentate_Change_vs_Previous_Period';\r\ntotal_comp = foreach total_comp generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_comp', 'Compliance_Percentate_Change_vs_Previous_Period';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo_B = filter promo by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo_A by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate coalesce(promo_A.'Assortment_AssortmentProduct_Assortment_Name', promo_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\npromo = group promo by 'Assortment_AssortmentProduct_Assortment_Name';\r\npromo = foreach promo generate 'Assortment_AssortmentProduct_Assortment_Name', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\npromo = foreach promo generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_promo', 'previous_promo', (('current_promo'-'previous_promo')/'previous_promo') as 'PoP_Promotion_Compliance_percent';\r\npromo = foreach promo generate 'Assortment_AssortmentProduct_Assortment_Name','current_promo','PoP_Promotion_Compliance_percent';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nfcs_B = filter fcs by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_fcs = group fcs_A by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'Assortment_AssortmentProduct_Assortment_Name', fcs_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'Assortment_AssortmentProduct_Assortment_Name';\r\ntotal_fcs = foreach total_fcs generate 'Assortment_AssortmentProduct_Assortment_Name', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_fcs', 'previous_fcs', (('current_fcs'-'previous_fcs')/('previous_fcs')) as 'PoP_Facings_Compliance_percent';\r\ntotal_fcs = foreach total_fcs generate 'Assortment_AssortmentProduct_Assortment_Name','current_fcs', 'PoP_Facings_Compliance_percent';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nsos_B = filter sos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_sos = group sos_A by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'Assortment_AssortmentProduct_Assortment_Name', sos_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'Assortment_AssortmentProduct_Assortment_Name';\r\ntotal_sos = foreach total_sos generate 'Assortment_AssortmentProduct_Assortment_Name', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_sos', 'previous_sos', (('current_sos'-'previous_sos')/('previous_sos')) as 'PoP_Share_of_Shelf_Compliance_percent';\r\ntotal_sos = foreach total_sos generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_sos', 'PoP_Share_of_Shelf_Compliance_percent';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ninv_B = filter inv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_inv = group inv_A by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name') full, inv_B by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate coalesce(inv_A.'Assortment_AssortmentProduct_Assortment_Name', inv_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', coalesce(inv_A.'AssessmentTask_Visit_RetailStore_Name', inv_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(inv_A.'Compliance_Percentage') as 'current_inventory', avg(inv_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inv = group total_inv by 'Assortment_AssortmentProduct_Assortment_Name';\r\ntotal_inv = foreach total_inv generate 'Assortment_AssortmentProduct_Assortment_Name', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inv = foreach total_inv generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_inventory', 'previous_inventory', (('current_inventory'-'previous_inventory')/('previous_inventory')) as 'PoP_Inventory_Comp_percent';\r\ntotal_inv = foreach total_inv generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_inventory', 'PoP_Inventory_Comp_percent';\r\n---Decline in StoreCoverage\r\nstore_orders_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders = group store_orders_A by ('Assortment_AssortmentProduct_Assortment_Name') full, store_orders_B by ('Assortment_AssortmentProduct_Assortment_Name');\r\nstore_orders = foreach store_orders generate coalesce(store_orders_A.'Assortment_AssortmentProduct_Assortment_Name', store_orders_B.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', (unique(store_orders_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage', (unique(store_orders_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'previous_store_coverage';\r\nstore_orders = foreach store_orders generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_store_coverage', 'previous_store_coverage', (('current_store_coverage'-'previous_store_coverage')/('previous_store_coverage')) as 'Percent_Change_in_StoreCoverage';\r\nstore_orders = foreach store_orders generate 'Assortment_AssortmentProduct_Assortment_Name', 'current_store_coverage', 'Percent_Change_in_StoreCoverage';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by  ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              total_qty by  ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              total_ordval by ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              total_sv by  ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              total_oos by ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              total_comp by ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              promo by ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              total_fcs by  ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              total_sos by ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              total_inv by ('Assortment_AssortmentProduct_Assortment_Name') full,\r\n              store_orders by ('Assortment_AssortmentProduct_Assortment_Name');\r\nfinal_table = foreach final_table generate\r\n        coalesce(total_sale.'Assortment_AssortmentProduct_Assortment_Name', total_qty.'Assortment_AssortmentProduct_Assortment_Name', total_ordval.'Assortment_AssortmentProduct_Assortment_Name', total_sv.'Assortment_AssortmentProduct_Assortment_Name', total_oos.'Assortment_AssortmentProduct_Assortment_Name', total_comp.'Assortment_AssortmentProduct_Assortment_Name', promo.'Assortment_AssortmentProduct_Assortment_Name', total_fcs.'Assortment_AssortmentProduct_Assortment_Name', total_sos.'Assortment_AssortmentProduct_Assortment_Name', total_inv.'Assortment_AssortmentProduct_Assortment_Name', store_orders.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', \r\n        \r\n         sum(total_sale.'current_sales') as 'total_sales',\r\n         sum(total_sale.'Percent_change_in_Sales') as 'Percent_change_in_Sales',\r\n         sum(total_qty.'current_quantity') as 'total_qty',\r\n         sum(total_qty.'Percent_Change_in_Quantity') as 'Percent_Change_in_Quantity',\r\n         sum(total_ordval.'current_avg_order_value') as 'avg_order_value',\r\n         sum(total_ordval.'Percent_Change_in_AvgOrderValue') as 'Percent_Change_in_AvgOrderValue',\r\n         sum(total_sv.'current_avg_week_revenue') as 'avg_weekly_revenue',\r\n         sum(total_sv.'Percent_Change_in_WeeklyRev') as 'Percent_Change_in_WeeklyRev',\r\n         sum(total_oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance',\r\n         sum(total_oos.'PoP_Out_of_Stock_percent') as 'PoP_Out_of_Stock_percent',\r\n         avg(total_comp.'current_comp') as 'Avg_CompliancePercentage',\r\n         avg(total_comp.'Compliance_Percentate_Change_vs_Previous_Period') as 'Compliance_Percentate_Change_vs_Previous_Period',\r\n         avg(promo.'current_promo') as 'Avg_PromoCompliance_Percentage',\r\n         avg(promo.'PoP_Promotion_Compliance_percent') as 'PoP_Promotion_Compliance_percent',\r\n         avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\n         avg(total_fcs.'PoP_Facings_Compliance_percent') as 'PoP_Facings_Compliance_percent',  \r\n         avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage',\r\n         avg(total_sos.'PoP_Share_of_Shelf_Compliance_percent') as 'PoP_Share_of_Shelf_Compliance_percent',  \r\n         avg(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage',\r\n         avg(total_inv.'PoP_Inventory_Comp_percent') as 'PoP_Inventory_Comp_percent',\r\n         sum(store_orders.'current_store_coverage') as 'store_coverage',\r\n         sum(store_orders.'Percent_Change_in_StoreCoverage') as 'Percent_Change_in_StoreCoverage';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "sync",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "new_launched_prod_py_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "new_launched_prod_pyramid_1",
        "numbers" : [ ],
        "query" : "orders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\n--orders = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"180 days ago\"..\"current day\"];\r\norders = foreach orders generate 'Product2Id', 'Product_Name', toDate(substr('Order_ActivatedDate', 1, 10),\"yyyy-MM-dd\") as 'Order_ActivatedDate', 'TotalPrice',  'OrderId';\r\nprod = load \"${App.Datasets.CG_Product31_tp.FullyQualifiedName}\";\r\nprod = filter prod by date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day') in [\"180 days ago\"..\"current day\"];\r\nprod = foreach prod generate toDate(substr('CreatedDate', 1, 10),\"yyyy-MM-dd\") as 'CreatedDate', 'Name', 'Id';\r\n---Revenue & #Orders----\r\nfinal_A = cogroup prod by ('Id', 'Name') left, orders by ('Product2Id', 'Product_Name');\r\nfinal_A = foreach final_A generate coalesce(prod.'Name', orders.'Product_Name') as 'Product_Name', sum(orders.'TotalPrice') as 'TotalPrice', unique(orders.'OrderId') as 'Number of Orders';\r\norders = group orders by ('Product2Id', 'Product_Name');\r\norders = foreach orders generate 'Product2Id', 'Product_Name', min('Order_ActivatedDate') as 'Order_ActivatedDate';\r\nfinal = cogroup prod by ('Id','Name') left, orders by ('Product2Id','Product_Name');\r\n---since launched---\r\nfinal_B = foreach final generate coalesce(prod.'Name', orders.'Product_Name') as 'Product_Name', first(prod.'CreatedDate') as 'CreatedDate', first(orders.'Order_ActivatedDate') as 'Order_ActivatedDate';\r\nfinal_B = foreach final_B generate 'Product_Name', abs(daysBetween('CreatedDate', 'Order_ActivatedDate')) as 'Days until first Order', 'Order_ActivatedDate';\r\n---since first order---\r\nfinal_C = foreach final generate coalesce(prod.'Name', orders.'Product_Name') as 'Product_Name', first(orders.'Order_ActivatedDate') as 'Order_ActivatedDate', now() as 'today';\r\nfinal_C  = foreach final_C generate 'Product_Name', daysBetween('Order_ActivatedDate', 'today') as 'Days Since first order', 'Order_ActivatedDate';\r\n---multidataset---\r\nresult = cogroup final_A by 'Product_Name' full, final_B by 'Product_Name' full, final_C by 'Product_Name';\r\nresult = foreach result generate coalesce(final_A.'Product_Name', final_B.'Product_Name', final_C.'Product_Name',\"NA\") as 'Product_Name', sum(final_A.'TotalPrice') as 'TotalPrice', sum(final_A.'Number of Orders') as 'Orders', sum(final_B.'Days until first Order') as 'Days Until First Order', sum(final_C.'Days Since first order') as 'Days After First Order', first(final_B.'Order_ActivatedDate') as 'Order_ActivatedDate', toDate(date_to_epoch(now())-(180*86400)) as '180days_prior_date';\r\nresult = filter result by 'Order_ActivatedDate'>='180days_prior_date';\r\nresult = order result by 'TotalPrice' desc;",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Product_Family_1",
            "Assortment_Assortmen_2",
            "Name_2",
            "Name_1"
          ]
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : false,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "binValues" : false,
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "Product_Name"
              ],
              "plots" : [
                "TotalPrice",
                "Orders",
                "Days Until First Order",
                "Days After First Order"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Product_Family_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_OrderItem36_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Product_Family"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Assortment_Assortmen_2",
            "Name_2",
            "Name_1",
            "Current_Period_1"
          ]
        },
        "selectMode" : "multi",
        "start" : [ ],
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "Avg_OOS_compliance_g_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Avg_OOS_compliance_gauge",
        "numbers" : [ ],
        "query" : "oos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos_A = filter oos by 'Product_Name_Custom' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\noos_A = filter oos_A by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = group oos_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_A = foreach oos_A generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_out_of_stock';\r\noos_A = group oos_A by 'Product_Name_Custom';\r\noos_A = foreach oos_A generate 'Product_Name_Custom' as 'Product', avg('current_out_of_stock') as 'Avg_OutOfStock_Compliance', \"select\" as 'text', \"A\" as 'order';\r\nout_of_stock = filter oos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\nout_of_stock = group out_of_stock by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nout_of_stock = foreach out_of_stock generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_out_of_stock';\r\nout_of_stock = group out_of_stock by 'Product_Name_Custom';\r\noos_B = foreach out_of_stock generate 'Product_Name_Custom' as 'Product', avg('current_out_of_stock') as 'max_Avg_OutOfStock_Compliance', \"max\" as 'text', \"B\" as 'order';\r\noos_B = order oos_B by 'max_Avg_OutOfStock_Compliance' desc;\r\noos_B = limit oos_B 1;\r\noos_C = foreach out_of_stock generate 'Product_Name_Custom' as 'Product', avg('current_out_of_stock') as 'min_Avg_OutOfStock_Compliance', \"min\" as 'text', \"C\" as 'order';\r\noos_C = order oos_C by 'min_Avg_OutOfStock_Compliance' asc;\r\noos_C = limit oos_C 1;\r\noos_D = foreach out_of_stock generate 'Product_Name_Custom' as 'Product', avg(avg('current_out_of_stock')) over([..] partition by all) as 'avg_Avg_OutOfStock_Compliance', \"avg\" as 'text', \"D\" as 'order';\r\noos_D = limit oos_D 1;\r\ntotal_oos = cogroup oos_A by ('Product', 'order') full, oos_B by ('Product', 'order') full, oos_C by ('Product', 'order') full, oos_D by ('Product', 'order');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'Product', oos_B.'Product', oos_C.'Product', oos_D.'Product') as 'Product', coalesce(oos_A.'order', oos_B.'order', oos_C.'order', oos_D.'order') as 'order', sum(oos_A.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', coalesce(sum(oos_A.'Avg_OutOfStock_Compliance'),0) as 'Avg_OutOfStock_Compliance_coalesced', coalesce(sum(oos_B.'max_Avg_OutOfStock_Compliance'), 0) as 'max_Avg_OutOfStock_Compliance', coalesce(sum(oos_C.'min_Avg_OutOfStock_Compliance'), 0) as 'min_Avg_OutOfStock_Compliance', coalesce(sum(oos_D.'avg_Avg_OutOfStock_Compliance'),0) as 'avg_Avg_OutOfStock_Compliance';\r\n\r\ntotal_oos = group total_oos by ('Product', 'order');\r\n\r\ntotal_oos = foreach total_oos generate 'Product', 'order', sum('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', sum('max_Avg_OutOfStock_Compliance') as 'max_Avg_OutOfStock_Compliance', sum('avg_Avg_OutOfStock_Compliance') as 'avg_Avg_OutOfStock_Compliance', sum('min_Avg_OutOfStock_Compliance') as 'min_Avg_OutOfStock_Compliance', (case when sum(sum('max_Avg_OutOfStock_Compliance')) over([..] partition by all) == sum(sum('min_Avg_OutOfStock_Compliance')) over([..] partition by all) then  0 else sum('min_Avg_OutOfStock_Compliance') end) as 'min_range', (case when sum(sum('Avg_OutOfStock_Compliance_coalesced')) over([..] partition by all) >= sum(sum('avg_Avg_OutOfStock_Compliance')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\n\r\ntotal_oos = foreach total_oos generate 'Product', 'order', 'Avg_OutOfStock_Compliance', 'max_Avg_OutOfStock_Compliance', number_to_string('max_Avg_OutOfStock_Compliance', \"##0.00\") as 'max_Avg_OutOfStock_Compliance_str', 'min_Avg_OutOfStock_Compliance', number_to_string('min_Avg_OutOfStock_Compliance', \"##0.00\") as 'min_Avg_OutOfStock_Compliance_str', 'avg_Avg_OutOfStock_Compliance', number_to_string('avg_Avg_OutOfStock_Compliance', \"##0.00\") as 'avg_Avg_OutOfStock_Compliance_str', 'min_range', 'color';\r\ntotal_oos = order total_oos by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 100,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "Avg_OutOfStock_Compliance"
              ]
            },
            "high" : 66,
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Assortment_Assortmen_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_OrderItem36_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Assortment_AssortmentProduct_Assortment_Name"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Product_Family_1",
            "Name_2",
            "Name_1",
            "Current_Period_1"
          ]
        },
        "selectMode" : "multi",
        "start" : [ ],
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "Promotion_Final_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Promotion_Final",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nq =  filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [dateRange([1970,01,01], {{cell(date_parser_2.result, 0, \"Date_Max\").asString()}})] and date('EndDate_Computed_Year', 'EndDate_Computed_Month', 'EndDate_Computed_Day') in [dateRange({{cell(date_parser_2.result, 0, \"Date_Min\").asString()}}, [2100,12,31])];\r\nq = filter q by 'PromotionId' in {{coalesce(column(PromoChannel_Combine_1.result, [\"PromotionId\"]),toArray(\"NA\")).asString()}};\r\nq1 = group q by ('StartDate', 'StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion_Name', 'Id');\r\nq1 = foreach q1 generate 'Id', 'Promotion_Name', 'StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Year', 'StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Week', count(q) as 'A', date_to_epoch(toDate('StartDate' + \" 00:00:00\")) as Start, string_to_number(StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}} + StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}) as 'StartYearWeek';\r\nq2 = group q by ('EndDate_Computed', 'EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion_Name', 'Id');\r\nq2 = foreach q2 generate 'Id', 'Promotion_Name','EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Year', 'EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Week', count() as 'A', date_to_epoch(toDate('EndDate_Computed' + \" 00:00:00\")) as End, string_to_number(EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}} + EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}) as 'EndYearWeek';\r\nq = union q1,q2;\r\nq = group q by ('Id', 'Promotion_Name', 'Year', 'Week');\r\nq = foreach q generate 'Id'+\"_\"+'Promotion_Name' as 'Key','Id', 'Promotion_Name', 'Year', 'Week', sum('A') as 'A', sum(Start) as Start, sum(End) as End, sum('StartYearWeek') as 'StartYearWeek', sum('EndYearWeek') as 'EndYearWeek';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"), partition = 'Key');\r\nq = group q by ('Key', 'Year', 'Week');\r\nq = foreach q generate substr('Key',index_of('Key',\"_\")+1) as 'Promotion_Name_New', 'Year', 'Week', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', coalesce(sum(A) , sum(sum('A')) over([..-1] partition by ('Key') order by ('Year', 'Week')),0) as 'Value', toString(toDate(max(sum('Start')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as Start, toString(toDate(max(sum('End')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as End, string_to_number('Year'+'Week') as 'YearWeek_filter',\r\n\r\nmax(sum('StartYearWeek')) over ([..] partition by 'Key') as 'StartYearWeek', max(sum('EndYearWeek')) over ([..] partition by 'Key') as 'EndYearWeek', case when string_to_number('Year'+'Week') <= max(sum('EndYearWeek')) over ([..] partition by 'Key') and string_to_number('Year'+'Week') >= max(sum('StartYearWeek')) over ([..] partition by 'Key') then 1 else 0 end as 'Promotion_Period_Filter_Flag';\r\nq = filter q by 'Promotion_Period_Filter_Flag' == 1;\r\nq = filter q by 'YearWeek_filter' >= string_to_number(\"{{cell(date_parser_2.result, 0, \"min_YearWeek\").asString()}}\") and 'YearWeek_filter' <= string_to_number(\"{{cell(date_parser_2.result, 0, \"max_YearWeek\").asString()}}\");\r\nq = foreach q generate 'Promotion_Name_New', 'Year', 'Week', 'Value', 'Start' as 'Start', 'End' as 'End';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"));\r\nq = group q by ('Promotion_Name_New', 'Year', 'Week', 'Start', 'End');\r\nq = foreach q generate 'Promotion_Name_New' as 'Promotion Name', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', sum('Value') as 'Value', 'Start' as 'Start Date', 'End' as 'End Date';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "highColor" : "#009DDF",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "lowColor" : "#E2F4FC",
            "visualizationType" : "heatmap",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "columnMap" : {
              "color" : [
                "Value"
              ],
              "x" : [
                "Year~~~Week"
              ],
              "y" : [
                "Promotion Name"
              ]
            },
            "showActionMenu" : true,
            "x" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "y" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Promotion_Final_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Promotion_Final",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nq =  filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [dateRange([1970,01,01], {{cell(date_parser_2.result, 0, \"Date_Max\").asString()}})] and date('EndDate_Computed_Year', 'EndDate_Computed_Month', 'EndDate_Computed_Day') in [dateRange({{cell(date_parser_2.result, 0, \"Date_Min\").asString()}}, [2100,12,31])];\r\nq = filter q by 'PromotionId' in {{coalesce(column(PromoChannel_Combine_2.result, [\"PromotionId\"]),toArray(\"NA\")).asString()}};\r\nq1 = group q by ('StartDate', 'StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion_Name', 'Id');\r\nq1 = foreach q1 generate 'Id', 'Promotion_Name', 'StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Year', 'StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Week', count(q) as 'A', date_to_epoch(toDate('StartDate' + \" 00:00:00\")) as Start, string_to_number(StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}} + StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}) as 'StartYearWeek';\r\nq2 = group q by ('EndDate_Computed', 'EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion_Name', 'Id');\r\nq2 = foreach q2 generate 'Id', 'Promotion_Name','EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Year', 'EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Week', count() as 'A', date_to_epoch(toDate('EndDate_Computed' + \" 00:00:00\")) as End, string_to_number(EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}} + EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}) as 'EndYearWeek';\r\nq = union q1,q2;\r\nq = group q by ('Id', 'Promotion_Name', 'Year', 'Week');\r\nq = foreach q generate 'Id'+\"_\"+'Promotion_Name' as 'Key','Id', 'Promotion_Name', 'Year', 'Week', sum('A') as 'A', sum(Start) as Start, sum(End) as End, sum('StartYearWeek') as 'StartYearWeek', sum('EndYearWeek') as 'EndYearWeek';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"), partition = 'Key');\r\nq = group q by ('Key', 'Year', 'Week');\r\nq = foreach q generate substr('Key',index_of('Key',\"_\")+1) as 'Promotion_Name_New', 'Year', 'Week', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', coalesce(sum(A) , sum(sum('A')) over([..-1] partition by ('Key') order by ('Year', 'Week')),0) as 'Value', toString(toDate(max(sum('Start')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as Start, toString(toDate(max(sum('End')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as End, string_to_number('Year'+'Week') as 'YearWeek_filter',\r\n\r\nmax(sum('StartYearWeek')) over ([..] partition by 'Key') as 'StartYearWeek', max(sum('EndYearWeek')) over ([..] partition by 'Key') as 'EndYearWeek', case when string_to_number('Year'+'Week') <= max(sum('EndYearWeek')) over ([..] partition by 'Key') and string_to_number('Year'+'Week') >= max(sum('StartYearWeek')) over ([..] partition by 'Key') then 1 else 0 end as 'Promotion_Period_Filter_Flag';\r\nq = filter q by 'Promotion_Period_Filter_Flag' == 1;\r\nq = filter q by 'YearWeek_filter' >= string_to_number(\"{{cell(date_parser_2.result, 0, \"min_YearWeek\").asString()}}\") and 'YearWeek_filter' <= string_to_number(\"{{cell(date_parser_2.result, 0, \"max_YearWeek\").asString()}}\");\r\nq = foreach q generate 'Promotion_Name_New', 'Year', 'Week', 'Value', 'Start' as 'Start', 'End' as 'End';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"));\r\nq = group q by ('Promotion_Name_New', 'Year', 'Week', 'Start', 'End');\r\nq = foreach q generate 'Promotion_Name_New' as 'Promotion Name', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', sum('Value') as 'Value', 'Start' as 'Start Date', 'End' as 'End Date';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "singlerequired",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "highColor" : "#009DDF",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "lowColor" : "#E2F4FC",
            "visualizationType" : "heatmap",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "columnMap" : {
              "color" : [
                "Value"
              ],
              "x" : [
                "Year~~~Week"
              ],
              "y" : [
                "Promotion Name"
              ]
            },
            "showActionMenu" : true,
            "x" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "y" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Current_Period_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_Visit36_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "PlannedVisitStartTime"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "start" : [
          [
            [
              "year",
              0
            ],
            [
              "year",
              0
            ]
          ]
        ],
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "Promotion_Final_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Promotion_Final",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nq =  filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [..\"current day\"] and date('EndDate_Computed_Year', 'EndDate_Computed_Month', 'EndDate_Computed_Day') in [\"180 days ago\"..];\r\nq = filter q by 'PromotionId' in {{coalesce(column(PromoChannel_Combine_3.result, [\"PromotionId\"]),toArray(\"NA\")).asString()}};\r\nq1 = group q by ('StartDate', 'StartDate_Year', 'StartDate_Quarter', 'StartDate_Month', 'StartDate_Week', 'StartDate_Day', 'Promotion_Name', 'Id');\r\nq1 = foreach q1 generate 'Id', 'Promotion_Name', 'StartDate_Year' as 'Year','StartDate_Quarter' as 'Quarter', 'StartDate_Week' as 'Week', 'StartDate_Month' as 'Month', 'StartDate_Day' as 'Day', count(q) as 'A', date_to_epoch(toDate('StartDate' + \" 00:00:00\")) as Start, string_to_number(StartDate_Year+StartDate_Week) as 'StartYearWeek';\r\nq2 = group q by ('EndDate_Computed', 'EndDate_Computed_Year', 'EndDate_Computed_Quarter', 'EndDate_Computed_Month', 'EndDate_Computed_Week', 'EndDate_Computed_Day', 'Promotion_Name', 'Id');\r\nq2 = foreach q2 generate 'Id', 'Promotion_Name','EndDate_Computed_Year' as 'Year','EndDate_Computed_Quarter' as 'Quarter', 'EndDate_Computed_Month' as 'Month', 'EndDate_Computed_Week' as 'Week', 'EndDate_Computed_Day' as 'Day', count() as 'A', date_to_epoch(toDate('EndDate_Computed' + \" 00:00:00\")) as End, string_to_number(EndDate_Computed_Year+EndDate_Computed_Week) as 'EndYearWeek';\r\nq = union q1,q2;\r\nq = group q by ('Id', 'Promotion_Name', 'Year','Quarter', 'Month', 'Week', 'Day');\r\nq = foreach q generate 'Id'+\"_\"+'Promotion_Name' as 'Key','Id', 'Promotion_Name', 'Year','Quarter', 'Month', 'Week', 'Day',sum('A') as 'A', sum(Start) as Start, sum(End) as End, sum('StartYearWeek') as 'StartYearWeek', sum('EndYearWeek') as 'EndYearWeek';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"), partition = 'Key');\r\nq = group q by ('Key', 'Year', 'Week');\r\nq = foreach q generate substr('Key',index_of('Key',\"_\")+1) as 'Promotion_Name_New',  'Year', 'Week', coalesce(sum(A) , sum(sum('A')) over([..-1] partition by ('Key') order by ('Year', 'Week'))) as 'Value', toString(toDate(max(sum('Start')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as Start, toString(toDate(max(sum('End')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as End, string_to_number('Year'+'Week') as 'YearWeek_filter',\r\n\r\nmax(sum('StartYearWeek')) over ([..] partition by 'Key') as 'StartYearWeek', max(sum('EndYearWeek')) over ([..] partition by 'Key') as 'EndYearWeek', case when string_to_number('Year'+'Week') <= max(sum('EndYearWeek')) over ([..] partition by 'Key') and string_to_number('Year'+'Week') >= max(sum('StartYearWeek')) over ([..] partition by 'Key') then 1 else 0 end as 'Promotion_Period_Filter_Flag';\r\nq = filter q by 'Promotion_Period_Filter_Flag' == 1;\r\nq = filter q by 'YearWeek_filter' >= string_to_number(\"{{cell(date_parser_2.result, 0, \"180days_prior_yrweek\").asString()}}\") and 'YearWeek_filter' <= string_to_number(\"{{cell(date_parser_2.result, 0, \"yrweek_now\").asString()}}\");\r\nq = foreach q generate 'Promotion_Name_New', 'Year', 'Week', 'Value', 'Start' as 'Start', 'End' as 'End';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"));\r\nq = group q by ('Promotion_Name_New', 'Year', 'Week', 'Start', 'End');\r\nq = foreach q generate 'Promotion_Name_New' as 'Promotion Name', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', sum('Value') as 'Value', 'Start' as 'Start Date', 'End' as 'End Date';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "singlerequired",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "highColor" : "#009DDF",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "lowColor" : "#E2F4FC",
            "visualizationType" : "heatmap",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "columnMap" : {
              "color" : [
                "Value"
              ],
              "x" : [
                "Year~~~Week"
              ],
              "y" : [
                "Promotion Name"
              ]
            },
            "showActionMenu" : true,
            "x" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "y" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Product_Trend__1_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Product_Trend__1",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store_A = filter retail_store by date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day') in [\"current year\"..\"current year\"];\r\nretail_store_B = filter retail_store by date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day') in [\"1 year ago\"..\"1 year ago\"];\r\nretail_store = group retail_store_A by ('CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full, retail_store_B by ('CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate coalesce(retail_store_A.'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', retail_store_B.'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}')  as 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\n\r\n--OutOfStockOccurences--\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\noos = filter retail by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter oos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"current year\"..\"current year\"];\r\noos_B = filter oos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"1 year ago\"..\"1 year ago\"];\r\noos = group oos_A by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name') full, oos_B by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\noos = foreach oos generate coalesce(oos_A.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', oos_B.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}')  as 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce(oos_A.'AssessmentTask_Visit_RetailStore_Name', oos_A.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(oos_A.'Compliance_Percentage') as 'current_out_of_stock', avg(oos_B.'Compliance_Percentage') as 'compared_out_of_stock';\r\noos = group oos by 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\noos = foreach oos generate 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_out_of_stock') as 'current_out_of_stock', avg('compared_out_of_stock') as 'compared_out_of_stock';\r\n\r\n--Revenue--\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nsales_A = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"current year\"..\"current year\"];\r\nsales_B = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"1 year ago\"..\"1 year ago\"];\r\ntotal_sale = group sales_A by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full, sales_B by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sales_B.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'compared_sales';\r\n\r\n--Quantity--\r\nqty_A = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"current year\"..\"current year\"];\r\nqty_B = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"1 year ago\"..\"1 year ago\"];\r\ntotal_qty = group qty_A by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full, qty_B by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_qty = foreach total_qty generate coalesce(qty_A.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', qty_B.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum(qty_A.'Quantity') as 'current_quantity', sum(qty_B.'Quantity') as 'compared_quantity';\r\n\r\n--AvgOrderValue--\r\nordval_A = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"current year\"..\"current year\"];\r\nordval_B = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"1 year ago\"..\"1 year ago\"];\r\ntotal_ordval = group ordval_A by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full, ordval_B by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_ordval = foreach total_ordval generate coalesce(ordval_A.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', ordval_B.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (sum(ordval_A.'TotalPrice')/unique(ordval_A.'OrderId')) as 'current_avg_order_value', (sum(ordval_B.'TotalPrice')/unique(ordval_B.'OrderId')) as 'compared_avg_order_value';\r\n\r\n--AvgWeeklyRevenue--\r\nweekrev_A = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"current year\"..\"current year\"];\r\nweekrev_B = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"1 year ago\"..\"1 year ago\"];\r\ntotal_weekrev = group weekrev_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full, weekrev_B by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_weekrev = foreach total_weekrev generate coalesce(weekrev_A.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', weekrev_B.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce(weekrev_A.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', weekrev_B.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum(weekrev_A.'TotalPrice') as 'current_sales', sum(weekrev_B.'TotalPrice') as 'compared_sales', weekrev_A.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + weekrev_A.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'CurrentPeriod_YearWeek', weekrev_B.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + weekrev_B.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ComparedPeriod_YearWeek';\r\ntotal_weekrev = group total_weekrev by 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_weekrev = foreach total_weekrev generate 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (sum('current_sales')/unique('CurrentPeriod_YearWeek')) as 'current_avg_week_revenue', (sum('compared_sales')/unique('ComparedPeriod_YearWeek')) as 'compared_avg_week_revenue';\r\n\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"current year\"..\"current year\"];\r\ncomp_B = filter comp by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"1 year ago\"..\"1 year ago\"];\r\ntotal_comp = group comp_A by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', comp_B.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'compared_comp';\r\ntotal_comp = group total_comp by 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_comp') as 'current_comp', avg('compared_comp') as 'compared_comp';\r\n\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"current year\"..\"current year\"];\r\npromo_B = filter promo by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"1 year ago\"..\"1 year ago\"];\r\npromo = group promo_A by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate coalesce(promo_A.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', promo_B.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'compared_promo';\r\npromo = group promo by 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\npromo = foreach promo generate 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_promo') as 'current_promo', avg('compared_promo') as 'compared_promo';\r\n\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"current year\"..\"current year\"];\r\nfcs_B = filter fcs by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"1 year ago\"..\"1 year ago\"];\r\ntotal_fcs = group fcs_A by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', fcs_B.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'compared_fcs';\r\ntotal_fcs = group total_fcs by 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_fcs') as 'current_fcs', avg('compared_fcs') as 'compared_fcs';\r\n\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"current year\"..\"current year\"];\r\nsos_B = filter sos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"1 year ago\"..\"1 year ago\"];\r\ntotal_sos = group sos_A by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sos_B.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'compared_sos';\r\ntotal_sos = group total_sos by 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_sos') as 'current_sos', avg('compared_sos') as 'compared_sos';\r\n\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"current year\"..\"current year\"];\r\ninv_B = filter inv by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"1 year ago\"..\"1 year ago\"];\r\ntotal_inv = group inv_A by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name') full, inv_B by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate coalesce(inv_A.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', inv_B.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce(inv_A.'AssessmentTask_Visit_RetailStore_Name', inv_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(inv_A.'Compliance_Percentage') as 'current_inventory', avg(inv_B.'Compliance_Percentage') as 'compared_inventory';\r\ntotal_inv = group total_inv by 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_inventory') as 'current_inventory', avg('compared_inventory') as 'compared_inventory';\r\n\r\n---Decline in StoreCoverage\r\nstore_orders_A = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"current year\"..\"current year\"];\r\nstore_orders_B = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"1 year ago\"..\"1 year ago\"];\r\nstore_orders = group store_orders_A by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full, store_orders_B by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nstore_orders = foreach store_orders generate coalesce(store_orders_A.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', store_orders_B.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (unique(store_orders_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage', (unique(store_orders_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'compared_store_coverage';\r\nstore_orders = foreach store_orders generate 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'current_store_coverage', 'compared_store_coverage';\r\n\r\n--Metric_multidatset---\r\nfinal_table = cogroup\r\n             retail_store by 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             total_sale by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_qty by  ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_ordval  by  ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_weekrev by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             oos by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_comp by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             promo by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_fcs by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_sos by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_inv by ('ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             store_orders by ('Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nfinal_table = foreach final_table generate coalesce(retail_store.'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',total_sale.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_qty.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_ordval.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_weekrev.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',  oos.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_comp.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', promo.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_fcs.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_sos.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_inv.'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', store_orders.'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}')  as \r\n'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n\r\nsum(total_sale.'current_sales') as 'total_sales',\r\nsum(total_sale.'compared_sales') as 'compared_sales', \r\nsum(total_qty.'current_quantity') as 'total_qty',\r\nsum(total_qty.'compared_quantity') as 'compared_quantity',  \r\nsum(total_ordval.'current_avg_order_value') as 'avg_order_value', \r\nsum(total_ordval.'compared_avg_order_value') as 'compared_avg_order_value',\r\nsum(total_weekrev.'current_avg_week_revenue') as 'avg_weekly_revenue',\r\nsum(total_weekrev.'compared_avg_week_revenue') as 'compared_avg_week_revenue',  \r\navg(oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance', \r\navg(oos.'compared_out_of_stock') as 'compared_out_of_stock', \r\nsum(total_comp.'current_comp') as 'Avg_CompliancePercentage', \r\nsum(total_comp.'compared_comp') as 'compared_comp', \r\nsum(promo.'current_promo') as 'Avg_PromoCompliance_Percentage',\r\nsum(promo.'compared_promo') as 'compared_promo', \r\nsum(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\nsum(total_fcs.'compared_fcs') as 'compared_fcs', \r\nsum(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage',\r\nsum(total_sos.'compared_sos') as 'compared_sos',  \r\nsum(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage', \r\nsum(total_inv.'compared_inventory') as 'compared_inventory',\r\nsum(store_orders.'current_store_coverage') as 'store_coverage',\r\nsum(store_orders.'compared_store_coverage') as 'compared_store_coverage';\r\n--final_table = filter final_table by '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce('{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}',0) as '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}', coalesce('{{cell(static_10.selection,0,\"Field_Alias_trend\").asObject()}}',0) as '{{cell(static_10.selection,0,\"Field_Alias_trend\").asObject()}}';\r\nfinal_table = order final_table by 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "static_4" : {
        "broadcastFacet" : true,
        "columns" : {
          "refline_name_y" : {
            "type" : "string"
          },
          "Field_value_y" : {
            "type" : "string"
          },
          "Api_name_y" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Revenue"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Revenue",
            "Field_value_y" : "sum('total_sales')",
            "Api_name_y" : "total_sales",
            "refline_name_y" : "total_sales_refline"
          },
          {
            "Display" : "Quantity",
            "Field_value_y" : "sum('total_qty')",
            "Api_name_y" : "total_qty",
            "refline_name_y" : "total_qty_refline"
          },
          {
            "Display" : "Avg Order Value",
            "Field_value_y" : "sum('avg_order_value')",
            "Api_name_y" : "avg_order_value",
            "refline_name_y" : "avg_order_value_refline"
          },
          {
            "Display" : "Avg Weekly Revenue",
            "Field_value_y" : "sum('avg_weekly_revenue')",
            "Api_name_y" : "avg_weekly_revenue",
            "refline_name_y" : "avg_weekly_revenue_refline"
          }
        ]
      },
      "JoinType_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "JoinType",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_Product31_tp.FullyQualifiedName}\";\nq = group q by all;\nq = foreach q generate case when \"{{coalesce(cell(Name_1.selection, 0, \"Name\"), \"NA\").asString()}}\"==\"NA\" then \"full\" else \"left\" end as 'JoinType';\nq = limit q 1;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "OrderBy_Static_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "OrderBy" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "OrderBy Static",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "High Performing"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "High Performing",
            "OrderBy" : "desc"
          },
          {
            "Display" : "Low Performing",
            "OrderBy" : "asc"
          }
        ]
      },
      "JoinType_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "JoinType",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_Product31_tp.FullyQualifiedName}\";\r\nq = group q by all;\r\nq = foreach q generate case when \"{{coalesce(cell(Name_1.selection, 0, \"Name\"), \"NA\").asString()}}\"==\"NA\" and \"{{coalesce(cell(lens_3_2.selection, 0, \"Product_Name_Custom\"), \"NA\").asString()}}\"==\"NA\" then \"full\" else \"left\" end as 'JoinType';\r\nq = limit q 1;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "MasterTable_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "MasterTable",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate  first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\ncomp_result = foreach comp_result generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\norder1 = group order1 by ( 'Product_Name', 'OrderId','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate  first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', 'Product_Name', 'OrderId', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ( 'Product_ProductCategory_ProductCategory_Name', 'Product_Name');\r\norder1 = foreach order1 generate  'Product_ProductCategory_ProductCategory_Name', 'Product_Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = filter store_cv by 'Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nstore_cv = group store_cv by ( 'Product_Name');\r\nstore_cv = foreach store_cv generate  first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', 'Product_Name', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ( 'Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\nsos = foreach sos generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\noos_result = foreach oos_result generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n--FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\nfcs = foreach fcs generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\npromo = foreach promo generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate first('Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom');\r\ninv = foreach inv generate 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Product_ProductCategory_ProductCategory_Name', 'Product_Name') full, sos by ( 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, oos_result by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, comp_result by ('Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, fcs by ( 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, promo by ( 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, inv by ( 'Product_ProductCategory_ProductCategory_Name','Product_Name_Custom') full, store_cv by ( 'Product_ProductCategory_ProductCategory_Name', 'Product_Name');\r\nfinal_table = foreach final_table generate\r\n\r\ncoalesce(order1.'Product_Name', comp_result.'Product_Name_Custom', sos.'Product_Name_Custom',oos_result.'Product_Name_Custom', fcs.'Product_Name_Custom', promo.'Product_Name_Custom', inv.'Product_Name_Custom', store_cv.'Product_Name') as 'Product',\r\n\r\ncoalesce(order1.'Product_ProductCategory_ProductCategory_Name', comp_result.'Product_ProductCategory_ProductCategory_Name', sos.'Product_ProductCategory_ProductCategory_Name',oos_result.'Product_ProductCategory_ProductCategory_Name', fcs.'Product_ProductCategory_ProductCategory_Name', promo.'Product_ProductCategory_ProductCategory_Name', inv.'Product_ProductCategory_ProductCategory_Name', store_cv.'Product_ProductCategory_ProductCategory_Name') as 'Product Category', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage';",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "radiusRatio" : 5,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "visualizationType" : "scatter",
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "MasterTable_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "MasterTable",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by ('ProductCategory_Name_Custom');\r\ncomp_result = foreach comp_result generate 'ProductCategory_Name_Custom', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Product_ProductCategory_ProductCategory_Name'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\norder1 = group order1 by ( 'Product_ProductCategory_ProductCategory_Name', 'OrderId','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate  'Product_ProductCategory_ProductCategory_Name', 'OrderId', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ( 'Product_ProductCategory_ProductCategory_Name');\r\norder1 = foreach order1 generate  'Product_ProductCategory_ProductCategory_Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = filter store_cv by 'Product_ProductCategory_ProductCategory_Name'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nstore_cv = group store_cv by ( 'Product_ProductCategory_ProductCategory_Name');\r\nstore_cv = foreach store_cv generate  'Product_ProductCategory_ProductCategory_Name', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('ProductCategory_Name_Custom');\r\nsos = foreach sos generate 'ProductCategory_Name_Custom', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate 'ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by ('ProductCategory_Name_Custom');\r\noos_result = foreach oos_result generate 'ProductCategory_Name_Custom', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n--FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('ProductCategory_Name_Custom');\r\nfcs = foreach fcs generate 'ProductCategory_Name_Custom', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('ProductCategory_Name_Custom');\r\npromo = foreach promo generate 'ProductCategory_Name_Custom', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('ProductCategory_Name_Custom');\r\ninv = foreach inv generate 'ProductCategory_Name_Custom', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ( 'Product_ProductCategory_ProductCategory_Name') full, sos by ('ProductCategory_Name_Custom') full, oos_result by ('ProductCategory_Name_Custom') full, comp_result by ('ProductCategory_Name_Custom') full, fcs by ('ProductCategory_Name_Custom') full, promo by ('ProductCategory_Name_Custom') full, inv by ('ProductCategory_Name_Custom') full, store_cv by ('Product_ProductCategory_ProductCategory_Name');\r\n\r\nfinal_table = foreach final_table generate\r\n\r\ncoalesce(order1.'Product_ProductCategory_ProductCategory_Name', comp_result.'ProductCategory_Name_Custom', sos.'ProductCategory_Name_Custom',oos_result.'ProductCategory_Name_Custom', fcs.'ProductCategory_Name_Custom', promo.'ProductCategory_Name_Custom', inv.'ProductCategory_Name_Custom', store_cv.'Product_ProductCategory_ProductCategory_Name') as 'ProductCategory_Name_Custom', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage';",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "radiusRatio" : 5,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "visualizationType" : "scatter",
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "static_7" : {
        "broadcastFacet" : true,
        "columns" : {
          "min" : {
            "type" : "number"
          },
          "max" : {
            "type" : "number"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Top 20%"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Top 20%",
            "min" : 0,
            "max" : 0.2
          },
          {
            "Display" : "20% - 80%",
            "min" : 0.2,
            "max" : 0.8
          },
          {
            "Display" : "Bottom 20%",
            "min" : 0.8,
            "max" : 1
          }
        ]
      },
      "static_5" : {
        "broadcastFacet" : true,
        "columns" : {
          "Api_name_x" : {
            "type" : "string"
          },
          "Field_value_x" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Avg Store Compliance"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Avg Store Compliance",
            "Field_value_x" : "avg('Avg_CompliancePercentage')",
            "Api_name_x" : "Avg_CompliancePercentage"
          },
          {
            "Display" : "Store Coverage",
            "Field_value_x" : "sum('store_coverage')",
            "Api_name_x" : "store_coverage"
          },
          {
            "Display" : "Avg Out-of-Stock Compliance",
            "Field_value_x" : "avg('Avg_OutOfStock_Compliance')",
            "Api_name_x" : "Avg_OutOfStock_Compliance"
          },
          {
            "Display" : "Avg Promotion Compliance",
            "Field_value_x" : "avg('Avg_PromoCompliance_Percentage')",
            "Api_name_x" : "Avg_PromoCompliance_Percentage"
          },
          {
            "Display" : "Avg Share-of-Shelf Compliance",
            "Field_value_x" : "avg('Avg_SoSCompliance_Percentage')",
            "Api_name_x" : "Avg_SoSCompliance_Percentage"
          },
          {
            "Display" : "Avg Facing Compliance",
            "Field_value_x" : "avg('Avg_FacingsCompliance_Percentage')",
            "Api_name_x" : "Avg_FacingsCompliance_Percentage"
          },
          {
            "Display" : "Avg Inventory Compliance",
            "Field_value_x" : "avg('Avg_InventoryCompliance_Percentage')",
            "Api_name_x" : "Avg_InventoryCompliance_Percentage"
          }
        ]
      },
      "Store_Coverage_Gauge_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Store_Coverage_Gauge",
        "numbers" : [ ],
        "query" : "str_coverage = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstr_coverage_A = filter str_coverage by 'Product_Name' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nstr_coverage_A = group str_coverage_A by 'Product_Name';\r\nstr_coverage_A = foreach str_coverage_A generate 'Product_Name' as 'Product', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage', \"select\" as 'text', \"A\" as 'order';\r\ncoverage = group str_coverage by 'Product_Name';\r\ncoverage = foreach coverage generate 'Product_Name', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\nstr_coverage_B = foreach coverage generate 'Product_Name' as 'Product', 'store_coverage' as 'max_store_coverage', \"max\" as 'text', \"B\" as 'order';\r\nstr_coverage_B = order str_coverage_B by 'max_store_coverage' desc;\r\nstr_coverage_B = limit str_coverage_B 1;\r\nstr_coverage_C = foreach coverage generate 'Product_Name' as 'Product', 'store_coverage' as 'min_store_coverage', \"min\" as 'text', \"C\" as 'order';\r\nstr_coverage_C = order str_coverage_C by 'min_store_coverage' asc;\r\nstr_coverage_C = limit str_coverage_C 1;\r\nstr_coverage_D = group coverage by 'Product_Name';\r\nstr_coverage_D = foreach str_coverage_D generate 'Product_Name' as 'Product', avg(sum('store_coverage')) over([..] partition by all) as 'avg_store_coverage', \"avg\" as 'text', \"D\" as 'order';\r\nstr_coverage_D = limit str_coverage_D 1;\r\ntotal_coverage = cogroup str_coverage_A by ('Product', 'order') full, str_coverage_B by ('Product', 'order') full, str_coverage_C by ('Product', 'order') full, str_coverage_D by ('Product', 'order');\r\ntotal_coverage = foreach total_coverage generate coalesce(str_coverage_A.'Product', str_coverage_B.'Product', str_coverage_C.'Product', str_coverage_D.'Product') as 'Product', coalesce(str_coverage_A.'order', str_coverage_B.'order', str_coverage_C.'order', str_coverage_D.'order') as 'order', sum(str_coverage_A.'store_coverage') as 'store_coverage', coalesce(sum(str_coverage_A.'store_coverage'),0) as 'store_coverage_coalesced', coalesce(sum(str_coverage_B.'max_store_coverage'),0) as 'max_store_coverage', coalesce(sum(str_coverage_C.'min_store_coverage'),0) as 'min_store_coverage', sum(str_coverage_D.'avg_store_coverage') as 'avg_store_coverage';\r\ntotal_coverage = group total_coverage by ('Product', 'order');\r\ntotal_coverage = foreach total_coverage generate 'Product', 'order', sum('store_coverage') as 'store_coverage', sum('max_store_coverage') as 'max_store_coverage', sum('avg_store_coverage') as 'avg_store_coverage', sum('min_store_coverage') as 'min_store_coverage', (case when sum(sum('max_store_coverage')) over([..] partition by all) == sum(sum('min_store_coverage')) over([..] partition by all) then  0 else sum('min_store_coverage') end) as 'min_range', (case when sum(sum('store_coverage_coalesced')) over([..] partition by all) >= sum(sum('avg_store_coverage')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\ntotal_coverage = foreach total_coverage generate 'Product', 'order', 'store_coverage', 'max_store_coverage', number_to_string(('max_store_coverage'*100), \"##0.00\") as 'max_store_coverage_str', 'min_store_coverage', number_to_string(('min_store_coverage'*100), \"##0.00\") as 'min_store_coverage_str', 'avg_store_coverage', number_to_string(('avg_store_coverage'*100), \"##0.00\") as 'avg_store_coverage_str', 'min_range', 'color';\r\ntotal_coverage = order total_coverage by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 1.0E8,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                150,
                80
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "high" : 66,
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "store_coverage"
              ]
            },
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_5" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Revenue_Gauge",
        "numbers" : [ ],
        "query" : "total_sale = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\ntotal_sale_A = filter total_sale by 'Product_Name' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ntotal_sale_A = group total_sale_A by 'Product_Name';\r\ntotal_sale_A = foreach total_sale_A generate 'Product_Name' as 'Product', sum('TotalPrice') as 'TotalPrice', \"select\" as 'text', \"A\" as 'order';\r\ntotal_sale_B = group total_sale by 'Product_Name';\r\ntotal_sale_B = foreach total_sale_B generate 'Product_Name' as 'Product', sum('TotalPrice') as 'max_TotalPrice', \"max\" as 'text', \"B\" as 'order';\r\ntotal_sale_B = order total_sale_B by 'max_TotalPrice' desc;\r\ntotal_sale_B = limit total_sale_B 1;\r\ntotal_sale_C = group total_sale by 'Product_Name';\r\ntotal_sale_C = foreach total_sale_C generate 'Product_Name' as 'Product', sum('TotalPrice') as 'min_TotalPrice', \"min\" as 'text', \"C\" as 'order';\r\ntotal_sale_C = order total_sale_C by 'min_TotalPrice' asc;\r\ntotal_sale_C = limit total_sale_C 1;\r\ntotal_sale_D = group total_sale by 'Product_Name';\r\ntotal_sale_D = foreach total_sale_D generate 'Product_Name' as 'Product', avg(sum('TotalPrice')) over([..] partition by all) as 'avg_TotalPrice', \"avg\" as 'text', \"D\" as 'order';\r\ntotal_sale_D = limit total_sale_D 1;\r\nsales = cogroup total_sale_A by ('Product', 'order') full, total_sale_B by ('Product', 'order') full, total_sale_C by ('Product', 'order') full, total_sale_D by ('Product', 'order');\r\nsales = foreach sales generate coalesce(total_sale_A.'Product', total_sale_B.'Product', total_sale_C.'Product', total_sale_D.'Product') as 'Product', coalesce(total_sale_A.'order', total_sale_B.'order', total_sale_C.'order', total_sale_D.'order') as 'order', sum(total_sale_A.'TotalPrice') as 'TotalPrice', coalesce(sum(total_sale_A.'TotalPrice'),0) as 'TotalPrice_coalesced', coalesce(sum(total_sale_B.'max_TotalPrice'),0) as 'max_TotalPrice', coalesce(sum(total_sale_C.'min_TotalPrice'),0) as 'min_TotalPrice', coalesce(sum(total_sale_D.'avg_TotalPrice'),0) as 'avg_TotalPrice';\r\nsales = group sales by ('Product', 'order');\r\nsales = foreach sales generate 'Product', 'order', sum('TotalPrice') as 'TotalPrice', sum('max_TotalPrice') as 'max_TotalPrice', sum('avg_TotalPrice') as 'avg_TotalPrice', sum('min_TotalPrice') as 'min_TotalPrice', (case when sum(sum('max_TotalPrice')) over([..] partition by all) == sum(sum('min_TotalPrice')) over([..] partition by all) then  0 else sum('min_TotalPrice') end) as 'min_range', (case when sum(sum('TotalPrice_coalesced')) over([..] partition by all) >= sum(sum('avg_TotalPrice')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\nsales = foreach sales generate 'Product', 'order', 'TotalPrice', 'max_TotalPrice', number_to_string('max_TotalPrice', \"$#,####0.00\") as 'max_TotalPrice_str', 'min_TotalPrice', number_to_string('min_TotalPrice', \"$#,####0.00\") as 'min_TotalPrice_str', 'avg_TotalPrice', number_to_string('avg_TotalPrice', \"$#,####0.00\") as 'avg_TotalPrice_str', 'min_range', 'color';\r\nsales = order sales by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 1.0E8,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                150,
                80
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "high" : 66,
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "TotalPrice"
              ]
            },
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "JoinType_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "JoinType",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_Product31_tp.FullyQualifiedName}\";\r\nq = group q by all;\r\nq = foreach q generate case when \"{{coalesce(cell(Name_1.selection, 0, \"Name\"), \"NA\").asString()}}\"==\"NA\" and \"{{coalesce(cell(new_launched_prod_py_1.selection, 0, \"Product_Name\"), \"NA\").asString()}}\"==\"NA\" then \"full\" else \"left\" end as 'JoinType';\r\nq = limit q 1;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "lens_3",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = filter retail_store by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day')\")}};\r\nretail_store = group retail_store by ('CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\n\r\n--Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\norder1 = filter order1 by 'Product_ProductCategory_ProductCategory_Name'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','OrderId');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}'+\"-\"+'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek', 'OrderId', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nfinal_table = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('Sales') as 'total_sales', sum('Quantity') as 'total_qty', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue';\r\n\r\n---Promotions---\r\nq = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nq =  filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [dateRange([1970,01,01], {{cell(date_parser_2.result, 0, \"Date_Max\").asString()}})] and date('EndDate_Computed_Year', 'EndDate_Computed_Month', 'EndDate_Computed_Day') in [dateRange({{cell(date_parser_2.result, 0, \"Date_Min\").asString()}}, [2100,12,31])];\r\nq = filter q by 'PromotionId' in {{coalesce(column(PromoChannel_Combine_1.result, [\"PromotionId\"]),toArray(\"NA\")).asString()}};\r\nq1 = group q by ('StartDate', 'StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion_Name', 'Id');\r\nq1 = foreach q1 generate 'Id', 'Promotion_Name', 'StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Year', 'StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Week', count(q) as 'A', date_to_epoch(toDate('StartDate' + \" 00:00:00\")) as Start, string_to_number(StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}} + StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}) as 'StartYearWeek';\r\nq2 = group q by ('EndDate_Computed', 'EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion_Name', 'Id');\r\nq2 = foreach q2 generate 'Id', 'Promotion_Name','EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Year', 'EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Week', count() as 'A', date_to_epoch(toDate('EndDate_Computed' + \" 00:00:00\")) as End, string_to_number(EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}} + EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}) as 'EndYearWeek';\r\nq = union q1,q2;\r\nq = group q by ('Id', 'Promotion_Name', 'Year', 'Week');\r\nq = foreach q generate 'Id'+\"_\"+'Promotion_Name' as 'Key','Id', 'Promotion_Name', 'Year', 'Week', sum('A') as 'A', sum(Start) as Start, sum(End) as End, sum('StartYearWeek') as 'StartYearWeek', sum('EndYearWeek') as 'EndYearWeek';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"), partition = 'Key');\r\nq = group q by ('Key', 'Year', 'Week');\r\nq = foreach q generate substr('Key',index_of('Key',\"_\")+1) as 'Promotion_Name_New', 'Year', 'Week', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', coalesce(sum(A) , sum(sum('A')) over([..-1] partition by ('Key') order by ('Year', 'Week')),0) as 'Value', toString(toDate(max(sum('Start')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as Start, toString(toDate(max(sum('End')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as End, string_to_number('Year'+'Week') as 'YearWeek_filter',\r\n\r\nmax(sum('StartYearWeek')) over ([..] partition by 'Key') as 'StartYearWeek', max(sum('EndYearWeek')) over ([..] partition by 'Key') as 'EndYearWeek', case when string_to_number('Year'+'Week') <= max(sum('EndYearWeek')) over ([..] partition by 'Key') and string_to_number('Year'+'Week') >= max(sum('StartYearWeek')) over ([..] partition by 'Key') then 1 else 0 end as 'Promotion_Period_Filter_Flag';\r\nq = filter q by 'Promotion_Period_Filter_Flag' == 1;\r\nq = filter q by 'YearWeek_filter' >= string_to_number(\"{{cell(date_parser_2.result, 0, \"min_YearWeek\").asString()}}\") and 'YearWeek_filter' <= string_to_number(\"{{cell(date_parser_2.result, 0, \"max_YearWeek\").asString()}}\");\r\nq = foreach q generate 'Promotion_Name_New', 'Year', 'Week', 'Value', 'Start' as 'Start', 'End' as 'End';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"));\r\nq = group q by ('Promotion_Name_New', 'Year', 'Week', 'Start', 'End');\r\nq = foreach q generate 'Promotion_Name_New', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', sum('Value') as 'Value', 'Start' as 'Start', 'End' as 'End';\r\nq = filter q by 'Promotion_Name_New'==\"{{cell(Promotion_Final_1.selection, 0, \"Promotion Name\").asString()}}\";\r\nq = foreach q generate 'Promotion_Name_New' as 'Promotion Name', 'Year~~~Week', 'Value', 'Start' as 'Start', 'End' as 'End';\r\n\r\n---result_multidataset---\r\nresult = cogroup retail_store by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full, final_table by 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full, q by ('Year~~~Week');\r\nresult = foreach result generate coalesce(retail_store.'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', final_table.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', q.'Year~~~Week') as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', first(q.'Promotion Name') as 'Promotion Name', first(q.'Start') as 'Start', first(q.'End') as 'End',\r\n\r\nsum(final_table.'total_sales') as 'total_sales', sum(final_table.'total_qty') as 'total_qty', sum(final_table.'avg_order_value') as 'avg_order_value', sum(final_table.'avg_weekly_revenue') as 'avg_weekly_revenue', min(q.'Value') as 'Value';\r\nresult = filter result by '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}' is not null or 'Value' is not null;\r\nresult = foreach result generate 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion Name', 'Start' as 'Start Date', 'End' as 'End Date', coalesce('{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}',0) as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', coalesce('Value',0) as 'Promotion', case when 'Value'==1 then \"Promotion is running\" else \"Promotion has ended\" end as 'Promotion Status';\r\nresult = order result by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "Name_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_ProductCategory31_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Name"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Product_Family_1",
            "Assortment_Assortmen_2",
            "Name_1",
            "Current_Period_1"
          ]
        },
        "selectMode" : "multi",
        "start" : [ ],
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "Name_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_Product31_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Name"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Assortment_Assortmen_2",
            "Product_Family_1",
            "Name_2",
            "Current_Period_1"
          ]
        },
        "selectMode" : "multi",
        "start" : [ ],
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "lens_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "lens_1",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ProductCategory_Name_Custom' as 'Product_Category','AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by ('Product_Category');\r\ncomp_result = foreach comp_result generate 'Product_Category' as 'Product_Category', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = group order1 by ('Product_ProductCategory_ProductCategory_Name','OrderId','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Product_ProductCategory_ProductCategory_Name' as 'Product_Category', 'OrderId', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Product_Category');\r\norder1 = foreach order1 generate 'Product_Category', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = group store_cv by ('Product_ProductCategory_ProductCategory_Name');\r\nstore_cv = foreach store_cv generate 'Product_ProductCategory_ProductCategory_Name' as 'Product_Category', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('Product_Category');\r\nsos = foreach sos generate 'Product_Category', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate oos.'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by ('Product_Category');\r\noos_result = foreach oos_result generate 'Product_Category', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n\r\n--FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('ProductCategory_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('Product_Category');\r\nfcs = foreach fcs generate 'Product_Category', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('Product_Category');\r\npromo = foreach promo generate 'Product_Category', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'ProductCategory_Name_Custom' as 'Product_Category', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('Product_Category');\r\ninv = foreach inv generate 'Product_Category', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Product_Category') full, sos by ('Product_Category') full, oos_result by ('Product_Category') full, comp_result by ('Product_Category') full,fcs by ('Product_Category') full, promo by ('Product_Category') full, inv by ('Product_Category') full, store_cv by ('Product_Category');\r\n\r\nfinal_table = foreach final_table generate coalesce(order1.'Product_Category', comp_result.'Product_Category', sos.'Product_Category',oos_result.'Product_Category', fcs.'Product_Category', promo.'Product_Category', inv.'Product_Category', store_cv.'Product_Category') as 'Product_Category', sum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage';\r\n\r\nfinal_table = group final_table by 'Product_Category';\r\nfinal_table = foreach final_table generate 'Product_Category' as 'ProductCategory_Name_Custom', {{cell(static_4.selection,0,\"Field_value_y\").asObject()}}  as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', {{cell(static_5.selection,0,\"Field_value_x\").asObject()}}  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', dense_rank() over([..] partition by all order by coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0) desc) as 'rank_desc',count() as 'row_count';\r\n\r\nfinal_table = group final_table by ('ProductCategory_Name_Custom','row_count','rank_desc');\r\nfinal_table = foreach final_table generate 'ProductCategory_Name_Custom', coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0)  as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', coalesce({{cell(static_5.selection,0,\"Field_value_x\").asObject()}},0)  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', sum('row_count') over([..] partition by all) as 'prod_cat_count', 'rank_desc';\r\n\r\nfinal_table = foreach final_table generate 'ProductCategory_Name_Custom', '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', 'prod_cat_count',  'rank_desc', (case when 'prod_cat_count'>2 then round({{cell(static_7.selection, 0, \"max\").asObject()}}*'prod_cat_count') else ceil({{cell(static_7.selection, 0, \"max\").asObject()}}*'prod_cat_count') end) as 'final_limit_max', (case when 'prod_cat_count'>2 then round({{cell(static_7.selection, 0, \"min\").asObject()}}*'prod_cat_count') else ceil({{cell(static_7.selection, 0, \"min\").asObject()}}*'prod_cat_count') end) as 'final_limit_min';\r\n\r\nfinal_table = filter final_table by 'rank_desc'>'final_limit_min' and 'rank_desc'<='final_limit_max';\r\nfinal_table = foreach final_table generate 'ProductCategory_Name_Custom', '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}';\r\n\r\n--final_table = order final_table by 'ProductCategory_Name_Custom' desc;",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1",
            "Name_2"
          ]
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "radiusRatio" : 5,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "visualizationType" : "scatter",
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Avg_INV_compliance_g_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Avg_INV_compliance_gauge",
        "numbers" : [ ],
        "query" : "inv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv_A = filter inv by 'Product_Name_Custom' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ninv_A = filter inv_A by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = group inv_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv_A = foreach inv_A generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_inv';\r\ninv_A = group inv_A by 'Product_Name_Custom';\r\ninv_A = foreach inv_A generate 'Product_Name_Custom' as 'Product', avg('current_inv') as 'Avg_InventoryCompliance_Percentage', \"select\" as 'text', \"A\" as 'order';\r\ninventory = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninventory = group inventory by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ninventory = foreach inventory generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_inv';\r\ninventory = group inventory by 'Product_Name_Custom';\r\ninv_B = foreach inventory generate 'Product_Name_Custom' as 'Product', avg('current_inv') as 'max_Avg_InventoryCompliance_Percentage', \"max\" as 'text', \"B\" as 'order';\r\ninv_B = order inv_B by 'max_Avg_InventoryCompliance_Percentage' desc;\r\ninv_B = limit inv_B 1;\r\ninv_C = foreach inventory generate 'Product_Name_Custom' as 'Product', avg('current_inv') as 'min_Avg_InventoryCompliance_Percentage', \"min\" as 'text', \"C\" as 'order';\r\ninv_C = order inv_C by 'min_Avg_InventoryCompliance_Percentage' asc;\r\ninv_C = limit inv_C 1;\r\ninv_D = foreach inventory generate 'Product_Name_Custom' as 'Product', avg(avg('current_inv')) over([..] partition by all) as 'avg_Avg_InventoryCompliance_Percentage', \"avg\" as 'text', \"D\" as 'order';\r\ninv_D = limit inv_D 1;\r\ntotal_inv = cogroup inv_A by ('Product', 'order') full, inv_B by ('Product', 'order') full, inv_C by ('Product', 'order') full, inv_D by ('Product', 'order');\r\ntotal_inv = foreach total_inv generate coalesce(inv_A.'Product', inv_B.'Product', inv_C.'Product', inv_D.'Product') as 'Product', coalesce(inv_A.'order', inv_B.'order', inv_C.'order', inv_D.'order') as 'order', sum(inv_A.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', coalesce(sum(inv_A.'Avg_InventoryCompliance_Percentage'),0) as 'Avg_InventoryCompliance_Percentage_coalesced', coalesce(sum(inv_B.'max_Avg_InventoryCompliance_Percentage'), 0) as 'max_Avg_InventoryCompliance_Percentage', coalesce(sum(inv_C.'min_Avg_InventoryCompliance_Percentage'), 0) as 'min_Avg_InventoryCompliance_Percentage', sum(inv_D.'avg_Avg_InventoryCompliance_Percentage') as 'avg_Avg_InventoryCompliance_Percentage';\r\n\r\ntotal_inv = group total_inv by ('Product', 'order');\r\n\r\ntotal_inv = foreach total_inv generate 'Product', 'order', sum('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum('max_Avg_InventoryCompliance_Percentage') as 'max_Avg_InventoryCompliance_Percentage', sum('avg_Avg_InventoryCompliance_Percentage') as 'avg_Avg_InventoryCompliance_Percentage', sum('min_Avg_InventoryCompliance_Percentage') as 'min_Avg_InventoryCompliance_Percentage', (case when sum(sum('max_Avg_InventoryCompliance_Percentage')) over([..] partition by all) == sum(sum('min_Avg_InventoryCompliance_Percentage')) over([..] partition by all) then 0 else sum('min_Avg_InventoryCompliance_Percentage') end) as 'min_range', (case when sum(sum('Avg_InventoryCompliance_Percentage_coalesced')) over([..] partition by all) >= sum(sum('avg_Avg_InventoryCompliance_Percentage')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\n\r\ntotal_inv = foreach total_inv generate 'Product', 'order', 'Avg_InventoryCompliance_Percentage', 'max_Avg_InventoryCompliance_Percentage', number_to_string('max_Avg_InventoryCompliance_Percentage', \"##0.00\") as 'max_Avg_InventoryCompliance_Percentage_str', 'min_Avg_InventoryCompliance_Percentage', number_to_string('min_Avg_InventoryCompliance_Percentage', \"##0.00\") as 'min_Avg_InventoryCompliance_Percentage_str', 'avg_Avg_InventoryCompliance_Percentage', number_to_string('avg_Avg_InventoryCompliance_Percentage', \"##0.00\") as 'avg_Avg_InventoryCompliance_Percentage_str', 'min_range', 'color';\r\n\r\ntotal_inv = order total_inv by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 100,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "Avg_InventoryCompliance_Percentage"
              ]
            },
            "high" : 66,
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Comparative_Period_1" : {
        "broadcastFacet" : false,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_Visit36_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "PlannedVisitStartTime"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "singlerequired",
        "start" : [
          [
            [
              "year",
              -1
            ],
            [
              "year",
              -1
            ]
          ]
        ],
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "PromoChannel_Combine_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "PromoChannel_Combine",
        "numbers" : [ ],
        "query" : "-- Promotion Channel\r\nPC = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPC = filter PC by 'PromotionProduct_Product_Name' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nPC = group PC by ('PromotionId', 'RetailStore_Name');\r\nPC = foreach PC generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'Name' , count() as 'count';\r\n--Retail Store\r\nRS = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nRS = group RS by ('Promotion_Id', 'Name');\r\nRS = foreach RS generate 'Name' as 'Name', 'Promotion_Id' as 'PromotionId';\r\nresult = cogroup PC by ('PromotionId', 'Name'), RS by ('PromotionId', 'Name');\r\nresult = foreach result generate PC['PromotionId'] as 'PromotionId', PC['Name'] as 'RetailStoreName', sum(PC.'count') as 'count';\r\nresult = filter result by 'count' is not null;\r\n--PromotionChannel with Product grouping\r\nPromoChannel = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPromoChannel = filter PromoChannel by 'PromotionProduct_Product_Name' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nPromoChannel = group PromoChannel by ('PromotionId', 'RetailStore_Name', 'PromotionProduct_Product_Name');\r\nPromoChannel = foreach PromoChannel generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'PromotionProduct_Product_Name' as 'PromotionProduct_Product_Name', count() as 'count_PC';\r\n--StoreProduct with Product grouping\r\nStoreProduct = load \"${App.Datasets.CG_StoreProduct21_tp.FullyQualifiedName}\";\r\nStoreProduct = filter StoreProduct by 'Product_Name' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nStoreProduct = group StoreProduct by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'Product_Name');\r\nStoreProduct = foreach StoreProduct generate 'PromotionProduct_PromotionId' as 'PromotionProduct_PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'Product_Name' as 'Product_Name', count() as 'count_SP';\r\nresult1 = cogroup PromoChannel by ('PromotionId', 'RetailStore_Name', 'PromotionProduct_Product_Name'), StoreProduct by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'Product_Name');\r\nresult1 = foreach result1 generate coalesce(PromoChannel.'PromotionId', StoreProduct_'PromotionProduct_PromotionId') as 'PromotionId', coalesce(PromoChannel.'RetailStore_Name', StoreProduct_'RetailStore_Name') as 'RetailStoreName', coalesce(PromoChannel.'PromotionProduct_Product_Name', StoreProduct_'Product_Name') as 'Product_Name', sum(PromoChannel.'count_PC') as 'count_PC', sum(StoreProduct_'count_SP') as 'count_SP';\r\n--PromotionChannel with Product Category grouping\r\nPromoChannelPC = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPromoChannelPC = filter PromoChannelPC by 'PromotionProduct_Product_Name' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nPromoChannelPC = group PromoChannelPC by ('PromotionId', 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name');\r\nPromoChannelPC = foreach PromoChannelPC generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name' as 'PromotionProductCategory_Promotion_ProductCategory_Name', count() as 'count_PC';\r\n--StoreProduct with Product Category grouping\r\nStoreProductPC = load \"${App.Datasets.CG_StoreProduct21_tp.FullyQualifiedName}\";\r\nStoreProductPC = filter StoreProductPC by 'Product_Name' == \"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nStoreProductPC = group StoreProductPC by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'ProductCategory_ProductCategory_Name');\r\nStoreProductPC = foreach StoreProductPC generate 'PromotionProduct_PromotionId' as 'PromotionProduct_PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'ProductCategory_ProductCategory_Name' as 'ProductCategory_ProductCategory_Name', count() as 'count_SP';\r\nresult2 = cogroup PromoChannelPC by ('PromotionId', 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name'), StoreProductPC by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'ProductCategory_ProductCategory_Name');\r\nresult2 = foreach result2 generate coalesce(PromoChannelPC.'PromotionId', StoreProductPC.'PromotionProduct_PromotionId') as 'PromotionId', coalesce(PromoChannelPC.'RetailStore_Name', StoreProductPC.'RetailStore_Name') as 'RetailStoreName', coalesce(PromoChannelPC.'PromotionProductCategory_Promotion_ProductCategory_Name', StoreProductPC.'ProductCategory_ProductCategory_Name') as 'ProductCategory_ProductCategory_Name', sum(PromoChannelPC.'count_PC') as 'count_PC', sum(StoreProductPC.'count_SP') as 'count_SP';\r\nresult_final = cogroup result by ('PromotionId') full, result1 by ('PromotionId') {{cell(JoinType_3.result, 0, \"JoinType\").asString()}}, result2 by ('PromotionId');\r\nresult_final = foreach result_final generate result.'PromotionId' as 'PromotionId';\r\nresult_final = filter result_final by 'PromotionId' is not null;",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Name_2",
            "Name_1"
          ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "AvgOrderValue_Gauge_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AvgOrderValue_Gauge",
        "numbers" : [ ],
        "query" : "total_ordval = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\ntotal_ordval_A = filter total_ordval by 'Product_Name' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ntotal_ordval_A = group total_ordval_A by 'Product_Name';\r\ntotal_ordval_A = foreach total_ordval_A generate 'Product_Name' as 'Product', (sum('TotalPrice')/unique('OrderId')) as 'avg_order_value', \"select\" as 'text', \"A\" as 'order';\r\norder_value = group total_ordval by 'Product_Name';\r\norder_value = foreach order_value generate 'Product_Name', (sum('TotalPrice')/unique('OrderId')) as 'avg_order_value';\r\ntotal_ordval_B = foreach order_value generate 'Product_Name' as 'Product', 'avg_order_value' as 'max_avg_order_value', \"max\" as 'text', \"B\" as 'order';\r\ntotal_ordval_B = order total_ordval_B by 'max_avg_order_value' desc;\r\ntotal_ordval_B = limit total_ordval_B 1;\r\ntotal_ordval_C = foreach order_value generate 'Product_Name' as 'Product', 'avg_order_value' as 'min_avg_order_value', \"min\" as 'text', \"C\" as 'order';\r\ntotal_ordval_C = order total_ordval_C by 'min_avg_order_value' asc;\r\ntotal_ordval_C = limit total_ordval_C 1;\r\ntotal_ordval_D = group order_value by 'Product_Name';\r\ntotal_ordval_D = foreach total_ordval_D generate 'Product_Name' as 'Product', avg(sum('avg_order_value')) over([..] partition by all) as 'avg_avg_order_value', \"avg\" as 'text', \"D\" as 'order';\r\ntotal_ordval_D = limit total_ordval_D 1;\r\nordval = cogroup total_ordval_A by ('Product', 'order') full, total_ordval_B by ('Product','order') full, total_ordval_C by ('Product', 'order') full, total_ordval_D by ('Product', 'order');\r\nordval = foreach ordval generate coalesce(total_ordval_A.'Product', total_ordval_B.'Product', total_ordval_C.'Product', total_ordval_D.'Product') as 'Product', coalesce(total_ordval_A.'order', total_ordval_B.'order', total_ordval_C.'order', total_ordval_D.'order') as 'order', sum(total_ordval_A.'avg_order_value') as 'avg_order_value', coalesce(sum(total_ordval_A.'avg_order_value'),0) as 'avg_order_value_coalesced', coalesce(sum(total_ordval_B.'max_avg_order_value'),0) as 'max_avg_order_value', coalesce(sum(total_ordval_C.'min_avg_order_value'),0) as 'min_avg_order_value', coalesce(sum(total_ordval_D.'avg_avg_order_value'),0) as 'avg_avg_order_value';\r\nordval = group ordval by ('Product', 'order');\r\nordval = foreach ordval generate 'Product', 'order', sum('avg_order_value') as 'avg_order_value', sum('max_avg_order_value') as 'max_avg_order_value', sum('avg_avg_order_value') as 'avg_avg_order_value', sum('min_avg_order_value') as 'min_avg_order_value', (case when sum(sum('max_avg_order_value')) over([..] partition by all) == sum(sum('min_avg_order_value')) over([..] partition by all) then  0 else sum('min_avg_order_value') end) as 'min_range', (case when sum(sum('avg_order_value_coalesced')) over([..] partition by all) >= sum(sum('avg_avg_order_value')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\n\r\nordval = foreach ordval generate 'Product', 'order', 'avg_order_value', 'max_avg_order_value', number_to_string('max_avg_order_value', \"$#,####0.00\") as 'max_avg_order_value_str', 'min_avg_order_value', number_to_string('min_avg_order_value', \"$#,####0.00\") as 'min_avg_order_value_str', 'avg_avg_order_value', number_to_string('avg_avg_order_value', \"$#,####0.00\") as 'avg_avg_order_value_str', 'min_range', 'color';\r\nordval = order ordval by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 1.0E8,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                150,
                80
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "high" : 66,
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "avg_order_value"
              ]
            },
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "PromoChannel_Combine_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "PromoChannel_Combine",
        "numbers" : [ ],
        "query" : "-- Promotion Channel\r\nPC = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPC = filter PC by 'PromotionProduct_Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nPC = group PC by ('PromotionId', 'RetailStore_Name');\r\nPC = foreach PC generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'Name' , count() as 'count';\r\n--Retail Store\r\nRS = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nRS = group RS by ('Promotion_Id', 'Name');\r\nRS = foreach RS generate 'Name' as 'Name', 'Promotion_Id' as 'PromotionId';\r\nresult = cogroup PC by ('PromotionId', 'Name'), RS by ('PromotionId', 'Name');\r\nresult = foreach result generate PC['PromotionId'] as 'PromotionId', PC['Name'] as 'RetailStoreName', sum(PC.'count') as 'count';\r\nresult = filter result by 'count' is not null;\r\n--PromotionChannel with Product grouping\r\nPromoChannel = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPromoChannel = filter PromoChannel by 'PromotionProduct_Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nPromoChannel = group PromoChannel by ('PromotionId', 'RetailStore_Name', 'PromotionProduct_Product_Name');\r\nPromoChannel = foreach PromoChannel generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'PromotionProduct_Product_Name' as 'PromotionProduct_Product_Name', count() as 'count_PC';\r\n--StoreProduct with Product grouping\r\nStoreProduct = load \"${App.Datasets.CG_StoreProduct21_tp.FullyQualifiedName}\";\r\nStoreProduct = filter StoreProduct by 'Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nStoreProduct = group StoreProduct by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'Product_Name');\r\nStoreProduct = foreach StoreProduct generate 'PromotionProduct_PromotionId' as 'PromotionProduct_PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'Product_Name' as 'Product_Name', count() as 'count_SP';\r\nresult1 = cogroup PromoChannel by ('PromotionId', 'RetailStore_Name', 'PromotionProduct_Product_Name'), StoreProduct by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'Product_Name');\r\nresult1 = foreach result1 generate coalesce(PromoChannel.'PromotionId', StoreProduct_'PromotionProduct_PromotionId') as 'PromotionId', coalesce(PromoChannel.'RetailStore_Name', StoreProduct_'RetailStore_Name') as 'RetailStoreName', coalesce(PromoChannel.'PromotionProduct_Product_Name', StoreProduct_'Product_Name') as 'Product_Name', sum(PromoChannel.'count_PC') as 'count_PC', sum(StoreProduct_'count_SP') as 'count_SP';\r\n--PromotionChannel with Product Category grouping\r\nPromoChannelPC = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPromoChannelPC = filter PromoChannelPC by 'PromotionProduct_Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nPromoChannelPC = group PromoChannelPC by ('PromotionId', 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name');\r\nPromoChannelPC = foreach PromoChannelPC generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name' as 'PromotionProductCategory_Promotion_ProductCategory_Name', count() as 'count_PC';\r\n--StoreProduct with Product Category grouping\r\nStoreProductPC = load \"${App.Datasets.CG_StoreProduct21_tp.FullyQualifiedName}\";\r\nStoreProductPC = filter StoreProductPC by 'Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nStoreProductPC = group StoreProductPC by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'ProductCategory_ProductCategory_Name');\r\nStoreProductPC = foreach StoreProductPC generate 'PromotionProduct_PromotionId' as 'PromotionProduct_PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'ProductCategory_ProductCategory_Name' as 'ProductCategory_ProductCategory_Name', count() as 'count_SP';\r\nresult2 = cogroup PromoChannelPC by ('PromotionId', 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name'), StoreProductPC by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'ProductCategory_ProductCategory_Name');\r\nresult2 = foreach result2 generate coalesce(PromoChannelPC.'PromotionId', StoreProductPC.'PromotionProduct_PromotionId') as 'PromotionId', coalesce(PromoChannelPC.'RetailStore_Name', StoreProductPC.'RetailStore_Name') as 'RetailStoreName', coalesce(PromoChannelPC.'PromotionProductCategory_Promotion_ProductCategory_Name', StoreProductPC.'ProductCategory_ProductCategory_Name') as 'ProductCategory_ProductCategory_Name', sum(PromoChannelPC.'count_PC') as 'count_PC', sum(StoreProductPC.'count_SP') as 'count_SP';\r\nresult_final = cogroup result by ('PromotionId') full, result1 by ('PromotionId') {{cell(JoinType_2.result, 0, \"JoinType\").asString()}}, result2 by ('PromotionId');\r\nresult_final = foreach result_final generate result.'PromotionId' as 'PromotionId';\r\nresult_final = filter result_final by 'PromotionId' is not null;",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Name_2",
            "Name_1"
          ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "date_parser_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "date_parser",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nq = foreach q generate \"1970\" as 'Date_Year', \"01\" as 'Date_Month', \"01\" as 'Date_Day';\r\nq = group q by ('Date_Year', 'Date_Month', 'Date_Day');\r\nq = foreach q generate 'Date_Year', 'Date_Month', 'Date_Day', count() as 'sum';\r\n-- use fill() to generate null rows for any missing dates. Then you can use timeseries().\r\nq = fill q by (dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = timeseries q generate 'sum' as 'cnt' with (length=60000,  dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = foreach q generate 'Date_Year' + \"-\" + 'Date_Month' + \"-\" + 'Date_Day'+ \" 00:00:00\" as 'Date','Date_Year', 'Date_Month', 'Date_Day';\r\nq_A = filter q by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Date_Year', 'Date_Month', 'Date_Day')\")}};\r\nq_A = foreach q_A generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_A = group q_A by all;\r\nq_A = foreach q_A generate min('Date') as 'min_Date', max('Date') as 'max_Date', min('Date_sec_epoch') as 'min_Date_sec_epoch', max('Date_sec_epoch') as 'max_Date_sec_epoch';\r\nq_B = filter q by date('Date_Year', 'Date_Month', 'Date_Day') in [\"current fiscal_year\"..\"current fiscal_year\"];\r\nq_B = foreach q_B generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_B = group q_B by all;\r\nq_B = foreach q_B generate min('Date') as 'min_current_fiscalYr_Date', max('Date') as 'max_current_fiscalYr_Date', min('Date_sec_epoch') as 'min_current_fiscalYr_Date_sec_epoch', max('Date_sec_epoch') as 'max_current_fiscalYr_Date_sec_epoch';\r\nq_C = filter q by date('Date_Year', 'Date_Month', 'Date_Day') in [\"current year\"..\"current year\"];\r\nq_C = foreach q_C generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_C = group q_C by all;\r\nq_C = foreach q_C generate min('Date') as 'min_current_CalendarYr_Date', max('Date') as 'max_current_CalendarYr_Date', min('Date_sec_epoch') as 'min_current_CalendarYr_Date_sec_epoch', max('Date_sec_epoch') as 'max_current_CalendarYr_Date_sec_epoch';\r\nq = cogroup q_A by all full, q_B by all full, q_C by all;\r\nq = foreach q generate first(q_A.'min_Date') as 'min_Date', toDate(first(q_A.'max_Date_sec_epoch')+86399) as 'max_Date', first(q_A.'min_Date_sec_epoch') as 'min_Date_sec_epoch', first(q_A.'max_Date_sec_epoch')+86399 as 'max_Date_sec_epoch', first(q_B.'min_current_fiscalYr_Date') as 'min_current_fiscalYr_Date', toDate(first(q_B.'max_current_fiscalYr_Date_sec_epoch')+86399) as 'max_current_fiscalYr_Date', first(q_C.'min_current_CalendarYr_Date') as 'min_current_CalendarYr_Date', toDate(first(q_C.'max_current_CalendarYr_Date_sec_epoch')+86399) as 'max_current_CalendarYr_Date', (case when \"{{coalesce(cell(Current_Period_1.selection,0,\"min\"),\"All\").asObject()}}\" matches \"fiscal\" and first(q_C.'min_current_CalendarYr_Date') != first(q_B.'min_current_fiscalYr_Date') then \"_Fiscal\" when \"{{coalesce(cell(Current_Period_1.selection,0,\"max\"),\"All\").asObject()}}\" matches \"fiscal\" and first(q_C.'min_current_CalendarYr_Date') != first(q_B.'min_current_fiscalYr_Date') then \"_Fiscal\" else \"\" end) as 'Is_Fiscal';\r\nq = foreach q generate 'min_Date', 'max_Date', 'min_Date_sec_epoch', 'max_Date_sec_epoch', 'min_current_fiscalYr_Date', 'max_current_fiscalYr_Date', 'min_current_CalendarYr_Date', \"[\"+replace(toString('min_Date',\"yyyy-MM-dd\"),\"-\",\",\")+\"]\" as 'Date_Min', \"[\"+replace(toString('max_Date',\"yyyy-MM-dd\"),\"-\",\",\")+\"]\" as 'Date_Max', toString(toDate(date_to_epoch('min_Date')), \"yyyy\") + \"\" + number_to_string(ceil(((date_to_epoch('min_Date')) - date_to_epoch(toDate(toString(toDate(date_to_epoch('min_Date')), \"yyyy\")+\"-01-01\", \"yyyy-MM-dd\")) + 86399)/(86400*7)),\"0#\") as 'Selected_Min_date', toString(toDate(date_to_epoch('max_Date')), \"yyyy\") + \"\" + number_to_string(ceil(((date_to_epoch('max_Date')) - date_to_epoch(toDate(toString(toDate(date_to_epoch('max_Date')), \"yyyy\")+\"-01-01\", \"yyyy-MM-dd\")) + 86399)/(86400*7)),\"0#\") as 'Selected_Max_date', 'Is_Fiscal', \r\n\r\nstring_to_number(substr(toString('min_Date',\"yyyy-MM-dd HH:mm:ss\"),6,2)) as 'month_val_minDate', string_to_number(substr(toString('min_current_fiscalYr_Date',\"yyyy-MM-dd HH:mm:ss\"),6,2)) as 'month_val_min_current_fiscalYr_Date', string_to_number(substr(toString('min_Date',\"yyyy-MM-dd HH:mm:ss\"),1,4)) as 'year_val_minDate',\r\n\r\nstring_to_number(substr(toString('max_Date',\"yyyy-MM-dd HH:mm:ss\"),6,2)) as 'month_val_maxDate', string_to_number(substr(toString('max_current_fiscalYr_Date',\"yyyy-MM-dd HH:mm:ss\"),6,2)) as 'month_val_max_current_fiscalYr_Date', string_to_number(substr(toString('max_Date',\"yyyy-MM-dd HH:mm:ss\"),1,4)) as 'year_val_maxDate',\r\n\r\nsubstr(toString('min_Date',\"yyyy-MM-dd HH:mm:ss\"),1,4)+substr(toString('min_current_fiscalYr_Date',\"yyyy-MM-dd HH:mm:ss\"),5) as 'selected_years_min_FiscalDate',\r\nsubstr(toString('max_Date',\"yyyy-MM-dd HH:mm:ss\"),1,4)+substr(toString('max_current_fiscalYr_Date',\"yyyy-MM-dd HH:mm:ss\"),5) as 'selected_years_max_FiscalDate';\r\nq = foreach q generate 'min_Date', 'max_Date', 'min_Date_sec_epoch', 'max_Date_sec_epoch', 'min_current_fiscalYr_Date', 'min_current_CalendarYr_Date', 'Date_Min','Date_Max', 'Selected_Min_date', 'Selected_Max_date', selected_years_min_FiscalDate, selected_years_max_FiscalDate,\r\ncase \r\nwhen 'month_val_minDate' >= 'month_val_min_current_fiscalYr_Date' and upper(\"{{cell(IsYearEndFiscal_Valu_1.result, 0, \"IsYearEndFiscal_Computed\").asString()}}\") == \"TRUE\" then 'year_val_minDate' + 1\r\nwhen 'month_val_minDate' >= 'month_val_min_current_fiscalYr_Date' and upper(\"{{cell(IsYearEndFiscal_Valu_1.result, 0, \"IsYearEndFiscal_Computed\").asString()}}\") == \"FALSE\" then 'year_val_minDate' + 0\r\nwhen 'month_val_minDate' < 'month_val_min_current_fiscalYr_Date' and upper(\"{{cell(IsYearEndFiscal_Valu_1.result, 0, \"IsYearEndFiscal_Computed\").asString()}}\") == \"TRUE\" then 'year_val_minDate' + 0\r\nwhen 'month_val_minDate' < 'month_val_min_current_fiscalYr_Date' and upper(\"{{cell(IsYearEndFiscal_Valu_1.result, 0, \"IsYearEndFiscal_Computed\").asString()}}\") == \"FALSE\" then 'year_val_minDate' - 1 end as 'FY_Year_min_num',\r\n\r\n\r\ncase \r\nwhen 'month_val_maxDate' > 'month_val_max_current_fiscalYr_Date' and upper(\"{{cell(IsYearEndFiscal_Valu_1.result, 0, \"IsYearEndFiscal_Computed\").asString()}}\") == \"TRUE\" then 'year_val_maxDate' + 1\r\nwhen 'month_val_maxDate' > 'month_val_max_current_fiscalYr_Date' and upper(\"{{cell(IsYearEndFiscal_Valu_1.result, 0, \"IsYearEndFiscal_Computed\").asString()}}\") == \"FALSE\" then 'year_val_maxDate' + 0\r\nwhen 'month_val_maxDate' <= 'month_val_max_current_fiscalYr_Date' and upper(\"{{cell(IsYearEndFiscal_Valu_1.result, 0, \"IsYearEndFiscal_Computed\").asString()}}\") == \"TRUE\" then 'year_val_maxDate' + 0\r\nwhen 'month_val_maxDate' <= 'month_val_max_current_fiscalYr_Date' and upper(\"{{cell(IsYearEndFiscal_Valu_1.result, 0, \"IsYearEndFiscal_Computed\").asString()}}\") == \"FALSE\" then 'year_val_maxDate' - 1 end as 'FY_Year_max_num',\r\n\r\n\r\ncase \r\nwhen (daysBetween(toDate('selected_years_min_FiscalDate'), 'min_Date')/7) <= 1 and (daysBetween(toDate('selected_years_min_FiscalDate'), 'min_Date')/7) >= 0  then 1\r\nwhen (daysBetween(toDate('selected_years_min_FiscalDate'), 'min_Date')/7) > 1 then ceil(daysBetween(toDate('selected_years_min_FiscalDate'), 'min_Date')/7)\r\nwhen (daysBetween(toDate('selected_years_min_FiscalDate'), 'min_Date')/7) < 0 then (53+round(daysBetween(toDate('selected_years_min_FiscalDate'), 'min_Date')/7)) end as 'FY_minWeek_num', \r\n\r\ncase \r\nwhen (daysBetween(toDate('selected_years_max_FiscalDate'), 'max_Date')/7) <= 1 and (daysBetween(toDate('selected_years_max_FiscalDate'), 'max_Date')/7) > 0.2  then 1\r\nwhen (daysBetween(toDate('selected_years_max_FiscalDate'), 'max_Date')/7) > 1 then ceil(daysBetween(toDate('selected_years_max_FiscalDate'), 'max_Date')/7)\r\nwhen (daysBetween(toDate('selected_years_max_FiscalDate'), 'max_Date')/7) <= 0.2 then (53+round(daysBetween(toDate('selected_years_max_FiscalDate'), 'max_Date')/7)) end as 'FY_maxWeek_num','Is_Fiscal';\r\nq = foreach q generate 'min_Date', 'max_Date', 'min_Date_sec_epoch', 'max_Date_sec_epoch', 'min_current_fiscalYr_Date', 'min_current_CalendarYr_Date', 'Date_Min', 'Date_Max', 'Selected_Min_date', 'Selected_Max_date', number_to_string('FY_Year_min_num',\"#\")+number_to_string('FY_minWeek_num',\"0#\") as 'Fiscal_YearWeek_min', number_to_string('FY_Year_max_num',\"#\")+number_to_string('FY_maxWeek_num',\"0#\") as 'Fiscal_YearWeek_max', selected_years_min_FiscalDate, selected_years_max_FiscalDate, toDate(date_to_epoch(month_last_day(toDate(date_to_epoch(month_last_day(now())) - 1036800 + ((string_to_number(substr(\"month,-6\", index_of(\"month,-6\", \"month\")+6 ))-1) * 2678400)))) + 86400) as 'six_months_prior_dt', toDate(date_to_epoch(now())-(180*86400)) as '180days_prior_dt', 'Is_Fiscal';\r\nq = foreach q generate 'min_Date', 'max_Date', 'min_Date_sec_epoch', 'max_Date_sec_epoch', 'min_current_fiscalYr_Date', 'min_current_CalendarYr_Date', 'Date_Min', 'Date_Max', 'Selected_Min_date' as 'min_Calendar_YearWeek', 'Selected_Max_date' as 'max_Calendar_YearWeek', (case when 'Is_Fiscal' == \"_Fiscal\" then 'Fiscal_YearWeek_min' else 'Selected_Min_date' end) as 'min_YearWeek', (case when 'Is_Fiscal' == \"_Fiscal\" then 'Fiscal_YearWeek_max' else 'Selected_Max_date' end) as 'max_YearWeek', toString('180days_prior_dt', \"yyyy\") + \"\" + number_to_string(ceil((date_to_epoch('180days_prior_dt') - date_to_epoch(toDate(toString('180days_prior_dt', \"yyyy\")+\"-01-01\", \"yyyy-MM-dd\")) + 86399)/(86400*7)),\"0#\") as '180days_prior_yrweek', toString(now(), \"yyyy\") + \"\" + number_to_string(ceil((date_to_epoch(now()) - date_to_epoch(toDate(toString(now(), \"yyyy\")+\"-01-01\", \"yyyy-MM-dd\")) + 86399)/(86400*7)),\"0#\") as 'yrweek_now','Is_Fiscal', (case when 'Is_Fiscal' == \"_Fiscal\" then \"Fiscal \" else \"\" end) as 'Fiscal_label';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "PromoChannel_Combine_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "PromoChannel_Combine",
        "numbers" : [ ],
        "query" : "-- Promotion Channel\r\nPC = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPC = filter PC by 'PromotionProductCategory_Promotion_ProductCategory_Name' ==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nPC = group PC by ('PromotionId', 'RetailStore_Name');\r\nPC = foreach PC generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'Name' , count() as 'count';\r\n--Retail Store\r\nRS = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nRS = group RS by ('Promotion_Id', 'Name');\r\nRS = foreach RS generate 'Name' as 'Name', 'Promotion_Id' as 'PromotionId';\r\nresult = cogroup PC by ('PromotionId', 'Name'), RS by ('PromotionId', 'Name');\r\nresult = foreach result generate PC['PromotionId'] as 'PromotionId', PC['Name'] as 'RetailStoreName', sum(PC.'count') as 'count';\r\nresult = filter result by 'count' is not null;\r\n--PromotionChannel with Product grouping\r\nPromoChannel = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPromoChannel = filter PromoChannel by 'PromotionProductCategory_Promotion_ProductCategory_Name' ==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nPromoChannel = group PromoChannel by ('PromotionId', 'RetailStore_Name', 'PromotionProduct_Product_Name');\r\nPromoChannel = foreach PromoChannel generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'PromotionProduct_Product_Name' as 'PromotionProduct_Product_Name', count() as 'count_PC';\r\n--StoreProduct with Product grouping\r\nStoreProduct = load \"${App.Datasets.CG_StoreProduct21_tp.FullyQualifiedName}\";\r\nStoreProduct = filter StoreProduct by 'ProductCategory_ProductCategory_Name' ==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nStoreProduct = group StoreProduct by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'Product_Name');\r\nStoreProduct = foreach StoreProduct generate 'PromotionProduct_PromotionId' as 'PromotionProduct_PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'Product_Name' as 'Product_Name', count() as 'count_SP';\r\nresult1 = cogroup PromoChannel by ('PromotionId', 'RetailStore_Name', 'PromotionProduct_Product_Name'), StoreProduct by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'Product_Name');\r\nresult1 = foreach result1 generate coalesce(PromoChannel.'PromotionId', StoreProduct_'PromotionProduct_PromotionId') as 'PromotionId', coalesce(PromoChannel.'RetailStore_Name', StoreProduct_'RetailStore_Name') as 'RetailStoreName', coalesce(PromoChannel.'PromotionProduct_Product_Name', StoreProduct_'Product_Name') as 'Product_Name', sum(PromoChannel.'count_PC') as 'count_PC', sum(StoreProduct_'count_SP') as 'count_SP';\r\n--PromotionChannel with Product Category grouping\r\nPromoChannelPC = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nPromoChannelPC = filter PromoChannelPC by 'PromotionProductCategory_Promotion_ProductCategory_Name' ==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nPromoChannelPC = group PromoChannelPC by ('PromotionId', 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name');\r\nPromoChannelPC = foreach PromoChannelPC generate 'PromotionId' as 'PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name' as 'PromotionProductCategory_Promotion_ProductCategory_Name', count() as 'count_PC';\r\n--StoreProduct with Product Category grouping\r\nStoreProductPC = load \"${App.Datasets.CG_StoreProduct21_tp.FullyQualifiedName}\";\r\nStoreProductPC = filter StoreProductPC by 'ProductCategory_ProductCategory_Name' ==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nStoreProductPC = group StoreProductPC by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'ProductCategory_ProductCategory_Name');\r\nStoreProductPC = foreach StoreProductPC generate 'PromotionProduct_PromotionId' as 'PromotionProduct_PromotionId', 'RetailStore_Name' as 'RetailStore_Name', 'ProductCategory_ProductCategory_Name' as 'ProductCategory_ProductCategory_Name', count() as 'count_SP';\r\nresult2 = cogroup PromoChannelPC by ('PromotionId', 'RetailStore_Name', 'PromotionProductCategory_Promotion_ProductCategory_Name'), StoreProductPC by ('PromotionProduct_PromotionId', 'RetailStore_Name', 'ProductCategory_ProductCategory_Name');\r\nresult2 = foreach result2 generate coalesce(PromoChannelPC.'PromotionId', StoreProductPC.'PromotionProduct_PromotionId') as 'PromotionId', coalesce(PromoChannelPC.'RetailStore_Name', StoreProductPC.'RetailStore_Name') as 'RetailStoreName', coalesce(PromoChannelPC.'PromotionProductCategory_Promotion_ProductCategory_Name', StoreProductPC.'ProductCategory_ProductCategory_Name') as 'ProductCategory_ProductCategory_Name', sum(PromoChannelPC.'count_PC') as 'count_PC', sum(StoreProductPC.'count_SP') as 'count_SP';\r\nresult_final = cogroup result by ('PromotionId') full, result1 by ('PromotionId') {{cell(JoinType_1.result, 0, \"JoinType\").asString()}}, result2 by ('PromotionId');\r\nresult_final = foreach result_final generate result.'PromotionId' as 'PromotionId';\r\nresult_final = filter result_final by 'PromotionId' is not null;\r\n",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Name_2",
            "Name_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Avg_SOS_compliance_g_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Avg_SOS_compliance_gauge",
        "numbers" : [ ],
        "query" : "sos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos_A = filter sos by 'Product_Name_Custom' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nsos_A = filter sos_A by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = group sos_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos_A = foreach sos_A generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_sos';\r\nsos_A = group sos_A by 'Product_Name_Custom';\r\nsos_A = foreach sos_A generate 'Product_Name_Custom' as 'Product', avg('current_sos') as 'Avg_SoSCompliance_Percentage', \"select\" as 'text', \"A\" as 'order';\r\nshare_of_shelf = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nshare_of_shelf = group share_of_shelf by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nshare_of_shelf = foreach share_of_shelf generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_sos';\r\nshare_of_shelf = group share_of_shelf by 'Product_Name_Custom';\r\nsos_B = foreach share_of_shelf generate 'Product_Name_Custom' as 'Product', avg('current_sos') as 'max_Avg_SoSCompliance_Percentage', \"max\" as 'text', \"B\" as 'order';\r\nsos_B = order sos_B by 'max_Avg_SoSCompliance_Percentage' desc;\r\nsos_B = limit sos_B 1;\r\nsos_C = foreach share_of_shelf generate 'Product_Name_Custom' as 'Product', avg('current_sos') as 'min_Avg_SoSCompliance_Percentage', \"min\" as 'text', \"C\" as 'order';\r\nsos_C = order sos_C by 'min_Avg_SoSCompliance_Percentage' asc;\r\nsos_C = limit sos_C 1;\r\nsos_D = foreach share_of_shelf generate 'Product_Name_Custom' as 'Product', avg(avg('current_sos')) over([..] partition by all) as 'avg_Avg_SoSCompliance_Percentage', \"avg\" as 'text', \"D\" as 'order';\r\nsos_D = limit sos_D 1;\r\ntotal_sos = cogroup sos_A by ('Product', 'order') full, sos_B by ('Product', 'order') full, sos_C by ('Product', 'order') full, sos_D by ('Product', 'order');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'Product', sos_B.'Product', sos_C.'Product', sos_D.'Product') as 'Product', coalesce(sos_A.'order', sos_B.'order', sos_C.'order', sos_D.'order') as 'order', sum(sos_A.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', coalesce(sum(sos_A.'Avg_SoSCompliance_Percentage'),0) as 'Avg_SoSCompliance_Percentage_coalesced', coalesce(sum(sos_B.'max_Avg_SoSCompliance_Percentage'), 0) as 'max_Avg_SoSCompliance_Percentage', coalesce(sum(sos_C.'min_Avg_SoSCompliance_Percentage'), 0) as 'min_Avg_SoSCompliance_Percentage', sum(sos_D.'avg_Avg_SoSCompliance_Percentage') as 'avg_Avg_SoSCompliance_Percentage';\r\ntotal_sos = group total_sos by ('Product', 'order');\r\ntotal_sos = foreach total_sos generate 'Product', 'order', sum('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', sum('max_Avg_SoSCompliance_Percentage') as 'max_Avg_SoSCompliance_Percentage', sum('avg_Avg_SoSCompliance_Percentage') as 'avg_Avg_SoSCompliance_Percentage', sum('min_Avg_SoSCompliance_Percentage') as 'min_Avg_SoSCompliance_Percentage', (case when sum(sum('max_Avg_SoSCompliance_Percentage')) over([..] partition by all) == sum(sum('min_Avg_SoSCompliance_Percentage')) over([..] partition by all) then 0 else sum('min_Avg_SoSCompliance_Percentage') end) as 'min_range', (case when sum(sum('Avg_SoSCompliance_Percentage_coalesced')) over([..] partition by all) >= sum(sum('avg_Avg_SoSCompliance_Percentage')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\n\r\ntotal_sos = foreach total_sos generate 'Product', 'order', 'Avg_SoSCompliance_Percentage', 'max_Avg_SoSCompliance_Percentage', number_to_string('max_Avg_SoSCompliance_Percentage', \"##0.00\") as 'max_Avg_SoSCompliance_Percentage_str', 'min_Avg_SoSCompliance_Percentage', number_to_string('min_Avg_SoSCompliance_Percentage', \"##0.00\") as 'min_Avg_SoSCompliance_Percentage_str', 'avg_Avg_SoSCompliance_Percentage', number_to_string('avg_Avg_SoSCompliance_Percentage', \"##0.00\") as 'avg_Avg_SoSCompliance_Percentage_str', 'min_range', 'color';\r\ntotal_sos = order total_sos by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 100,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "Avg_SoSCompliance_Percentage"
              ]
            },
            "high" : 66,
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Assortment_lens_1_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Assortment_lens_1",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by ('Assortment_AssortmentProduct_Assortment_Name');\r\ncomp_result = foreach comp_result generate 'Assortment_AssortmentProduct_Assortment_Name', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = group order1 by ('Assortment_AssortmentProduct_Assortment_Name','OrderId','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Assortment_AssortmentProduct_Assortment_Name', 'OrderId', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Assortment_AssortmentProduct_Assortment_Name');\r\norder1 = foreach order1 generate 'Assortment_AssortmentProduct_Assortment_Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = group store_cv by ('Assortment_AssortmentProduct_Assortment_Name');\r\nstore_cv = foreach store_cv generate 'Assortment_AssortmentProduct_Assortment_Name', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('Assortment_AssortmentProduct_Assortment_Name');\r\nsos = foreach sos generate 'Assortment_AssortmentProduct_Assortment_Name', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate 'Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by ('Assortment_AssortmentProduct_Assortment_Name');\r\noos_result = foreach oos_result generate 'Assortment_AssortmentProduct_Assortment_Name', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n\r\n--FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('Assortment_AssortmentProduct_Assortment_Name');\r\nfcs = foreach fcs generate 'Assortment_AssortmentProduct_Assortment_Name', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('Assortment_AssortmentProduct_Assortment_Name');\r\npromo = foreach promo generate 'Assortment_AssortmentProduct_Assortment_Name', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('Assortment_AssortmentProduct_Assortment_Name','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'Assortment_AssortmentProduct_Assortment_Name', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('Assortment_AssortmentProduct_Assortment_Name');\r\ninv = foreach inv generate 'Assortment_AssortmentProduct_Assortment_Name', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Assortment_AssortmentProduct_Assortment_Name') full, sos by ('Assortment_AssortmentProduct_Assortment_Name') full, oos_result by ('Assortment_AssortmentProduct_Assortment_Name') full, comp_result by ('Assortment_AssortmentProduct_Assortment_Name') full,fcs by ('Assortment_AssortmentProduct_Assortment_Name') full, promo by ('Assortment_AssortmentProduct_Assortment_Name') full, inv by ('Assortment_AssortmentProduct_Assortment_Name') full, store_cv by ('Assortment_AssortmentProduct_Assortment_Name');\r\nfinal_table = foreach final_table generate coalesce(order1.'Assortment_AssortmentProduct_Assortment_Name', comp_result.'Assortment_AssortmentProduct_Assortment_Name', sos.'Assortment_AssortmentProduct_Assortment_Name',oos_result.'Assortment_AssortmentProduct_Assortment_Name', fcs.'Assortment_AssortmentProduct_Assortment_Name', promo.'Assortment_AssortmentProduct_Assortment_Name', inv.'Assortment_AssortmentProduct_Assortment_Name', store_cv.'Assortment_AssortmentProduct_Assortment_Name') as 'Assortment_AssortmentProduct_Assortment_Name', sum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage';\r\n\r\nfinal_table = group final_table by 'Assortment_AssortmentProduct_Assortment_Name';\r\n\r\nfinal_table = foreach final_table generate 'Assortment_AssortmentProduct_Assortment_Name', {{cell(static_4.selection,0,\"Field_value_y\").asObject()}}  as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', {{cell(static_5.selection,0,\"Field_value_x\").asObject()}}  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', dense_rank() over([..] partition by all order by coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0) desc) as 'rank_desc',count() as 'row_count';\r\nfinal_table = group final_table by ('Assortment_AssortmentProduct_Assortment_Name','row_count','rank_desc');\r\n\r\nfinal_table = foreach final_table generate 'Assortment_AssortmentProduct_Assortment_Name', coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0)  as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', coalesce({{cell(static_5.selection,0,\"Field_value_x\").asObject()}},0)  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', sum('row_count') over([..] partition by all) as 'prod_cat_count', 'rank_desc';\r\n\r\nfinal_table = foreach final_table generate 'Assortment_AssortmentProduct_Assortment_Name', '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', 'prod_cat_count',  'rank_desc', (case when 'prod_cat_count'>2 then round({{cell(static_7.selection, 0, \"max\").asObject()}}*'prod_cat_count') else ceil({{cell(static_7.selection, 0, \"max\").asObject()}}*'prod_cat_count') end) as 'final_limit_max', (case when 'prod_cat_count'>2 then round({{cell(static_7.selection, 0, \"min\").asObject()}}*'prod_cat_count') else ceil({{cell(static_7.selection, 0, \"min\").asObject()}}*'prod_cat_count') end) as 'final_limit_min';\r\nfinal_table = filter final_table by 'rank_desc'>'final_limit_min' and 'rank_desc'<='final_limit_max';\r\n\r\nfinal_table = foreach final_table generate 'Assortment_AssortmentProduct_Assortment_Name', '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}';\r\n\r\n--final_table = order final_table by 'Assortment_AssortmentProduct_Assortment_Name' desc;",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1",
            "Assortment_Assortmen_2"
          ]
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "radiusRatio" : 5,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "visualizationType" : "scatter",
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "NewProduct_Trend_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "NewProduct_Trend",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = filter retail_store by date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day') in [\"180 days ago\"..\"current day\"];\r\nretail_store = group retail_store by ('CreatedDate_Year', 'CreatedDate_Week');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year' + \"~~~\" + 'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week';\r\n\r\n--OutOfStockOccurences--\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos = filter oos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\noos = group oos by ('ActualVisitStartTime_Year','ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\noos = foreach oos generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_out_of_stock';\r\noos = group oos by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\noos = foreach oos generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_out_of_stock') as 'current_out_of_stock';\r\n--Revenue--\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_Name'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\norders = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"180 days ago\"..\"current day\"];\r\norders = group orders by ('Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norders = foreach orders generate 'Order_ActivatedDate_Year' + \"~~~\" + 'Order_ActivatedDate_Week' as 'Order_ActivatedDate_Year~~~Order_ActivatedDate_Week', sum('TotalPrice') as 'current_sales', sum('Quantity') as 'current_quantity', (sum('TotalPrice')/unique('OrderId')) as 'current_avg_order_value', (sum('TotalPrice')/unique('Order_ActivatedDate_Week')) as 'current_avg_week_revenue', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp = filter comp by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_comp = group comp by ('ActualVisitStartTime_Year','ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_comp';\r\ntotal_comp = group total_comp by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_comp') as 'current_comp';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = filter promo by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\npromo = group promo by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_promo';\r\npromo = group promo by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\npromo = foreach promo generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_promo') as 'current_promo';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = filter fcs by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_fcs = group fcs by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_fcs';\r\ntotal_fcs = group total_fcs by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_fcs') as 'current_fcs';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = filter sos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_sos = group sos by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_sos';\r\ntotal_sos = group total_sos by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_sos') as 'current_sos';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = filter inv by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_inv = group inv by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_inventory';\r\ntotal_inv = group total_inv by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_inventory') as 'current_inventory';\r\n--Metric_multidatset---\r\nfinal_table = cogroup\r\n             retail_store by 'CreatedDate_Year~~~CreatedDate_Week' full,\r\n             orders by ('Order_ActivatedDate_Year~~~Order_ActivatedDate_Week') full,\r\n             oos by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_comp by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             promo by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_fcs by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_sos by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_inv by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week');\r\nfinal_table = foreach final_table generate coalesce(retail_store.'CreatedDate_Year~~~CreatedDate_Week', orders.'Order_ActivatedDate_Year~~~Order_ActivatedDate_Week', oos.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_comp.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', promo.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_fcs.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_sos.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_inv.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week')  as 'CreatedDate_Year~~~CreatedDate_Week',\r\n\r\nsum(orders.'current_sales') as 'total_sales',\r\nsum(orders.'current_quantity') as 'total_qty', \r\nsum(orders.'current_avg_order_value') as 'avg_order_value', \r\nsum(orders.'current_avg_week_revenue') as 'avg_weekly_revenue', \r\nsum(oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance',\r\nsum(total_comp.'current_comp') as 'Avg_CompliancePercentage', \r\nsum(promo.'current_promo') as 'Avg_PromoCompliance_Percentage', \r\nsum(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\nsum(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', \r\nsum(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage', \r\nsum(orders.'current_store_coverage') as 'store_coverage';\r\nfinal_table = filter final_table by '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate 'CreatedDate_Year~~~CreatedDate_Week', '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}';\r\nfinal_table = order final_table by 'CreatedDate_Year~~~CreatedDate_Week' asc;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "Assortment_lens_3_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Assortment_lens_3",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = group retail_store by ('CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\n\r\n--StoreCompliance\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\ncomp_result = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp_result by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',avg('avg_Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','OrderId');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}'+\"-\"+'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek', 'OrderId', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue';\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = filter store_cv by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\nstore_cv = group store_cv by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nstore_cv = foreach store_cv generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n--Average Share of Shelf Compliance\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_result = group sos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\nsos_result = group sos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_SOSCompliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\n--Average Facings Compliance\r\n fcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_result = group fcs by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\nfcs_result = group fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_FCSCompliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\n--Average Inventory Compliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_result = group inv by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv_result = group inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--Average Promotion Compliance\r\n promo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Assortment_AssortmentProduct_Assortment_Name'==\"{{cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_result = group promo by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\npromo_result = group promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_PromoCompliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\n--final multidataset table\r\nfinal_table = cogroup\r\n             retail_store by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             order1 by  'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             store_cv by  'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             comp_result by  'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             sos_result  by  'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nfinal_table = foreach final_table generate\r\ncoalesce(retail_store.'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', order1.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', store_cv.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', comp_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',sos_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',fcs_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',oos_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',promo_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', inv_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'Sales') as 'total_sales',sum(order1.'Quantity') as 'total_qty', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',\r\n         avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance',\r\n         avg(comp_result.'Avg_Compliance_Percentage') as 'Avg_CompliancePercentage',\r\n         avg(fcs_result.'avg_FCSCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage',\r\n         avg(sos_result.'avg_SOSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',\r\n         avg(promo_result.'avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage',\r\n         avg(inv_result.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table = filter final_table by '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}' is not null or '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate\r\n'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0) as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', coalesce({{cell(static_5.selection,0,\"Field_value_x\").asObject()}},0)  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}';\r\nfinal_table = order final_table by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_3_2",
            "new_launched_prod_py_1",
            "lens_1",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "ProdCat_Metrics_Tren_1" : {
        "broadcastFacet" : false,
        "groups" : [ ],
        "label" : "ProdCat_Metrics_Trend",
        "numbers" : [ ],
        "query" : "\r\nretail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = group retail_store by ('CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\n\r\n--StoreCompliance\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\ncomp_result = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp_result by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',avg('avg_Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\n\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Product_ProductCategory_ProductCategory_Name'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','OrderId');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}'+\"-\"+'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek', 'OrderId', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue';\r\n\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = filter store_cv by 'Product_ProductCategory_ProductCategory_Name'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nstore_cv = group store_cv by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nstore_cv = foreach store_cv generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n\r\n--Average Share of Shelf Compliance\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_result = group sos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\nsos_result = group sos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_SOSCompliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\n\r\n--Average Facings Compliance\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_result = group fcs by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\nfcs_result = group fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_FCSCompliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\n\r\n--Average Inventory Compliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_result = group inv by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv_result = group inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n\r\n--Average Promotion Compliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_result = group promo by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\npromo_result = group promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_PromoCompliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\n\r\n--final multidataset table\r\nfinal_table = cogroup \r\n             retail_store by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             order1 by  'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             store_cv by  'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             comp_result by  'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             sos_result  by  'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\n\r\nfinal_table = foreach final_table generate\r\ncoalesce(retail_store.'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', order1.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', store_cv.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', comp_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',sos_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',fcs_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',oos_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',promo_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', inv_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'Sales') as 'total_sales',sum(order1.'Quantity') as 'total_qty', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',\r\n         avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance',\r\n         avg(comp_result.'Avg_Compliance_Percentage') as 'Avg_CompliancePercentage',\r\n         avg(fcs_result.'avg_FCSCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage',\r\n         avg(sos_result.'avg_SOSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',\r\n         avg(promo_result.'avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage',\r\n         avg(inv_result.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table = filter final_table by '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}' is not null or '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate\r\n'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0) as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', coalesce({{cell(static_5.selection,0,\"Field_value_x\").asObject()}},0)  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}';\r\nfinal_table = order final_table by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_3_2",
            "Assortment_lens_1_1",
            "lens_1_1",
            "new_launched_prod_py_1",
            "lens_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "AllMetrics___Percent_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AllMetrics_&_PercentChanges",
        "numbers" : [ ],
        "query" : "---Decline in OutofStock (CG_RetailVisitKpi)\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'ProductCategory_Name_Custom'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\ntotal_oos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter total_oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos_B = filter total_oos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_oos = group oos_A by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, oos_B by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'ProductCategory_Name_Custom', oos_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', \r\ncoalesce(oos_A.'AssessmentTask_Visit_RetailStore_Name', oos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name',\r\navg(oos_A.'Compliance_Percentage') as 'current_out_of_stock', avg(oos_B.'Compliance_Percentage') as 'previous_out_of_stock';\r\ntotal_oos = group total_oos by 'ProductCategory_Name_Custom';\r\ntotal_oos = foreach total_oos generate 'ProductCategory_Name_Custom', avg('current_out_of_stock') as 'current_out_of_stock', avg('previous_out_of_stock') as 'previous_out_of_stock';\r\ntotal_oos = foreach total_oos generate 'ProductCategory_Name_Custom', 'current_out_of_stock', 'previous_out_of_stock', (('current_out_of_stock'-'previous_out_of_stock')/('previous_out_of_stock')) as 'PoP_Out_of_Stock_percent';\r\ntotal_oos = foreach total_oos generate 'ProductCategory_Name_Custom','current_out_of_stock','PoP_Out_of_Stock_percent';\r\n-- Decline in Sales(CG_OrderItem)\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_ProductCategory_ProductCategory_Name'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Product_ProductCategory_ProductCategory_Name') full, sales_B by ('Product_ProductCategory_ProductCategory_Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Product_ProductCategory_ProductCategory_Name', sales_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sale = foreach total_sale generate 'Product_ProductCategory_ProductCategory_Name','current_sales', 'previous_sales', (('current_sales'-'previous_sales')/('previous_sales')) as 'Percent_change_in_Sales';\r\ntotal_sale = foreach total_sale generate 'Product_ProductCategory_ProductCategory_Name', 'current_sales', 'Percent_change_in_Sales';\r\n--Decline in Quantity(CG_OrderItem)\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nqty_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_qty = group qty_A by ('Product_ProductCategory_ProductCategory_Name') full, qty_B by ('Product_ProductCategory_ProductCategory_Name');\r\ntotal_qty = foreach total_qty generate coalesce(qty_A.'Product_ProductCategory_ProductCategory_Name', qty_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', sum(qty_A.'Quantity') as 'current_quantity', sum(qty_B.'Quantity') as 'previous_quantity';\r\ntotal_qty = foreach total_qty generate 'Product_ProductCategory_ProductCategory_Name','current_quantity', 'previous_quantity', (('current_quantity'-'previous_quantity')/('previous_quantity')) as 'Percent_Change_in_Quantity';\r\ntotal_qty = foreach total_qty generate 'Product_ProductCategory_ProductCategory_Name','current_quantity','Percent_Change_in_Quantity';\r\n---Decline in AvgOrderValue\r\nordval_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nordval_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_ordval = group ordval_A by ('Product_ProductCategory_ProductCategory_Name') full, ordval_B by ('Product_ProductCategory_ProductCategory_Name');\r\ntotal_ordval = foreach total_ordval generate coalesce(ordval_A.'Product_ProductCategory_ProductCategory_Name', ordval_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', (sum(ordval_A.'TotalPrice')/unique(ordval_A.'OrderId')) as 'current_avg_order_value', (sum(ordval_B.'TotalPrice')/unique(ordval_B.'OrderId')) as 'previous_avg_order_value';\r\ntotal_ordval = foreach total_ordval generate 'Product_ProductCategory_ProductCategory_Name', 'current_avg_order_value', 'previous_avg_order_value', (('current_avg_order_value'-'previous_avg_order_value')/('previous_avg_order_value')) as 'Percent_Change_in_AvgOrderValue';\r\ntotal_ordval = foreach total_ordval generate 'Product_ProductCategory_ProductCategory_Name','current_avg_order_value','Percent_Change_in_AvgOrderValue';\r\n---Decline in SalesVelocity\r\nsv_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsv_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sv = group sv_A by ('Product_ProductCategory_ProductCategory_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sv_B by ('Product_ProductCategory_ProductCategory_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sv_A.'Product_ProductCategory_ProductCategory_Name', sv_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', sv_A.'Order_ActivatedDate_Year'+\"-\"+ sv_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sv_B.'Order_ActivatedDate_Year'+\"-\"+ sv_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sv_A.'TotalPrice') as 'current_sales', sum(sv_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Product_ProductCategory_ProductCategory_Name';\r\ntotal_sv = foreach total_sv generate 'Product_ProductCategory_ProductCategory_Name', sum('current_sales')/unique('CurrentPeriod_YearWeek') as 'current_avg_week_revenue', sum('previous_sales')/unique('PreviousPeriod_YearWeek') as 'previous_avg_week_revenue';\r\ntotal_sv = foreach total_sv generate 'Product_ProductCategory_ProductCategory_Name', 'current_avg_week_revenue', 'previous_avg_week_revenue', (('current_avg_week_revenue'-'previous_avg_week_revenue')/('previous_avg_week_revenue')) as 'Percent_Change_in_WeeklyRev';\r\ntotal_sv = foreach total_sv generate 'Product_ProductCategory_ProductCategory_Name','current_avg_week_revenue','Percent_Change_in_WeeklyRev';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'ProductCategory_Name_Custom', comp_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'ProductCategory_Name_Custom';\r\ntotal_comp = foreach total_comp generate 'ProductCategory_Name_Custom', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'ProductCategory_Name_Custom', 'current_comp', 'previous_comp', (('current_comp'-'previous_comp')/('previous_comp')) as 'Compliance_Percentate_Change_vs_Previous_Period';\r\ntotal_comp = foreach total_comp generate 'ProductCategory_Name_Custom', 'current_comp', 'Compliance_Percentate_Change_vs_Previous_Period';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo_B = filter promo by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo_A by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate coalesce(promo_A.'ProductCategory_Name_Custom', promo_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\npromo = group promo by 'ProductCategory_Name_Custom';\r\npromo = foreach promo generate 'ProductCategory_Name_Custom', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\npromo = foreach promo generate 'ProductCategory_Name_Custom', 'current_promo', 'previous_promo', (('current_promo'-'previous_promo')/'previous_promo') as 'PoP_Promotion_Compliance_percent';\r\npromo = foreach promo generate 'ProductCategory_Name_Custom','current_promo','PoP_Promotion_Compliance_percent';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nfcs_B = filter fcs by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_fcs = group fcs_A by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'ProductCategory_Name_Custom', fcs_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'ProductCategory_Name_Custom';\r\ntotal_fcs = foreach total_fcs generate 'ProductCategory_Name_Custom', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'ProductCategory_Name_Custom', 'current_fcs', 'previous_fcs', (('current_fcs'-'previous_fcs')/('previous_fcs')) as 'PoP_Facings_Compliance_percent';\r\ntotal_fcs = foreach total_fcs generate 'ProductCategory_Name_Custom','current_fcs', 'PoP_Facings_Compliance_percent';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nsos_B = filter sos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_sos = group sos_A by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'ProductCategory_Name_Custom', sos_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'ProductCategory_Name_Custom';\r\ntotal_sos = foreach total_sos generate 'ProductCategory_Name_Custom', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'ProductCategory_Name_Custom', 'current_sos', 'previous_sos', (('current_sos'-'previous_sos')/('previous_sos')) as 'PoP_Share_of_Shelf_Compliance_percent';\r\ntotal_sos = foreach total_sos generate 'ProductCategory_Name_Custom', 'current_sos', 'PoP_Share_of_Shelf_Compliance_percent';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ninv_B = filter inv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_inv = group inv_A by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, inv_B by ('ProductCategory_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate coalesce(inv_A.'ProductCategory_Name_Custom', inv_B.'ProductCategory_Name_Custom') as 'ProductCategory_Name_Custom', coalesce(inv_A.'AssessmentTask_Visit_RetailStore_Name', inv_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(inv_A.'Compliance_Percentage') as 'current_inventory', avg(inv_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inv = group total_inv by 'ProductCategory_Name_Custom';\r\ntotal_inv = foreach total_inv generate 'ProductCategory_Name_Custom', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inv = foreach total_inv generate 'ProductCategory_Name_Custom', 'current_inventory', 'previous_inventory', (('current_inventory'-'previous_inventory')/('previous_inventory')) as 'PoP_Inventory_Comp_percent';\r\ntotal_inv = foreach total_inv generate 'ProductCategory_Name_Custom', 'current_inventory', 'PoP_Inventory_Comp_percent';\r\n---Decline in StoreCoverage\r\nstore_orders_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders = group store_orders_A by ('Product_ProductCategory_ProductCategory_Name') full, store_orders_B by ('Product_ProductCategory_ProductCategory_Name');\r\nstore_orders = foreach store_orders generate coalesce(store_orders_A.'Product_ProductCategory_ProductCategory_Name', store_orders_B.'Product_ProductCategory_ProductCategory_Name') as 'Product_ProductCategory_ProductCategory_Name', (unique(store_orders_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage', (unique(store_orders_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'previous_store_coverage';\r\nstore_orders = foreach store_orders generate 'Product_ProductCategory_ProductCategory_Name', 'current_store_coverage', 'previous_store_coverage', (('current_store_coverage'-'previous_store_coverage')/('previous_store_coverage')) as 'Percent_Change_in_StoreCoverage';\r\nstore_orders = foreach store_orders generate 'Product_ProductCategory_ProductCategory_Name', 'current_store_coverage', 'Percent_Change_in_StoreCoverage';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by  ('Product_ProductCategory_ProductCategory_Name') full,\r\n              total_qty by  ('Product_ProductCategory_ProductCategory_Name') full,\r\n              total_ordval by ('Product_ProductCategory_ProductCategory_Name') full,\r\n              total_sv by  ('Product_ProductCategory_ProductCategory_Name') full,\r\n              total_oos by ('ProductCategory_Name_Custom') full,\r\n              total_comp by ('ProductCategory_Name_Custom') full,\r\n              promo by ('ProductCategory_Name_Custom') full,\r\n              total_fcs by  ('ProductCategory_Name_Custom') full,\r\n              total_sos by ('ProductCategory_Name_Custom') full,\r\n              total_inv by ('ProductCategory_Name_Custom') full,\r\n              store_orders by ('Product_ProductCategory_ProductCategory_Name');\r\nfinal_table = foreach final_table generate\r\n        coalesce(total_sale.'Product_ProductCategory_ProductCategory_Name', total_qty.'Product_ProductCategory_ProductCategory_Name', total_ordval.'Product_ProductCategory_ProductCategory_Name', total_sv.'Product_ProductCategory_ProductCategory_Name', total_oos.'ProductCategory_Name_Custom', total_comp.'ProductCategory_Name_Custom', promo.'ProductCategory_Name_Custom', total_fcs.'ProductCategory_Name_Custom', total_sos.'ProductCategory_Name_Custom', total_inv.'ProductCategory_Name_Custom', store_orders.'Product_ProductCategory_ProductCategory_Name') as 'ProductCategory_Name_Custom', \r\n        \r\n         sum(total_sale.'current_sales') as 'total_sales',\r\n         sum(total_sale.'Percent_change_in_Sales') as 'Percent_change_in_Sales',\r\n         sum(total_qty.'current_quantity') as 'total_qty',\r\n         sum(total_qty.'Percent_Change_in_Quantity') as 'Percent_Change_in_Quantity',\r\n         sum(total_ordval.'current_avg_order_value') as 'avg_order_value',\r\n         sum(total_ordval.'Percent_Change_in_AvgOrderValue') as 'Percent_Change_in_AvgOrderValue',\r\n         sum(total_sv.'current_avg_week_revenue') as 'avg_weekly_revenue',\r\n         sum(total_sv.'Percent_Change_in_WeeklyRev') as 'Percent_Change_in_WeeklyRev',\r\n         sum(total_oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance',\r\n         sum(total_oos.'PoP_Out_of_Stock_percent') as 'PoP_Out_of_Stock_percent',\r\n         avg(total_comp.'current_comp') as 'Avg_CompliancePercentage',\r\n         avg(total_comp.'Compliance_Percentate_Change_vs_Previous_Period') as 'Compliance_Percentate_Change_vs_Previous_Period',\r\n         avg(promo.'current_promo') as 'Avg_PromoCompliance_Percentage',\r\n         avg(promo.'PoP_Promotion_Compliance_percent') as 'PoP_Promotion_Compliance_percent',\r\n         avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\n         avg(total_fcs.'PoP_Facings_Compliance_percent') as 'PoP_Facings_Compliance_percent',  \r\n         avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage',\r\n         avg(total_sos.'PoP_Share_of_Shelf_Compliance_percent') as 'PoP_Share_of_Shelf_Compliance_percent',  \r\n         avg(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage',\r\n         avg(total_inv.'PoP_Inventory_Comp_percent') as 'PoP_Inventory_Comp_percent',\r\n         sum(store_orders.'current_store_coverage') as 'store_coverage',\r\n         sum(store_orders.'Percent_Change_in_StoreCoverage') as 'Percent_Change_in_StoreCoverage';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "new_launched_prod_py_1",
            "lens_1_1",
            "Assortment_lens_1_1",
            "lens_3_2",
            "lens_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "sync",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "AllMetrics___Percent_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AllMetrics_&_PercentChanges",
        "numbers" : [ ],
        "query" : "---Decline in OutofStock (CG_RetailVisitKpi)\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ntotal_oos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter total_oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos_B = filter total_oos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_oos = group oos_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, oos_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'Product_Name_Custom', oos_B.'Product_Name_Custom') as 'Product_Name_Custom', \r\ncoalesce(oos_A.'AssessmentTask_Visit_RetailStore_Name', oos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name',\r\navg(oos_A.'Compliance_Percentage') as 'current_out_of_stock', avg(oos_B.'Compliance_Percentage') as 'previous_out_of_stock';\r\ntotal_oos = group total_oos by 'Product_Name_Custom';\r\ntotal_oos = foreach total_oos generate 'Product_Name_Custom', avg('current_out_of_stock') as 'current_out_of_stock', avg('previous_out_of_stock') as 'previous_out_of_stock';\r\ntotal_oos = foreach total_oos generate 'Product_Name_Custom', 'current_out_of_stock', 'previous_out_of_stock', (('current_out_of_stock'-'previous_out_of_stock')/('previous_out_of_stock')) as 'PoP_Out_of_Stock_percent';\r\ntotal_oos = foreach total_oos generate 'Product_Name_Custom','current_out_of_stock','PoP_Out_of_Stock_percent';\r\n-- Decline in Sales(CG_OrderItem)\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Product_Name') full, sales_B by ('Product_Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Product_Name', sales_B.'Product_Name') as 'Product_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sale = foreach total_sale generate 'Product_Name','current_sales', 'previous_sales', (('current_sales'-'previous_sales')/('previous_sales')) as 'Percent_change_in_Sales';\r\ntotal_sale = foreach total_sale generate 'Product_Name', 'current_sales', 'Percent_change_in_Sales';\r\n--Decline in Quantity(CG_OrderItem)\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nqty_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_qty = group qty_A by ('Product_Name') full, qty_B by ('Product_Name');\r\ntotal_qty = foreach total_qty generate coalesce(qty_A.'Product_Name', qty_B.'Product_Name') as 'Product_Name', sum(qty_A.'Quantity') as 'current_quantity', sum(qty_B.'Quantity') as 'previous_quantity';\r\ntotal_qty = foreach total_qty generate 'Product_Name','current_quantity', 'previous_quantity', (('current_quantity'-'previous_quantity')/('previous_quantity')) as 'Percent_Change_in_Quantity';\r\ntotal_qty = foreach total_qty generate 'Product_Name','current_quantity','Percent_Change_in_Quantity';\r\n---Decline in AvgOrderValue\r\nordval_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nordval_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_ordval = group ordval_A by ('Product_Name') full, ordval_B by ('Product_Name');\r\ntotal_ordval = foreach total_ordval generate coalesce(ordval_A.'Product_Name', ordval_B.'Product_Name') as 'Product_Name', (sum(ordval_A.'TotalPrice')/unique(ordval_A.'OrderId')) as 'current_avg_order_value', (sum(ordval_B.'TotalPrice')/unique(ordval_B.'OrderId')) as 'previous_avg_order_value';\r\ntotal_ordval = foreach total_ordval generate 'Product_Name', 'current_avg_order_value', 'previous_avg_order_value', (('current_avg_order_value'-'previous_avg_order_value')/('previous_avg_order_value')) as 'Percent_Change_in_AvgOrderValue';\r\ntotal_ordval = foreach total_ordval generate 'Product_Name','current_avg_order_value','Percent_Change_in_AvgOrderValue';\r\n---Decline in SalesVelocity\r\nsv_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsv_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sv = group sv_A by ('Product_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sv_B by ('Product_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sv_A.'Product_Name', sv_B.'Product_Name') as 'Product_Name', sv_A.'Order_ActivatedDate_Year'+\"-\"+ sv_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sv_B.'Order_ActivatedDate_Year'+\"-\"+ sv_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sv_A.'TotalPrice') as 'current_sales', sum(sv_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Product_Name';\r\ntotal_sv = foreach total_sv generate 'Product_Name', sum('current_sales')/unique('CurrentPeriod_YearWeek') as 'current_avg_week_revenue', sum('previous_sales')/unique('PreviousPeriod_YearWeek') as 'previous_avg_week_revenue';\r\ntotal_sv = foreach total_sv generate 'Product_Name', 'current_avg_week_revenue', 'previous_avg_week_revenue', (('current_avg_week_revenue'-'previous_avg_week_revenue')/('previous_avg_week_revenue')) as 'Percent_Change_in_WeeklyRev';\r\ntotal_sv = foreach total_sv generate 'Product_Name','current_avg_week_revenue','Percent_Change_in_WeeklyRev';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'Product_Name_Custom', comp_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'Product_Name_Custom';\r\ntotal_comp = foreach total_comp generate 'Product_Name_Custom', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'Product_Name_Custom', 'current_comp', 'previous_comp', (('current_comp'-'previous_comp')/('previous_comp')) as 'Compliance_Percentate_Change_vs_Previous_Period';\r\ntotal_comp = foreach total_comp generate 'Product_Name_Custom', 'current_comp', 'Compliance_Percentate_Change_vs_Previous_Period';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo_B = filter promo by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate coalesce(promo_A.'Product_Name_Custom', promo_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\npromo = group promo by 'Product_Name_Custom';\r\npromo = foreach promo generate 'Product_Name_Custom', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\npromo = foreach promo generate 'Product_Name_Custom', 'current_promo', 'previous_promo', (('current_promo'-'previous_promo')/'previous_promo') as 'PoP_Promotion_Compliance_percent';\r\npromo = foreach promo generate 'Product_Name_Custom','current_promo','PoP_Promotion_Compliance_percent';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nfcs_B = filter fcs by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_fcs = group fcs_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'Product_Name_Custom', fcs_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'Product_Name_Custom';\r\ntotal_fcs = foreach total_fcs generate 'Product_Name_Custom', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'Product_Name_Custom', 'current_fcs', 'previous_fcs', (('current_fcs'-'previous_fcs')/('previous_fcs')) as 'PoP_Facings_Compliance_percent';\r\ntotal_fcs = foreach total_fcs generate 'Product_Name_Custom','current_fcs', 'PoP_Facings_Compliance_percent';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nsos_B = filter sos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_sos = group sos_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'Product_Name_Custom', sos_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'Product_Name_Custom';\r\ntotal_sos = foreach total_sos generate 'Product_Name_Custom', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'Product_Name_Custom', 'current_sos', 'previous_sos', (('current_sos'-'previous_sos')/('previous_sos')) as 'PoP_Share_of_Shelf_Compliance_percent';\r\ntotal_sos = foreach total_sos generate 'Product_Name_Custom', 'current_sos', 'PoP_Share_of_Shelf_Compliance_percent';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ninv_B = filter inv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_inv = group inv_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, inv_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate coalesce(inv_A.'Product_Name_Custom', inv_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(inv_A.'AssessmentTask_Visit_RetailStore_Name', inv_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(inv_A.'Compliance_Percentage') as 'current_inventory', avg(inv_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inv = group total_inv by 'Product_Name_Custom';\r\ntotal_inv = foreach total_inv generate 'Product_Name_Custom', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inv = foreach total_inv generate 'Product_Name_Custom', 'current_inventory', 'previous_inventory', (('current_inventory'-'previous_inventory')/('previous_inventory')) as 'PoP_Inventory_Comp_percent';\r\ntotal_inv = foreach total_inv generate 'Product_Name_Custom', 'current_inventory', 'PoP_Inventory_Comp_percent';\r\n---Decline in StoreCoverage\r\nstore_orders_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders = group store_orders_A by ('Product_Name') full, store_orders_B by ('Product_Name');\r\nstore_orders = foreach store_orders generate coalesce(store_orders_A.'Product_Name', store_orders_B.'Product_Name') as 'Product_Name', (unique(store_orders_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage', (unique(store_orders_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'previous_store_coverage';\r\nstore_orders = foreach store_orders generate 'Product_Name', 'current_store_coverage', 'previous_store_coverage', (('current_store_coverage'-'previous_store_coverage')/('previous_store_coverage')) as 'Percent_Change_in_StoreCoverage';\r\nstore_orders = foreach store_orders generate 'Product_Name', 'current_store_coverage', 'Percent_Change_in_StoreCoverage';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by  ('Product_Name') full,\r\n              total_qty by  ('Product_Name') full,\r\n              total_ordval by ('Product_Name') full,\r\n              total_sv by  ('Product_Name') full,\r\n              total_oos by ('Product_Name_Custom') full,\r\n              total_comp by ('Product_Name_Custom') full,\r\n              promo by ('Product_Name_Custom') full,\r\n              total_fcs by  ('Product_Name_Custom') full,\r\n              total_sos by ('Product_Name_Custom') full,\r\n              total_inv by ('Product_Name_Custom') full,\r\n              store_orders by ('Product_Name');\r\nfinal_table = foreach final_table generate\r\n        coalesce(total_sale.'Product_Name', total_qty.'Product_Name', total_ordval.'Product_Name', total_sv.'Product_Name', total_oos.'Product_Name_Custom', total_comp.'Product_Name_Custom', promo.'Product_Name_Custom', total_fcs.'Product_Name_Custom', total_sos.'Product_Name_Custom', total_inv.'Product_Name_Custom', store_orders.'Product_Name') as 'Product_Name_Custom', \r\n        \r\n         sum(total_sale.'current_sales') as 'total_sales',\r\n         sum(total_sale.'Percent_change_in_Sales') as 'Percent_change_in_Sales',\r\n         sum(total_qty.'current_quantity') as 'total_qty',\r\n         sum(total_qty.'Percent_Change_in_Quantity') as 'Percent_Change_in_Quantity',\r\n         sum(total_ordval.'current_avg_order_value') as 'avg_order_value',\r\n         sum(total_ordval.'Percent_Change_in_AvgOrderValue') as 'Percent_Change_in_AvgOrderValue',\r\n         sum(total_sv.'current_avg_week_revenue') as 'avg_weekly_revenue',\r\n         sum(total_sv.'Percent_Change_in_WeeklyRev') as 'Percent_Change_in_WeeklyRev',\r\n         sum(total_oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance',\r\n         sum(total_oos.'PoP_Out_of_Stock_percent') as 'PoP_Out_of_Stock_percent',\r\n         avg(total_comp.'current_comp') as 'Avg_CompliancePercentage',\r\n         avg(total_comp.'Compliance_Percentate_Change_vs_Previous_Period') as 'Compliance_Percentate_Change_vs_Previous_Period',\r\n         avg(promo.'current_promo') as 'Avg_PromoCompliance_Percentage',\r\n         avg(promo.'PoP_Promotion_Compliance_percent') as 'PoP_Promotion_Compliance_percent',\r\n         avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\n         avg(total_fcs.'PoP_Facings_Compliance_percent') as 'PoP_Facings_Compliance_percent',  \r\n         avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage',\r\n         avg(total_sos.'PoP_Share_of_Shelf_Compliance_percent') as 'PoP_Share_of_Shelf_Compliance_percent',  \r\n         avg(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage',\r\n         avg(total_inv.'PoP_Inventory_Comp_percent') as 'PoP_Inventory_Comp_percent',\r\n         sum(store_orders.'current_store_coverage') as 'store_coverage',\r\n         sum(store_orders.'Percent_Change_in_StoreCoverage') as 'Percent_Change_in_StoreCoverage';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "new_launched_prod_py_1",
            "lens_1",
            "lens_1_1",
            "Assortment_lens_1_1",
            "lens_3_2"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "sync",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "IsYearEndFiscal_Valu_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "IsYearEndFiscal_Value",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_User36_tp.FullyQualifiedName}\";\nq = group q by 'IsYearEndFiscal_Computed';\nq = foreach q generate 'IsYearEndFiscal_Computed' as 'IsYearEndFiscal_Computed', count() as 'count';\nq = order q by 'IsYearEndFiscal_Computed' asc;\nq = limit q 2000;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "IsYearEndFiscal_Computed"
              ],
              "plots" : [
                "count"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "AllMetrics___Percent_5" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AllMetrics_&_PercentChanges",
        "numbers" : [ ],
        "query" : "---Decline in OutofStock (CG_RetailVisitKpi)\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\ntotal_oos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter total_oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos_B = filter total_oos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_oos = group oos_A by ('Product_Family','AssessmentTask_Visit_RetailStore_Name') full, oos_B by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'Product_Family', oos_B.'Product_Family') as 'Product_Family', \r\ncoalesce(oos_A.'AssessmentTask_Visit_RetailStore_Name', oos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name',\r\navg(oos_A.'Compliance_Percentage') as 'current_out_of_stock', avg(oos_B.'Compliance_Percentage') as 'previous_out_of_stock';\r\ntotal_oos = group total_oos by 'Product_Family';\r\ntotal_oos = foreach total_oos generate 'Product_Family', avg('current_out_of_stock') as 'current_out_of_stock', avg('previous_out_of_stock') as 'previous_out_of_stock';\r\ntotal_oos = foreach total_oos generate 'Product_Family', 'current_out_of_stock', 'previous_out_of_stock', (('current_out_of_stock'-'previous_out_of_stock')/('previous_out_of_stock')) as 'PoP_Out_of_Stock_percent';\r\ntotal_oos = foreach total_oos generate 'Product_Family','current_out_of_stock','PoP_Out_of_Stock_percent';\r\n-- Decline in Sales(CG_OrderItem)\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Product_Family') full, sales_B by ('Product_Family');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Product_Family', sales_B.'Product_Family') as 'Product_Family', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sale = foreach total_sale generate 'Product_Family','current_sales', 'previous_sales', (('current_sales'-'previous_sales')/('previous_sales')) as 'Percent_change_in_Sales';\r\ntotal_sale = foreach total_sale generate 'Product_Family', 'current_sales', 'Percent_change_in_Sales';\r\n--Decline in Quantity(CG_OrderItem)\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nqty_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_qty = group qty_A by ('Product_Family') full, qty_B by ('Product_Family');\r\ntotal_qty = foreach total_qty generate coalesce(qty_A.'Product_Family', qty_B.'Product_Family') as 'Product_Family', sum(qty_A.'Quantity') as 'current_quantity', sum(qty_B.'Quantity') as 'previous_quantity';\r\ntotal_qty = foreach total_qty generate 'Product_Family','current_quantity', 'previous_quantity', (('current_quantity'-'previous_quantity')/('previous_quantity')) as 'Percent_Change_in_Quantity';\r\ntotal_qty = foreach total_qty generate 'Product_Family','current_quantity','Percent_Change_in_Quantity';\r\n---Decline in AvgOrderValue\r\nordval_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nordval_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_ordval = group ordval_A by ('Product_Family') full, ordval_B by ('Product_Family');\r\ntotal_ordval = foreach total_ordval generate coalesce(ordval_A.'Product_Family', ordval_B.'Product_Family') as 'Product_Family', (sum(ordval_A.'TotalPrice')/unique(ordval_A.'OrderId')) as 'current_avg_order_value', (sum(ordval_B.'TotalPrice')/unique(ordval_B.'OrderId')) as 'previous_avg_order_value';\r\ntotal_ordval = foreach total_ordval generate 'Product_Family', 'current_avg_order_value', 'previous_avg_order_value', (('current_avg_order_value'-'previous_avg_order_value')/('previous_avg_order_value')) as 'Percent_Change_in_AvgOrderValue';\r\ntotal_ordval = foreach total_ordval generate 'Product_Family','current_avg_order_value','Percent_Change_in_AvgOrderValue';\r\n---Decline in SalesVelocity\r\nsv_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsv_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sv = group sv_A by ('Product_Family', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sv_B by ('Product_Family', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sv_A.'Product_Family', sv_B.'Product_Family') as 'Product_Family', sv_A.'Order_ActivatedDate_Year'+\"-\"+ sv_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sv_B.'Order_ActivatedDate_Year'+\"-\"+ sv_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sv_A.'TotalPrice') as 'current_sales', sum(sv_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Product_Family';\r\ntotal_sv = foreach total_sv generate 'Product_Family', sum('current_sales')/unique('CurrentPeriod_YearWeek') as 'current_avg_week_revenue', sum('previous_sales')/unique('PreviousPeriod_YearWeek') as 'previous_avg_week_revenue';\r\ntotal_sv = foreach total_sv generate 'Product_Family', 'current_avg_week_revenue', 'previous_avg_week_revenue', (('current_avg_week_revenue'-'previous_avg_week_revenue')/('previous_avg_week_revenue')) as 'Percent_Change_in_WeeklyRev';\r\ntotal_sv = foreach total_sv generate 'Product_Family','current_avg_week_revenue','Percent_Change_in_WeeklyRev';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('Product_Family','AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'Product_Family', comp_B.'Product_Family') as 'Product_Family', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'Product_Family';\r\ntotal_comp = foreach total_comp generate 'Product_Family', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'Product_Family', 'current_comp', 'previous_comp', (('current_comp'-'previous_comp')/('previous_comp')) as 'Compliance_Percentate_Change_vs_Previous_Period';\r\ntotal_comp = foreach total_comp generate 'Product_Family', 'current_comp', 'Compliance_Percentate_Change_vs_Previous_Period';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo_B = filter promo by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo_A by ('Product_Family','AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate coalesce(promo_A.'Product_Family', promo_B.'Product_Family') as 'Product_Family', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\npromo = group promo by 'Product_Family';\r\npromo = foreach promo generate 'Product_Family', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\npromo = foreach promo generate 'Product_Family', 'current_promo', 'previous_promo', (('current_promo'-'previous_promo')/'previous_promo') as 'PoP_Promotion_Compliance_percent';\r\npromo = foreach promo generate 'Product_Family','current_promo','PoP_Promotion_Compliance_percent';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nfcs_B = filter fcs by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_fcs = group fcs_A by ('Product_Family','AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'Product_Family', fcs_B.'Product_Family') as 'Product_Family', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'Product_Family';\r\ntotal_fcs = foreach total_fcs generate 'Product_Family', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'Product_Family', 'current_fcs', 'previous_fcs', (('current_fcs'-'previous_fcs')/('previous_fcs')) as 'PoP_Facings_Compliance_percent';\r\ntotal_fcs = foreach total_fcs generate 'Product_Family','current_fcs', 'PoP_Facings_Compliance_percent';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nsos_B = filter sos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_sos = group sos_A by ('Product_Family','AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'Product_Family', sos_B.'Product_Family') as 'Product_Family', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'Product_Family';\r\ntotal_sos = foreach total_sos generate 'Product_Family', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'Product_Family', 'current_sos', 'previous_sos', (('current_sos'-'previous_sos')/('previous_sos')) as 'PoP_Share_of_Shelf_Compliance_percent';\r\ntotal_sos = foreach total_sos generate 'Product_Family', 'current_sos', 'PoP_Share_of_Shelf_Compliance_percent';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ninv_B = filter inv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_inv = group inv_A by ('Product_Family','AssessmentTask_Visit_RetailStore_Name') full, inv_B by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate coalesce(inv_A.'Product_Family', inv_B.'Product_Family') as 'Product_Family', coalesce(inv_A.'AssessmentTask_Visit_RetailStore_Name', inv_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(inv_A.'Compliance_Percentage') as 'current_inventory', avg(inv_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inv = group total_inv by 'Product_Family';\r\ntotal_inv = foreach total_inv generate 'Product_Family', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inv = foreach total_inv generate 'Product_Family', 'current_inventory', 'previous_inventory', (('current_inventory'-'previous_inventory')/('previous_inventory')) as 'PoP_Inventory_Comp_percent';\r\ntotal_inv = foreach total_inv generate 'Product_Family', 'current_inventory', 'PoP_Inventory_Comp_percent';\r\n---Decline in StoreCoverage\r\nstore_orders_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders = group store_orders_A by ('Product_Family') full, store_orders_B by ('Product_Family');\r\nstore_orders = foreach store_orders generate coalesce(store_orders_A.'Product_Family', store_orders_B.'Product_Family') as 'Product_Family', (unique(store_orders_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage', (unique(store_orders_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'previous_store_coverage';\r\nstore_orders = foreach store_orders generate 'Product_Family', 'current_store_coverage', 'previous_store_coverage', (('current_store_coverage'-'previous_store_coverage')/('previous_store_coverage')) as 'Percent_Change_in_StoreCoverage';\r\nstore_orders = foreach store_orders generate 'Product_Family', 'current_store_coverage', 'Percent_Change_in_StoreCoverage';\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by  ('Product_Family') full,\r\n              total_qty by  ('Product_Family') full,\r\n              total_ordval by ('Product_Family') full,\r\n              total_sv by  ('Product_Family') full,\r\n              total_oos by ('Product_Family') full,\r\n              total_comp by ('Product_Family') full,\r\n              promo by ('Product_Family') full,\r\n              total_fcs by  ('Product_Family') full,\r\n              total_sos by ('Product_Family') full,\r\n              total_inv by ('Product_Family') full,\r\n              store_orders by ('Product_Family');\r\nfinal_table = foreach final_table generate\r\n        coalesce(total_sale.'Product_Family', total_qty.'Product_Family', total_ordval.'Product_Family', total_sv.'Product_Family', total_oos.'Product_Family', total_comp.'Product_Family', promo.'Product_Family', total_fcs.'Product_Family', total_sos.'Product_Family', total_inv.'Product_Family', store_orders.'Product_Family') as 'Product_Family', \r\n        \r\n         sum(total_sale.'current_sales') as 'total_sales',\r\n         sum(total_sale.'Percent_change_in_Sales') as 'Percent_change_in_Sales',\r\n         sum(total_qty.'current_quantity') as 'total_qty',\r\n         sum(total_qty.'Percent_Change_in_Quantity') as 'Percent_Change_in_Quantity',\r\n         sum(total_ordval.'current_avg_order_value') as 'avg_order_value',\r\n         sum(total_ordval.'Percent_Change_in_AvgOrderValue') as 'Percent_Change_in_AvgOrderValue',\r\n         sum(total_sv.'current_avg_week_revenue') as 'avg_weekly_revenue',\r\n         sum(total_sv.'Percent_Change_in_WeeklyRev') as 'Percent_Change_in_WeeklyRev',\r\n         sum(total_oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance',\r\n         sum(total_oos.'PoP_Out_of_Stock_percent') as 'PoP_Out_of_Stock_percent',\r\n         avg(total_comp.'current_comp') as 'Avg_CompliancePercentage',\r\n         avg(total_comp.'Compliance_Percentate_Change_vs_Previous_Period') as 'Compliance_Percentate_Change_vs_Previous_Period',\r\n         avg(promo.'current_promo') as 'Avg_PromoCompliance_Percentage',\r\n         avg(promo.'PoP_Promotion_Compliance_percent') as 'PoP_Promotion_Compliance_percent',\r\n         avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\n         avg(total_fcs.'PoP_Facings_Compliance_percent') as 'PoP_Facings_Compliance_percent',  \r\n         avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage',\r\n         avg(total_sos.'PoP_Share_of_Shelf_Compliance_percent') as 'PoP_Share_of_Shelf_Compliance_percent',  \r\n         avg(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage',\r\n         avg(total_inv.'PoP_Inventory_Comp_percent') as 'PoP_Inventory_Comp_percent',\r\n         sum(store_orders.'current_store_coverage') as 'store_coverage',\r\n         sum(store_orders.'Percent_Change_in_StoreCoverage') as 'Percent_Change_in_StoreCoverage';\r\n",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1",
            "new_launched_prod_py_1",
            "Assortment_lens_1_1",
            "lens_3_2",
            "lens_1",
            "lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "sync",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "order_metrics_pickli_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "order_metrics_picklist_refline",
        "numbers" : [ ],
        "query" : "-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\norder1 = filter order1 by 'Product_ProductCategory_ProductCategory_Name'==\"{{cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\").asString()}}\";\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','OrderId');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}'+\"-\"+'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek', 'OrderId', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('Sales') as 'total_sales', sum('Quantity') as 'total_qty', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue';\r\norder1 = group order1 by 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('total_sales') as 'total_sales', avg(sum('total_sales')) over([..] partition by all) as 'total_sales_refline', sum('total_qty') as 'total_qty', avg(sum('total_qty')) over([..] partition by all) as 'total_qty_refline', sum('avg_order_value') as 'avg_order_value', avg(sum('avg_order_value')) over([..] partition by all) as 'avg_order_value_refline', sum('avg_weekly_revenue') as 'avg_weekly_revenue', avg(sum('avg_weekly_revenue')) over([..] partition by all) as 'avg_weekly_revenue_refline';\r\nfinal_table = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', '{{cell(static_4.selection, 0, \"refline_name_y\").asString()}}' as 'Reference Line', number_to_string('{{cell(static_4.selection, 0, \"refline_name_y\").asString()}}', \"#,###0.00\") as 'refline_value_label', (case when \"{{cell(static_4.selection, 0, \"refline_name_y\").asString()}}\" == \"total_qty_refline\" then \"\" else \"$\" end) as 'refline_text';\r\nfinal_table = limit final_table 1;\r\n",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_1_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Brand_lens_1",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'Product_Family', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\ncomp_result = group comp_result by ('Product_Family');\r\ncomp_result = foreach comp_result generate 'Product_Family', avg('Avg_Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = group order1 by ('Product_Family','OrderId','Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Product_Family', 'OrderId', 'Order_ActivatedDate_Year'+\"-\"+'Order_ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Product_Family');\r\norder1 = foreach order1 generate 'Product_Family', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = group store_cv by ('Product_Family');\r\nstore_cv = foreach store_cv generate 'Product_Family', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('Product_Family', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos = foreach sos generate 'Product_Family', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by ('Product_Family');\r\nsos = foreach sos generate 'Product_Family', avg('Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('Product_Family', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate 'Product_Family', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by ('Product_Family');\r\noos_result = foreach oos_result generate 'Product_Family', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n\r\n--FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('Product_Family', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs = foreach fcs generate 'Product_Family', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by ('Product_Family');\r\nfcs = foreach fcs generate 'Product_Family', avg('Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n\r\n--PromotionCompliance\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'Product_Family', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by ('Product_Family');\r\npromo = foreach promo generate 'Product_Family', avg('Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n\r\n--InventoryCompliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('Product_Family','AssessmentTask_Visit_RetailStore_Name');\r\ninv = foreach inv generate 'Product_Family', 'AssessmentTask_Visit_RetailStore_Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by ('Product_Family');\r\ninv = foreach inv generate 'Product_Family', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Product_Family') full, sos by ('Product_Family') full, oos_result by ('Product_Family') full, comp_result by ('Product_Family') full,fcs by ('Product_Family') full, promo by ('Product_Family') full, inv by ('Product_Family') full, store_cv by ('Product_Family');\r\n\r\nfinal_table = foreach final_table generate coalesce(order1.'Product_Family', comp_result.'Product_Family', sos.'Product_Family',oos_result.'Product_Family', fcs.'Product_Family', promo.'Product_Family', inv.'Product_Family', store_cv.'Product_Family') as 'Product_Family', sum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage';\r\n\r\nfinal_table = group final_table by 'Product_Family';\r\nfinal_table = foreach final_table generate 'Product_Family', {{cell(static_4.selection,0,\"Field_value_y\").asObject()}}  as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', {{cell(static_5.selection,0,\"Field_value_x\").asObject()}}  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', dense_rank() over([..] partition by all order by coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0) desc) as 'rank_desc',count() as 'row_count';\r\n\r\nfinal_table = group final_table by ('Product_Family','row_count','rank_desc');\r\n\r\nfinal_table = foreach final_table generate 'Product_Family', coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0)  as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', coalesce({{cell(static_5.selection,0,\"Field_value_x\").asObject()}},0)  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', sum('row_count') over([..] partition by all) as 'prod_cat_count', 'rank_desc';\r\n\r\nfinal_table = foreach final_table generate 'Product_Family', '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', 'prod_cat_count',  'rank_desc', (case when 'prod_cat_count'>2 then round({{cell(static_7.selection, 0, \"max\").asObject()}}*'prod_cat_count') else ceil({{cell(static_7.selection, 0, \"max\").asObject()}}*'prod_cat_count') end) as 'final_limit_max', (case when 'prod_cat_count'>2 then round({{cell(static_7.selection, 0, \"min\").asObject()}}*'prod_cat_count') else ceil({{cell(static_7.selection, 0, \"min\").asObject()}}*'prod_cat_count') end) as 'final_limit_min';\r\n\r\nfinal_table = filter final_table by 'rank_desc'>'final_limit_min' and 'rank_desc'<='final_limit_max';\r\n\r\nfinal_table = foreach final_table generate 'Product_Family', '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}', '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}';\r\n\r\n--final_table = order final_table by 'Brand' desc;",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Current_Period_1",
            "Product_Family_1",
            "Name_2",
            "Name_1"
          ]
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "radiusRatio" : 5,
            "showActionMenu" : true,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "visualizationType" : "scatter",
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Total_Stores__1_1" : {
        "broadcastFacet" : false,
        "groups" : [ ],
        "label" : "Total_Stores__1",
        "numbers" : [ ],
        "query" : "stores = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\nstores = group stores by all;\nstores = foreach stores generate unique(stores.'Name') as 'total_stores';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : false,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_3_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "lens_3",
        "numbers" : [ ],
        "query" : "---Decline in OutofStock (CG_RetailVisitKpi)\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ntotal_oos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\n\r\noos_A = filter total_oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos_B = filter total_oos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\n\r\ntotal_oos = group oos_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, oos_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'Product_Name_Custom', oos_B.'Product_Name_Custom') as 'Product_Name_Custom', \r\ncoalesce(oos_A.'AssessmentTask_Visit_RetailStore_Name', oos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name',\r\navg(oos_A.'Compliance_Percentage') as 'current_out_of_stock', avg(oos_B.'Compliance_Percentage') as 'previous_out_of_stock';\r\ntotal_oos = group total_oos by 'Product_Name_Custom';\r\ntotal_oos = foreach total_oos generate 'Product_Name_Custom', avg('current_out_of_stock') as 'current_out_of_stock', avg('previous_out_of_stock') as 'previous_out_of_stock';\r\ntotal_oos = foreach total_oos generate 'Product_Name_Custom', 'current_out_of_stock', 'previous_out_of_stock', (('current_out_of_stock'-'previous_out_of_stock')/('previous_out_of_stock')) as 'percent_change_out_of_stock_thisyear';\r\ntotal_oos = foreach total_oos generate 'Product_Name_Custom','current_out_of_stock','percent_change_out_of_stock_thisyear';\r\n\r\n-- Decline in Sales(CG_OrderItem)\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\n\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsales_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\n\r\ntotal_sale = group sales_A by ('Product_Name') full, sales_B by ('Product_Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Product_Name', sales_B.'Product_Name') as 'Product_Name', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sale = foreach total_sale generate 'Product_Name','current_sales', 'previous_sales', (('current_sales'-'previous_sales')/('previous_sales')) as 'percent_change_sales_thisyear';\r\ntotal_sale = foreach total_sale generate 'Product_Name', 'current_sales', 'percent_change_sales_thisyear';\r\n\r\n--Decline in Quantity(CG_OrderItem)\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nqty_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\n\r\ntotal_qty = group qty_A by ('Product_Name') full, qty_B by ('Product_Name');\r\ntotal_qty = foreach total_qty generate coalesce(qty_A.'Product_Name', qty_B.'Product_Name') as 'Product_Name', sum(qty_A.'Quantity') as 'current_quantity', sum(qty_B.'Quantity') as 'previous_quantity';\r\ntotal_qty = foreach total_qty generate 'Product_Name','current_quantity', 'previous_quantity', (('current_quantity'-'previous_quantity')/('previous_quantity')) as 'percent_change_quantity_thisyear';\r\ntotal_qty = foreach total_qty generate 'Product_Name','current_quantity','percent_change_quantity_thisyear';\r\n\r\n---Decline in AvgOrderValue\r\nordval_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nordval_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\n\r\ntotal_ordval = group ordval_A by ('Product_Name') full, ordval_B by ('Product_Name');\r\ntotal_ordval = foreach total_ordval generate coalesce(ordval_A.'Product_Name', ordval_B.'Product_Name') as 'Product_Name', (sum(ordval_A.'TotalPrice')/unique(ordval_A.'OrderId')) as 'current_avg_order_value', (sum(ordval_B.'TotalPrice')/unique(ordval_B.'OrderId')) as 'previous_avg_order_value';\r\ntotal_ordval = foreach total_ordval generate 'Product_Name', 'current_avg_order_value', 'previous_avg_order_value', (('current_avg_order_value'-'previous_avg_order_value')/('previous_avg_order_value')) as 'percent_change_avg_order_value_thisyear';\r\ntotal_ordval = foreach total_ordval generate 'Product_Name','current_avg_order_value','percent_change_avg_order_value_thisyear';\r\n\r\n---Decline in SalesVelocity\r\nsv_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nsv_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\n\r\ntotal_sv = group sv_A by ('Product_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week') full, sv_B by ('Product_Name', 'Order_ActivatedDate_Year', 'Order_ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sv_A.'Product_Name', sv_B.'Product_Name') as 'Product_Name', sv_A.'Order_ActivatedDate_Year'+\"-\"+ sv_A.'Order_ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sv_B.'Order_ActivatedDate_Year'+\"-\"+ sv_B.'Order_ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sv_A.'TotalPrice') as 'current_sales', sum(sv_B.'TotalPrice') as 'previous_sales';\r\n\r\ntotal_sv = group total_sv by 'Product_Name';\r\ntotal_sv = foreach total_sv generate 'Product_Name', sum('current_sales')/unique('CurrentPeriod_YearWeek') as 'current_avg_week_revenue', sum('previous_sales')/unique('PreviousPeriod_YearWeek') as 'previous_avg_week_revenue';\r\ntotal_sv = foreach total_sv generate 'Product_Name', 'current_avg_week_revenue', 'previous_avg_week_revenue', (('current_avg_week_revenue'-'previous_avg_week_revenue')/('previous_avg_week_revenue')) as 'percent_change_avg_week_revenue_thisyear';\r\ntotal_sv = foreach total_sv generate 'Product_Name','current_avg_week_revenue','percent_change_avg_week_revenue_thisyear';\r\n\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\n\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\n\r\ntotal_comp = group comp_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, comp_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'Product_Name_Custom', comp_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(comp_A.'AssessmentTask_Visit_RetailStore_Name', comp_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp';\r\ntotal_comp = group total_comp by 'Product_Name_Custom';\r\ntotal_comp = foreach total_comp generate 'Product_Name_Custom', avg('current_comp') as 'current_comp', avg('previous_comp') as 'previous_comp';\r\ntotal_comp = foreach total_comp generate 'Product_Name_Custom', 'current_comp', 'previous_comp', (('current_comp'-'previous_comp')/('previous_comp')) as 'percent_change_comp_thisyear';\r\ntotal_comp = foreach total_comp generate 'Product_Name_Custom', 'current_comp', 'percent_change_comp_thisyear';\r\n\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\n\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo_B = filter promo by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\n\r\npromo = group promo_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, promo_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate coalesce(promo_A.'Product_Name_Custom', promo_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(promo_A.'AssessmentTask_Visit_RetailStore_Name', promo_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo';\r\npromo = group promo by 'Product_Name_Custom';\r\npromo = foreach promo generate 'Product_Name_Custom', avg('current_promo') as 'current_promo', avg('previous_promo') as 'previous_promo';\r\npromo = foreach promo generate 'Product_Name_Custom', 'current_promo', 'previous_promo', (('current_promo'-'previous_promo')/'previous_promo') as 'percent_change_promo_thisyear';\r\npromo = foreach promo generate 'Product_Name_Custom','current_promo','percent_change_promo_thisyear';\r\n\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\n\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nfcs_B = filter fcs by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\n\r\ntotal_fcs = group fcs_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, fcs_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'Product_Name_Custom', fcs_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(fcs_A.'AssessmentTask_Visit_RetailStore_Name', fcs_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs';\r\ntotal_fcs = group total_fcs by 'Product_Name_Custom';\r\ntotal_fcs = foreach total_fcs generate 'Product_Name_Custom', avg('current_fcs') as 'current_fcs', avg('previous_fcs') as 'previous_fcs';\r\ntotal_fcs = foreach total_fcs generate 'Product_Name_Custom', 'current_fcs', 'previous_fcs', (('current_fcs'-'previous_fcs')/('previous_fcs')) as 'percent_change_fcs_thisyear';\r\ntotal_fcs = foreach total_fcs generate 'Product_Name_Custom','current_fcs', 'percent_change_fcs_thisyear';\r\n\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\n\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nsos_B = filter sos by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\n\r\ntotal_sos = group sos_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, sos_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'Product_Name_Custom', sos_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(sos_A.'AssessmentTask_Visit_RetailStore_Name', sos_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos';\r\ntotal_sos = group total_sos by 'Product_Name_Custom';\r\ntotal_sos = foreach total_sos generate 'Product_Name_Custom', avg('current_sos') as 'current_sos', avg('previous_sos') as 'previous_sos';\r\ntotal_sos = foreach total_sos generate 'Product_Name_Custom', 'current_sos', 'previous_sos', (('current_sos'-'previous_sos')/('previous_sos')) as 'percent_change_sos_thisyear';\r\ntotal_sos = foreach total_sos generate 'Product_Name_Custom', 'current_sos', 'percent_change_sos_thisyear';\r\n\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\n\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ninv_B = filter inv by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\n\r\ntotal_inv = group inv_A by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name') full, inv_B by ('Product_Name_Custom','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate coalesce(inv_A.'Product_Name_Custom', inv_B.'Product_Name_Custom') as 'Product_Name_Custom', coalesce(inv_A.'AssessmentTask_Visit_RetailStore_Name', inv_B.'AssessmentTask_Visit_RetailStore_Name') as 'AssessmentTask_Visit_RetailStore_Name', avg(inv_A.'Compliance_Percentage') as 'current_inventory', avg(inv_B.'Compliance_Percentage') as 'previous_inventory';\r\ntotal_inv = group total_inv by 'Product_Name_Custom';\r\ntotal_inv = foreach total_inv generate 'Product_Name_Custom', avg('current_inventory') as 'current_inventory', avg('previous_inventory') as 'previous_inventory';\r\ntotal_inv = foreach total_inv generate 'Product_Name_Custom', 'current_inventory', 'previous_inventory', (('current_inventory'-'previous_inventory')/('previous_inventory')) as 'percent_change_inventory_thisyear';\r\ntotal_inv = foreach total_inv generate 'Product_Name_Custom', 'current_inventory', 'percent_change_inventory_thisyear';\r\n\r\n---Decline in StoreCoverage\r\nstore_orders_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders_B = filter orders by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\n\r\nstore_orders = group store_orders_A by ('Product_Name') full, store_orders_B by ('Product_Name');\r\nstore_orders = foreach store_orders generate coalesce(store_orders_A.'Product_Name', store_orders_B.'Product_Name') as 'Product_Name', (unique(store_orders_A.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage', (unique(store_orders_B.'Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'previous_store_coverage';\r\nstore_orders = foreach store_orders generate 'Product_Name', 'current_store_coverage', 'previous_store_coverage', (('current_store_coverage'-'previous_store_coverage')/('previous_store_coverage')) as 'percent_change_store_coverage_thisyear';\r\nstore_orders = foreach store_orders generate 'Product_Name', 'current_store_coverage', 'percent_change_store_coverage_thisyear';\r\n\r\n--final multidataset table\r\nfinal_table = cogroup total_sale by  ('Product_Name') full,\r\n              total_qty by  ('Product_Name') full,\r\n              total_ordval by ('Product_Name') full,\r\n              total_sv by  ('Product_Name') full,\r\n              total_oos by ('Product_Name_Custom') full,\r\n              total_comp by ('Product_Name_Custom') full,\r\n              promo by ('Product_Name_Custom') full,\r\n              total_fcs by  ('Product_Name_Custom') full,\r\n              total_sos by ('Product_Name_Custom') full,\r\n              total_inv by ('Product_Name_Custom') full,\r\n              store_orders by ('Product_Name');\r\n\r\nfinal_table = foreach final_table generate\r\n        coalesce(total_sale.'Product_Name', total_qty.'Product_Name', total_ordval.'Product_Name', total_sv.'Product_Name', total_oos.'Product_Name_Custom', total_comp.'Product_Name_Custom', promo.'Product_Name_Custom', total_fcs.'Product_Name_Custom', total_sos.'Product_Name_Custom', total_inv.'Product_Name_Custom', store_orders.'Product_Name') as 'Product_Name_Custom', \r\n        \r\n         sum(total_sale.'current_sales') as 'total_sales',\r\n         sum(total_sale.'percent_change_sales_thisyear') as 'percent_change_sales_thisyear',\r\n         sum(total_qty.'current_quantity') as 'total_qty',\r\n         sum(total_qty.'percent_change_quantity_thisyear') as 'percent_change_quantity_thisyear',\r\n         sum(total_ordval.'current_avg_order_value') as 'avg_order_value',\r\n         sum(total_ordval.'percent_change_avg_order_value_thisyear') as 'percent_change_avg_order_value_thisyear',\r\n         sum(total_sv.'current_avg_week_revenue') as 'avg_weekly_revenue',\r\n         sum(total_sv.'percent_change_avg_week_revenue_thisyear') as 'percent_change_avg_week_revenue_thisyear',\r\n         sum(total_oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance',\r\n         sum(total_oos.'percent_change_out_of_stock_thisyear') as 'percent_change_out_of_stock_thisyear',\r\n         avg(total_comp.'current_comp') as 'Avg_CompliancePercentage',\r\n         avg(total_comp.'percent_change_comp_thisyear') as 'percent_change_comp_thisyear',\r\n         avg(promo.'current_promo') as 'Avg_PromoCompliance_Percentage',\r\n         avg(promo.'percent_change_promo_thisyear') as 'percent_change_promo_thisyear',\r\n         avg(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\n         avg(total_fcs.'percent_change_fcs_thisyear') as 'percent_change_fcs_thisyear',  \r\n         avg(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage',\r\n         avg(total_sos.'percent_change_sos_thisyear') as 'percent_change_sos_thisyear',  \r\n         avg(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage',\r\n         avg(total_inv.'percent_change_inventory_thisyear') as 'percent_change_inventory_thisyear',\r\n         sum(store_orders.'current_store_coverage') as 'store_coverage',\r\n         sum(store_orders.'percent_change_store_coverage_thisyear') as 'percent_change_store_coverage_thisyear';\r\n\r\nfinal_table = filter final_table by '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}' is not null;\r\n\r\nfinal_table = foreach final_table generate 'Product_Name_Custom', '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}', '{{cell(static_10.selection,0,\"Field_Alias_y1\").asObject()}}' as '% Change';\r\n\r\nfinal_table = order final_table by '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}' {{cell(OrderBy_Static_1.selection, 0, \"OrderBy\").asObject()}};",
        "receiveFacetSource" : {
          "mode" : "include",
          "steps" : [
            "Product_Family_1",
            "Assortment_Assortmen_2",
            "Name_2",
            "Name_1"
          ]
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "lens_3_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Product_Promo_Trend__1",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = filter retail_store by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day')\")}};\r\nretail_store = group retail_store by ('CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\n--OutOfStockOccurences--\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nretail = filter retail by 'Product_Name_Custom'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\noos = filter retail by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_A = filter oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos = group oos_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\noos = foreach oos generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_out_of_stock';\r\noos = group oos by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\noos = foreach oos generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_out_of_stock') as 'current_out_of_stock';\r\n--Revenue--\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_Name'==\"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\nsales_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_sale = foreach total_sale generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('TotalPrice') as 'current_sales';\r\n--Quantity--\r\nqty_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_qty = group qty_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_qty = foreach total_qty generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('Quantity') as 'current_quantity';\r\n--AvgOrderValue--\r\nordval_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_ordval = group ordval_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_ordval = foreach total_ordval generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (sum('TotalPrice')/unique('OrderId')) as 'current_avg_order_value';\r\n--AvgWeeklyRevenue--\r\nweekrev_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\ntotal_weekrev = group weekrev_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\ntotal_weekrev = foreach total_weekrev generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('TotalPrice') as 'current_sales';\r\ntotal_weekrev = group total_weekrev by 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_weekrev = foreach total_weekrev generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (sum('current_sales')/unique('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}')) as 'current_avg_week_revenue';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_comp';\r\ntotal_comp = group total_comp by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_comp') as 'current_comp';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_A = filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_promo';\r\npromo = group promo by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\npromo = foreach promo generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_promo') as 'current_promo';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_A = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_fcs = group fcs_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_fcs';\r\ntotal_fcs = group total_fcs by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_fcs') as 'current_fcs';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_A = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_sos = group sos_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_sos';\r\ntotal_sos = group total_sos by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_sos') as 'current_sos';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_A = filter inv by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_inv = group inv_A by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_inventory';\r\ntotal_inv = group total_inv by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('current_inventory') as 'current_inventory';\r\n---Decline in StoreCoverage\r\nstore_orders_A = filter orders by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day')\")}};\r\nstore_orders = group store_orders_A by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nstore_orders = foreach store_orders generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage';\r\n--Metric_multidatset---\r\nfinal_table = cogroup\r\n             retail_store by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             total_sale by 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             total_qty by  'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             total_ordval  by  'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             total_weekrev by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             oos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_comp by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             promo by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_fcs by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_sos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             total_inv by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full,\r\n             store_orders by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nfinal_table = foreach final_table generate coalesce(retail_store.'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_sale.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_qty.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_ordval.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_weekrev.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',  oos.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_comp.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', promo.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_fcs.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_sos.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', total_inv.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', store_orders.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}')  as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n\r\nsum(total_sale.'current_sales') as 'total_sales', sum(total_qty.'current_quantity') as 'total_qty', sum(total_ordval.'current_avg_order_value') as 'avg_order_value', sum(total_weekrev.'current_avg_week_revenue') as 'avg_weekly_revenue', avg(oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance', sum(total_comp.'current_comp') as 'Avg_CompliancePercentage', sum(promo.'current_promo') as 'Avg_PromoCompliance_Percentage', sum(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', sum(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', sum(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage', sum(store_orders.'current_store_coverage') as 'store_coverage';\r\n---Promotions---\r\nq = load \"${App.Datasets.CG_PromotionChannel36_tp.FullyQualifiedName}\";\r\nq =  filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [dateRange([1970,01,01], {{cell(date_parser_2.result, 0, \"Date_Max\").asString()}})] and date('EndDate_Computed_Year', 'EndDate_Computed_Month', 'EndDate_Computed_Day') in [dateRange({{cell(date_parser_2.result, 0, \"Date_Min\").asString()}}, [2100,12,31])];\r\nq = filter q by 'PromotionId' in {{coalesce(column(PromoChannel_Combine_2.result, [\"PromotionId\"]),toArray(\"NA\")).asString()}};\r\nq1 = group q by ('StartDate', 'StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion_Name', 'Id');\r\nq1 = foreach q1 generate 'Id', 'Promotion_Name', 'StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Year', 'StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Week', count(q) as 'A', date_to_epoch(toDate('StartDate' + \" 00:00:00\")) as Start, string_to_number(StartDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}} + StartDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}) as 'StartYearWeek';\r\nq2 = group q by ('EndDate_Computed', 'EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion_Name', 'Id');\r\nq2 = foreach q2 generate 'Id', 'Promotion_Name','EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Year', 'EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Week', count() as 'A', date_to_epoch(toDate('EndDate_Computed' + \" 00:00:00\")) as End, string_to_number(EndDate_Computed_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}} + EndDate_Computed_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}) as 'EndYearWeek';\r\nq = union q1,q2;\r\nq = group q by ('Id', 'Promotion_Name', 'Year', 'Week');\r\nq = foreach q generate 'Id'+\"_\"+'Promotion_Name' as 'Key','Id', 'Promotion_Name', 'Year', 'Week', sum('A') as 'A', sum(Start) as Start, sum(End) as End, sum('StartYearWeek') as 'StartYearWeek', sum('EndYearWeek') as 'EndYearWeek';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"), partition = 'Key');\r\nq = group q by ('Key', 'Year', 'Week');\r\nq = foreach q generate substr('Key',index_of('Key',\"_\")+1) as 'Promotion_Name_New', 'Year', 'Week', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', coalesce(sum(A) , sum(sum('A')) over([..-1] partition by ('Key') order by ('Year', 'Week')),0) as 'Value', toString(toDate(max(sum('Start')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as Start, toString(toDate(max(sum('End')) over ([..] partition by 'Key')), \"yyyy-MM-dd\") as End, string_to_number('Year'+'Week') as 'YearWeek_filter',\r\n\r\nmax(sum('StartYearWeek')) over ([..] partition by 'Key') as 'StartYearWeek', max(sum('EndYearWeek')) over ([..] partition by 'Key') as 'EndYearWeek', case when string_to_number('Year'+'Week') <= max(sum('EndYearWeek')) over ([..] partition by 'Key') and string_to_number('Year'+'Week') >= max(sum('StartYearWeek')) over ([..] partition by 'Key') then 1 else 0 end as 'Promotion_Period_Filter_Flag';\r\nq = filter q by 'Promotion_Period_Filter_Flag' == 1;\r\nq = filter q by 'YearWeek_filter' >= string_to_number(\"{{cell(date_parser_2.result, 0, \"min_YearWeek\").asString()}}\") and 'YearWeek_filter' <= string_to_number(\"{{cell(date_parser_2.result, 0, \"max_YearWeek\").asString()}}\");\r\nq = foreach q generate 'Promotion_Name_New', 'Year', 'Week', 'Value', 'Start' as 'Start', 'End' as 'End';\r\nq = fill q by (dateCols=('Year','Week', \"Y-W\"));\r\nq = group q by ('Promotion_Name_New', 'Year', 'Week', 'Start', 'End');\r\nq = foreach q generate 'Promotion_Name_New', 'Year' + \"~~~\" + 'Week' as 'Year~~~Week', sum('Value') as 'Value', 'Start' as 'Start', 'End' as 'End';\r\nq = filter q by 'Promotion_Name_New'==\"{{cell(Promotion_Final_2.selection, 0, \"Promotion Name\").asString()}}\";\r\nq = foreach q generate 'Promotion_Name_New' as 'Promotion Name', 'Year~~~Week', 'Value', 'Start' as 'Start', 'End' as 'End';\r\n---result_multidataset---\r\nresult = cogroup final_table by ('CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') full, q by ('Year~~~Week');\r\nresult = foreach result generate coalesce(final_table.'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', q.'Year~~~Week') as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', first(q.'Promotion Name') as 'Promotion Name', first(q.'Start') as 'Start', first(q.'End') as 'End',\r\n\r\nsum(final_table.'total_sales') as 'total_sales', sum(final_table.'total_qty') as 'total_qty', sum(final_table.'avg_order_value') as 'avg_order_value', sum(final_table.'avg_weekly_revenue') as 'avg_weekly_revenue', avg(final_table.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', sum(final_table.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', sum(final_table.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', sum(final_table.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', sum(final_table.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', sum(final_table.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(final_table.'store_coverage') as 'store_coverage', min(q.'Value') as 'Value';\r\nresult = filter result by '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}' is not null or 'Value' is not null;\r\nresult = foreach result generate 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Promotion Name', 'Start' as 'Start Date', 'End' as 'End Date', coalesce('{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}',0) as '{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}', coalesce('Value',0) as 'Promotion', case when 'Value'==1 then \"Promotion is running\" else \"Promotion has ended\" end as 'Promotion Status';\r\nresult = order result by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "lens_3_3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Brand_lens_3",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore20_tp.FullyQualifiedName}\";\r\nretail_store = group retail_store by ('CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\n\r\n--StoreCompliance\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\ncomp_result = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp_result by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_Compliance_Percentage';\r\ncomp_result = group comp_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ncomp_result = foreach comp_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',avg('avg_Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','OrderId');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}'+\"-\"+'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek', 'OrderId', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\norder1 = foreach order1 generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue';\r\n-- Store Coverage\r\nstore_cv = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\nstore_cv = filter store_cv by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\nstore_cv = group store_cv by ('Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}','Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}');\r\nstore_cv = foreach store_cv generate 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'store_coverage';\r\n--OutOfStockCompliance\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance';\r\n--Average Share of Shelf Compliance\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos_result = group sos by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\nsos_result = group sos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nsos_result = foreach sos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('avg_SOSCompliance_Percentage') as 'avg_SOSCompliance_Percentage';\r\n--Average Facings Compliance\r\n fcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs_result = group fcs by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\nfcs_result = group fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nfcs_result = foreach fcs_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('avg_FCSCompliance_Percentage') as 'avg_FCSCompliance_Percentage';\r\n--Average Inventory Compliance\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv_result = group inv by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv_result = group inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\ninv_result = foreach inv_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',\r\n avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--Average Promotion Compliance\r\n promo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Product_Family' == \"{{cell(lens_1_1.selection, 0, \"Product_Family\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo_result = group promo by ('ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name');\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\npromo_result = group promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\npromo_result = foreach promo_result generate 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', avg('avg_PromoCompliance_Percentage') as 'avg_PromoCompliance_Percentage';\r\n--final multidataset table\r\nfinal_table = cogroup\r\n             retail_store by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             order1 by  'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             store_cv by  'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             comp_result by  'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             sos_result  by  'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             fcs_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             promo_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' full,\r\n             inv_result by 'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}';\r\nfinal_table = foreach final_table generate\r\ncoalesce(retail_store.'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', order1.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', store_cv.'Order_ActivatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~Order_ActivatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', comp_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',sos_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',fcs_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',oos_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}',promo_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', inv_result.'ActualVisitStartTime_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}') as 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', sum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'Sales') as 'total_sales',sum(order1.'Quantity') as 'total_qty', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',\r\n         avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance',\r\n         avg(comp_result.'Avg_Compliance_Percentage') as 'Avg_CompliancePercentage',\r\n         avg(fcs_result.'avg_FCSCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage',\r\n         avg(sos_result.'avg_SOSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage',\r\n         avg(promo_result.'avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', sum(store_cv.'store_coverage') as 'store_coverage',\r\n         avg(inv_result.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table = filter final_table by '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}' is not null or '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate\r\n'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}', coalesce({{cell(static_4.selection,0,\"Field_value_y\").asObject()}},0) as '{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}', coalesce({{cell(static_5.selection,0,\"Field_value_x\").asObject()}},0)  as '{{cell(static_5.selection,0,\"Api_name_x\").asObject()}}';\r\nfinal_table = order final_table by 'CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_3_2",
            "new_launched_prod_py_1",
            "lens_1",
            "Assortment_lens_1_1",
            "lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "top-center",
              "inside" : false
            },
            "axisMode" : "dual",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "Quantity_Gauge_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Quantity_Gauge",
        "numbers" : [ ],
        "query" : "total_qty = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\ntotal_qty_A = filter total_qty by 'Product_Name' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ntotal_qty_A = group total_qty_A by 'Product_Name';\r\ntotal_qty_A = foreach total_qty_A generate 'Product_Name' as 'Product', sum('Quantity') as 'Quantity', \"select\" as 'text', \"A\" as 'order';\r\ntotal_qty_B = group total_qty by 'Product_Name';\r\ntotal_qty_B = foreach total_qty_B generate 'Product_Name' as 'Product', sum('Quantity') as 'max_Quantity', \"max\" as 'text', \"B\" as 'order';\r\ntotal_qty_B = order total_qty_B by 'max_Quantity' desc;\r\ntotal_qty_B = limit total_qty_B 1;\r\ntotal_qty_C = group total_qty by 'Product_Name';\r\ntotal_qty_C = foreach total_qty_C generate 'Product_Name' as 'Product', sum('Quantity') as 'min_Quantity', \"min\" as 'text', \"C\" as 'order';\r\ntotal_qty_C = order total_qty_C by 'min_Quantity' asc;\r\ntotal_qty_C = limit total_qty_C 1;\r\ntotal_qty_D = group total_qty by 'Product_Name';\r\ntotal_qty_D = foreach total_qty_D generate 'Product_Name' as 'Product', avg(sum('Quantity')) over([..] partition by all) as 'avg_Quantity', \"avg\" as 'text', \"D\" as 'order';\r\ntotal_qty_D = limit total_qty_D 1;\r\nqty = cogroup total_qty_A by ('Product', 'order') full, total_qty_B by ('Product', 'order') full, total_qty_C by ('Product', 'order') full, total_qty_D by ('Product', 'order');\r\nqty = foreach qty generate coalesce(total_qty_A.'Product', total_qty_B.'Product', total_qty_C.'Product', total_qty_D.'Product') as 'Product', coalesce(total_qty_A.'order', total_qty_B.'order', total_qty_C.'order', total_qty_D.'order') as 'order', sum(total_qty_A.'Quantity') as 'Quantity', coalesce(sum(total_qty_A.'Quantity'),0) as 'Quantity_coalesced', coalesce(sum(total_qty_B.'max_Quantity'), 0) as 'max_Quantity', coalesce(sum(total_qty_C.'min_Quantity'),0) as 'min_Quantity', coalesce(sum(total_qty_D.'avg_Quantity'),0) as 'avg_Quantity';\r\nqty = group qty by ('Product', 'order');\r\nqty = foreach qty generate 'Product', 'order', sum('Quantity') as 'Quantity', sum('max_Quantity') as 'max_Quantity', sum('avg_Quantity') as 'avg_Quantity', sum('min_Quantity') as 'min_Quantity', (case when sum(sum('max_Quantity')) over([..] partition by all) == sum(sum('min_Quantity')) over([..] partition by all) then  0 else sum('min_Quantity') end) as 'min_range', (case when sum(sum('Quantity_coalesced')) over([..] partition by all) >= sum(sum('avg_Quantity')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\nqty = foreach qty generate 'Product', 'order', 'Quantity', 'max_Quantity', number_to_string('max_Quantity', \"#,####0\") as 'max_Quantity_str', 'min_Quantity', number_to_string('min_Quantity', \"#,####0\") as 'min_Quantity_str', 'avg_Quantity', number_to_string('avg_Quantity', \"#,####0\") as 'avg_Quantity_str', 'min_range', 'color';\r\nqty = order qty by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 1.0E8,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                150,
                80
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "high" : 66,
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "Quantity"
              ]
            },
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "AllMetrics_newprods__1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AllMetrics_newprods_refline",
        "numbers" : [ ],
        "query" : "--OutOfStockOccurences--\r\noos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos = filter oos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\noos = group oos by ('ActualVisitStartTime_Year','ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\noos = foreach oos generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_out_of_stock';\r\noos = group oos by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\noos = foreach oos generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_out_of_stock') as 'current_out_of_stock';\r\n--Revenue--\r\norders = load \"${App.Datasets.CG_OrderItem36_tp.FullyQualifiedName}\";\r\norders = filter orders by 'Product_Name'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\norders = filter orders by date('Order_ActivatedDate_Year', 'Order_ActivatedDate_Month', 'Order_ActivatedDate_Day') in [\"180 days ago\"..\"current day\"];\r\norders = group orders by ('Order_ActivatedDate_Year','Order_ActivatedDate_Week');\r\norders = foreach orders generate 'Order_ActivatedDate_Year' + \"~~~\" + 'Order_ActivatedDate_Week' as 'Order_ActivatedDate_Year~~~Order_ActivatedDate_Week', sum('TotalPrice') as 'current_sales', sum('Quantity') as 'current_quantity', (sum('TotalPrice')/unique('OrderId')) as 'current_avg_order_value', (sum('TotalPrice')/unique('Order_ActivatedDate_Week')) as 'current_avg_week_revenue', (unique('Order_AssessmentTaskOrder_AssessmentTask_Visit_RetailStore_Name')/{{cell(Total_Stores__1_1.result, 0, \"total_stores\").asObject()}}) as 'current_store_coverage';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp = filter comp by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_comp = group comp by ('ActualVisitStartTime_Year','ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_comp';\r\ntotal_comp = group total_comp by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_comp = foreach total_comp generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_comp') as 'current_comp';\r\n---Decline in Promotions (CG_RetailVisitKpi)\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = filter promo by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\npromo = group promo by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\npromo = foreach promo generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_promo';\r\npromo = group promo by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\npromo = foreach promo generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_promo') as 'current_promo';\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = filter fcs by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_fcs = group fcs by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_fcs';\r\ntotal_fcs = group total_fcs by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_fcs = foreach total_fcs generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_fcs') as 'current_fcs';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = filter sos by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_sos = group sos by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_sos';\r\ntotal_sos = group total_sos by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_sos = foreach total_sos generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_sos') as 'current_sos';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninv = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ninv = filter inv by 'Product_Name_Custom'==\"{{cell(new_launched_prod_py_1.selection, 0, \"Product_Name\").asString()}}\";\r\ninv = filter inv by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = filter inv by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [\"180 days ago\"..\"current day\"];\r\ntotal_inv = group inv by ('ActualVisitStartTime_Year', 'ActualVisitStartTime_Week','AssessmentTask_Visit_RetailStore_Name');\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week' as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', 'AssessmentTask_Visit_RetailStore_Name', avg('Compliance_Percentage') as 'current_inventory';\r\ntotal_inv = group total_inv by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\ntotal_inv = foreach total_inv generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg('current_inventory') as 'current_inventory';\r\n--Metric_multidatset---\r\nfinal_table = cogroup\r\n             orders by ('Order_ActivatedDate_Year~~~Order_ActivatedDate_Week') full,\r\n             oos by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_comp by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             promo by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_fcs by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_sos by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week') full,\r\n             total_inv by ('ActualVisitStartTime_Year~~~ActualVisitStartTime_Week');\r\nfinal_table = foreach final_table generate coalesce(orders.'Order_ActivatedDate_Year~~~Order_ActivatedDate_Week', oos.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_comp.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', promo.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_fcs.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_sos.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', total_inv.'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week')  as 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week',\r\n\r\nsum(orders.'current_sales') as 'total_sales',\r\nsum(orders.'current_quantity') as 'total_qty', \r\nsum(orders.'current_avg_order_value') as 'avg_order_value', \r\nsum(orders.'current_avg_week_revenue') as 'avg_weekly_revenue', \r\nsum(oos.'current_out_of_stock') as 'Avg_OutOfStock_Compliance',\r\nsum(total_comp.'current_comp') as 'Avg_CompliancePercentage', \r\nsum(promo.'current_promo') as 'Avg_PromoCompliance_Percentage', \r\nsum(total_fcs.'current_fcs') as 'Avg_FacingsCompliance_Percentage', \r\nsum(total_sos.'current_sos') as 'Avg_SoSCompliance_Percentage', \r\nsum(total_inv.'current_inventory') as 'Avg_InventoryCompliance_Percentage', \r\nsum(orders.'current_store_coverage') as 'store_coverage';\r\n\r\nfinal_table = group final_table by 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week';\r\nfinal_table = foreach final_table generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', avg(sum('total_sales')) over([..] partition by all) as 'total_sales_refline', avg(sum('total_qty')) over([..] partition by all) as 'total_qty_refline', avg(sum('avg_order_value')) over([..] partition by all) as 'avg_order_value_refline', avg(sum('avg_weekly_revenue')) over([..] partition by all) as 'avg_weekly_revenue_refline', avg(sum('Avg_OutOfStock_Compliance')) over([..] partition by all) as 'Avg_OutOfStock_Compliance_refline', avg(sum('Avg_CompliancePercentage')) over([..] partition by all) as 'Avg_CompliancePercentage_refline', avg(sum('Avg_PromoCompliance_Percentage')) over([..] partition by all) as 'Avg_PromoCompliance_Percentage_refline', avg(sum('Avg_FacingsCompliance_Percentage')) over([..] partition by all) as 'Avg_FacingsCompliance_Percentage_refline', avg(sum('Avg_SoSCompliance_Percentage')) over([..] partition by all) as 'Avg_SoSCompliance_Percentage_refline', avg(sum('Avg_InventoryCompliance_Percentage')) over([..] partition by all) as 'Avg_InventoryCompliance_Percentage_refline', (avg(sum('store_coverage')) over([..] partition by all)*100) as 'store_coverage_refline';\r\n\r\nfinal_table = foreach final_table generate 'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week', '{{cell(static_10.selection, 0, \"refline_name\").asString()}}' as 'Reference Line', number_to_string('{{cell(static_10.selection, 0, \"refline_name\").asString()}}', \"#,###0.00\") as 'refline_value_label', (case when \"{{cell(static_10.selection, 0, \"unit\").asString()}}\"==\"$\" then \"$\" else \"\" end) as 'refline_text_prefix', (case when \"{{cell(static_10.selection, 0, \"unit\").asString()}}\"==\"%\" then \"%\" else \"\" end) as 'refline_text_suffix';\r\nfinal_table = limit final_table 1;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "ActualVisitStartTime_Year~~~ActualVisitStartTime_Week"
              ],
              "plots" : [
                "count"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "static_10" : {
        "broadcastFacet" : true,
        "columns" : {
          "unit" : {
            "type" : "string"
          },
          "Field_Alias_x" : {
            "type" : "string"
          },
          "refline_name" : {
            "type" : "string"
          },
          "Field_Alias_y1" : {
            "type" : "string"
          },
          "Field_Alias_trend" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Revenue"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Revenue",
            "Field_Alias_x" : "total_sales",
            "Field_Alias_trend" : "compared_sales",
            "Field_Alias_y1" : "percent_change_sales_thisyear",
            "refline_name" : "total_sales_refline",
            "unit" : "$"
          },
          {
            "Display" : "Quantity",
            "Field_Alias_x" : "total_qty",
            "Field_Alias_trend" : "compared_quantity",
            "Field_Alias_y1" : "percent_change_quantity_thisyear",
            "refline_name" : "total_qty_refline",
            "unit" : ""
          },
          {
            "Display" : "Avg Order Value",
            "Field_Alias_x" : "avg_order_value",
            "Field_Alias_trend" : "compared_avg_order_value",
            "Field_Alias_y1" : "percent_change_avg_order_value_thisyear",
            "refline_name" : "avg_order_value_refline",
            "unit" : "$"
          },
          {
            "Display" : "Avg Weekly Revenue",
            "Field_Alias_x" : "avg_weekly_revenue",
            "Field_Alias_trend" : "compared_avg_week_revenue",
            "Field_Alias_y1" : "percent_change_avg_week_revenue_thisyear",
            "refline_name" : "avg_weekly_revenue_refline",
            "unit" : "$"
          },
          {
            "Display" : "Avg Out-of-Stock Compliance",
            "Field_Alias_x" : "Avg_OutOfStock_Compliance",
            "Field_Alias_trend" : "compared_out_of_stock",
            "Field_Alias_y1" : "percent_change_out_of_stock_thisyear",
            "refline_name" : "Avg_OutOfStock_Compliance_refline",
            "unit" : "%"
          },
          {
            "Display" : "Avg Store Compliance",
            "Field_Alias_x" : "Avg_CompliancePercentage",
            "Field_Alias_trend" : "compared_comp",
            "Field_Alias_y1" : "percent_change_comp_thisyear",
            "refline_name" : "Avg_CompliancePercentage_refline",
            "unit" : "%"
          },
          {
            "Display" : "Store Coverage",
            "Field_Alias_x" : "store_coverage",
            "Field_Alias_trend" : "compared_store_coverage",
            "Field_Alias_y1" : "percent_change_store_coverage_thisyear",
            "refline_name" : "store_coverage_refline",
            "unit" : "%"
          },
          {
            "Display" : "Avg Promotion Compliance",
            "Field_Alias_x" : "Avg_PromoCompliance_Percentage",
            "Field_Alias_trend" : "compared_promo",
            "Field_Alias_y1" : "percent_change_promo_thisyear",
            "refline_name" : "Avg_PromoCompliance_Percentage_refline",
            "unit" : "%"
          },
          {
            "Display" : "Avg Share-of-Shelf Compliance",
            "Field_Alias_x" : "Avg_SoSCompliance_Percentage",
            "Field_Alias_trend" : "compared_sos",
            "Field_Alias_y1" : "percent_change_sos_thisyear",
            "refline_name" : "Avg_SoSCompliance_Percentage_refline",
            "unit" : "%"
          },
          {
            "Display" : "Avg Facing Compliance",
            "Field_Alias_x" : "Avg_FacingsCompliance_Percentage",
            "Field_Alias_trend" : "compared_fcs",
            "Field_Alias_y1" : "percent_change_fcs_thisyear",
            "refline_name" : "Avg_FacingsCompliance_Percentage_refline",
            "unit" : "%"
          },
          {
            "Display" : "Avg Inventory Compliance",
            "Field_Alias_x" : "Avg_InventoryCompliance_Percentage",
            "Field_Alias_trend" : "compared_inventory",
            "Field_Alias_y1" : "percent_change_inventory_thisyear",
            "refline_name" : "Avg_InventoryCompliance_Percentage_refline",
            "unit" : "%"
          }
        ]
      },
      "Avg_store_compliance_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Avg_store_compliance_gauge",
        "numbers" : [ ],
        "query" : "comp = load \"${App.Datasets.CG_RetailVisitKpi37_tp.FullyQualifiedName}\";\r\ncomp_A = filter comp by 'Product_Name_Custom' == \"{{cell(lens_3_2.selection, 0, \"Product_Name_Custom\").asString()}}\";\r\ncomp_A = filter comp_A by 'Include_In_Compliance' == \"True\";\r\ncomp_A = group comp_A by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\ncomp_A = foreach comp_A generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_comp';\r\ncomp_A = group comp_A by 'Product_Name_Custom';\r\ncomp_A = foreach comp_A generate 'Product_Name_Custom' as 'Product', avg('current_comp') as 'Avg_CompliancePercentage', \"select\" as 'text', \"A\" as 'order';\r\nstore_comp = filter comp by 'Include_In_Compliance' == \"True\";\r\nstore_comp = group store_comp by ('Product_Name_Custom', 'AssessmentTask_Visit_RetailStore_Name');\r\nstore_comp = foreach store_comp generate 'Product_Name_Custom', avg('Compliance_Percentage') as 'current_comp';\r\nstore_comp = group store_comp by 'Product_Name_Custom';\r\ncomp_B = foreach store_comp generate 'Product_Name_Custom' as 'Product', avg('current_comp') as 'max_Avg_CompliancePercentage', \"max\" as 'text', \"B\" as 'order';\r\ncomp_B = order comp_B by 'max_Avg_CompliancePercentage' desc;\r\ncomp_B = limit comp_B 1;\r\ncomp_C = foreach store_comp generate 'Product_Name_Custom' as 'Product', avg('current_comp') as 'min_Avg_CompliancePercentage', \"min\" as 'text', \"C\" as 'order';\r\ncomp_C = order comp_C by 'min_Avg_CompliancePercentage' asc;\r\ncomp_C = limit comp_C 1;\r\ncomp_D = foreach store_comp generate 'Product_Name_Custom' as 'Product', avg(avg('current_comp')) over([..] partition by all) as 'avg_Avg_CompliancePercentage', \"avg\" as 'text', \"D\" as 'order';\r\ncomp_D = limit comp_D 1;\r\ncomp = cogroup comp_A by ('Product', 'order') full, comp_B by ('Product', 'order') full, comp_C by ('Product', 'order') full, comp_D by ('Product', 'order');\r\ncomp = foreach comp generate coalesce(comp_A.'Product', comp_B.'Product', comp_C.'Product', comp_D.'Product') as 'Product', coalesce(comp_A.'order', comp_B.'order', comp_C.'order', comp_D.'order') as 'order', sum(comp_A.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', coalesce(sum(comp_A.'Avg_CompliancePercentage'),0) as 'Avg_CompliancePercentage_coalesced', coalesce(sum(comp_B.'max_Avg_CompliancePercentage'),0) as 'max_Avg_CompliancePercentage', coalesce(sum(comp_C.'min_Avg_CompliancePercentage'),0) as 'min_Avg_CompliancePercentage', coalesce(sum(comp_D.'avg_Avg_CompliancePercentage'),0) as 'avg_Avg_CompliancePercentage';\r\n\r\ncomp = group comp by ('Product', 'order');\r\n\r\ncomp = foreach comp generate 'Product', 'order', sum('Avg_CompliancePercentage') as 'Avg_CompliancePercentage', sum('max_Avg_CompliancePercentage') as 'max_Avg_CompliancePercentage', sum('avg_Avg_CompliancePercentage') as 'avg_Avg_CompliancePercentage', sum('min_Avg_CompliancePercentage') as 'min_Avg_CompliancePercentage', (case when sum(sum('max_Avg_CompliancePercentage')) over([..] partition by all) == sum(sum('min_Avg_CompliancePercentage')) over([..] partition by all) then  0 else sum('min_Avg_CompliancePercentage') end) as 'min_range', (case when sum(sum('Avg_CompliancePercentage_coalesced')) over([..] partition by all) >= sum(sum('avg_Avg_CompliancePercentage')) over([..] partition by all) then \"#00B531\" else \"#B50E03\" end) as 'color';\r\n\r\ncomp = foreach comp generate 'Product', 'order', 'Avg_CompliancePercentage', 'max_Avg_CompliancePercentage', number_to_string('max_Avg_CompliancePercentage', \"##0.00\") as 'max_Avg_CompliancePercentage_str', 'min_Avg_CompliancePercentage', number_to_string('min_Avg_CompliancePercentage', \"##0.00\") as 'min_Avg_CompliancePercentage_str', 'avg_Avg_CompliancePercentage', number_to_string('avg_Avg_CompliancePercentage', \"##0.00\") as 'avg_Avg_CompliancePercentage_str', 'min_range', 'color';\r\ncomp = order comp by 'order';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "lens_1",
            "new_launched_prod_py_1",
            "lens_3_2",
            "lens_1_1",
            "Assortment_lens_1_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "max" : 100,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "flatgauge",
            "medium" : 33,
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "colors" : {
              "mediumColor2" : "#F29946",
              "mediumColor1" : "#FED444",
              "lowColor1" : "#F71979",
              "lowColor2" : "#CC203D",
              "highColor1" : "#7BDE4E",
              "highColor2" : "#169913"
            },
            "columnMap" : {
              "trellis" : [ ],
              "plots" : [
                "Avg_CompliancePercentage"
              ]
            },
            "high" : 66,
            "showActionMenu" : true,
            "min" : 0,
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "link_18" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "01d94675-fe97-4c4d-ba9b-247714ebb005"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(new_launched_prod_py_1.selection, 0, \"Product_Name\"), \"\").asString()}} Performance",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_19" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "26e5573b-0d39-4c72-b1f9-7fff54dad213"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(new_launched_prod_py_1.selection, 0, \"Product_Name\"), \"\").asString()}} Promotion",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_16" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6600a831-5a4b-431d-893b-2d9c582e3b47"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "←        Back to All Products",
          "textAlignment" : "center",
          "textColor" : "rgb(121, 184, 234)"
        },
        "type" : "link"
      },
      "link_17" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6600a831-5a4b-431d-893b-2d9c582e3b47"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Product",
          "textAlignment" : "center",
          "textColor" : "rgba(51, 87, 121, 0.6)"
        },
        "type" : "link"
      },
      "link_14" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6600a831-5a4b-431d-893b-2d9c582e3b47"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(lens_3_2.selection, 0, \"Product_Name_Custom\"), \"All Product\").asString()}} Performance",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_15" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c9cd8f01-38d8-4f0c-a3f2-3af15e171e4a"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(lens_3_2.selection, 0, \"Product_Name_Custom\"), \"All Product\").asString()}} Promotion",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_12" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "c9cd8f01-38d8-4f0c-a3f2-3af15e171e4a"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(lens_3_2.selection, 0, \"Product_Name_Custom\"), \"\").asString()}} Promotion",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_13" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "01d94675-fe97-4c4d-ba9b-247714ebb005"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "View Newly Launched Products",
          "textAlignment" : "center",
          "textColor" : "rgb(120, 181, 255)"
        },
        "type" : "link"
      },
      "link_10" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6600a831-5a4b-431d-893b-2d9c582e3b47"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Product",
          "textAlignment" : "center",
          "textColor" : "rgb(52, 127, 219)"
        },
        "type" : "link"
      },
      "link_11" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "6600a831-5a4b-431d-893b-2d9c582e3b47"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(lens_3_2.selection, 0, \"Product_Name_Custom\"), \"\").asString()}} Performance",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "text_90" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Store Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_3" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select KPI"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "chart_6" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "avg_order_value"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : [
              "ActualVisitStartTime_Year~~~ActualVisitStartTime_Week",
              "Promotion Name",
              "Start",
              "End"
            ]
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : [
              "avg_order_value"
            ],
            "showDashLine" : false
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : false,
          "showActionMenu" : true,
          "showZero" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "wave",
          "step" : "NewProduct_Trend_1",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "text_2" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance Trend Based on {{cell(static_10.selection,0,\"Display\").asObject()}}   ⓘ"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779",
          "tooltip" : "Current Year vs Previous Year Trend"
        },
        "type" : "text"
      },
      "chart_5" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "avg_order_value"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : [
              "Order_ActivatedDate_Year~~~Order_ActivatedDate_Week",
              "Promotion Name",
              "Start",
              "End"
            ]
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : [
              "total_sales"
            ],
            "showDashLine" : false
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : false,
          "showActionMenu" : true,
          "showZero" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "wave",
          "step" : "ProdCat_Metrics_Tren_1",
          "markers" : [ ],
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "text_5" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "How are the brands distributed based on their performance?"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_4" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select KPI"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_7" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Overall Performance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "chart_1" : {
        "parameters" : {
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "scatter",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "radiusRatio" : 5,
          "showActionMenu" : true,
          "x" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "high" : 102.2,
              "low" : -2.2,
              "showDomain" : true
            }
          },
          "y" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "low" : -6,
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "lens_1",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_6" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{coalesce(cell(Promotion_Final_1.selection, 0, \"Promotion Name\"), \"Selected Promotion\").asString()}} Impact on {{cell(static_4.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_9" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Quantity"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "chart_4" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "sync",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "total_sales",
              "compared_sales"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "customText" : [ ],
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : [
              "CreatedDate_Week"
            ]
          },
          "visualizationType" : "time",
          "missingValue" : "connect",
          "dashLine" : {
            "measures" : [ ],
            "showDashLine" : false
          },
          "exploreLink" : true,
          "timeAxis" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : false,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "wave",
          "step" : "Product_Trend__1_1",
          "markers" : [ ],
          "applyConditionalFormatting" : true,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "chart_3" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "total_sales",
              "Promotion"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "customText" : "Period ({{cell(date_parser_2.result, 0, \"Fiscal_label\").asString()}}Year-Week) \n[CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}] \n{{cell(static_4.selection,0,\"Display\").asObject()}} \n[{{cell(static_4.selection,0,\"Api_name_y\").asObject()}}] \n----------------------------------------------",
            "showDimensions" : true,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Promotion Status",
              "Promotion Name",
              "Start Date",
              "End Date"
            ]
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : [
              "Promotion"
            ],
            "showDashLine" : true
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "referenceLines" : [
              {
                "label" : {
                  "data" : {
                    "displayTemplate" : "Avg: {{cell(order_metrics_pickli_1.result, 0, \"refline_text\").asString()}}[refline_value_label]",
                    "sourceType" : "result",
                    "step" : "order_metrics_pickli_1"
                  },
                  "type" : "dynamic"
                },
                "value" : {
                  "data" : {
                    "field" : "Reference Line",
                    "sourceType" : "result",
                    "step" : "order_metrics_pickli_1"
                  },
                  "type" : "dynamic"
                }
              }
            ],
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "wave",
          "step" : "lens_3",
          "markers" : [ ],
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "text_8" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Revenue"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_1" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Product Performance"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "link_21" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "01d94675-fe97-4c4d-ba9b-247714ebb005"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(new_launched_prod_py_1.selection, 0, \"Product_Name\"), \"\").asString()}} Performance",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_22" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "448e985e-a4fa-4652-bf1b-99d8d3325a0a"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Brand",
          "textAlignment" : "center",
          "textColor" : "rgba(51, 87, 121, 0.6)"
        },
        "type" : "link"
      },
      "text_87" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_120" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Share-of-Shelf Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "link_20" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "26e5573b-0d39-4c72-b1f9-7fff54dad213"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(new_launched_prod_py_1.selection, 0, \"Product_Name\"), \"\").asString()}} Promotion",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "text_86" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Out-of-Stock Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_89" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Change in {{cell(static_10.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_122" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Store Coverage"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_88" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(static_10.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_121" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Inventory Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_113" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "How are the assortments distributed based on their performance?"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_83" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Quantity"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_112" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select a promotion to view its trends"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_82" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_115" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select a promotion to view its trends"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_85" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Weekly Revenue"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_114" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Overall performance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "text_84" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Order Value"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_117" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "How are the product categories distributed based on their performance?"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_116" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select a promotion to view its trends"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_81" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Store Coverage"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_119" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Facing Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_80" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_118" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Promotion Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_79" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Inventory Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_76" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_75" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Share-of-Shelf Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_78" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_77" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Facing Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_72" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_71" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Store Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_74" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_73" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Revenue"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "chart_101" : {
        "parameters" : {
          "max" : "{{cell(Avg_OOS_compliance_g_1.result, 1, \"max_Avg_OutOfStock_Compliance\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Avg_OutOfStock_Compliance"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(Avg_OOS_compliance_g_1.result, 3, \"avg_Avg_OutOfStock_Compliance_str\").asString()}}%\nMax: {{cell(Avg_OOS_compliance_g_1.result, 1, \"max_Avg_OutOfStock_Compliance_str\").asString()}}% ({{cell(Avg_OOS_compliance_g_1.result, 1, \"Product\").asString()}})\nMin: {{cell(Avg_OOS_compliance_g_1.result, 2, \"min_Avg_OutOfStock_Compliance_str\").asString()}}% ({{cell(Avg_OOS_compliance_g_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(Avg_OOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(Avg_OOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(Avg_OOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(Avg_OOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(Avg_OOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(Avg_OOS_compliance_g_1.result, 0, \"color\").asString()}}"
          },
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "Avg_OutOfStock_Compliance"
            ]
          },
          "high" : 66,
          "showActionMenu" : true,
          "min" : "{{cell(Avg_OOS_compliance_g_1.result, 2, \"min_range\").asObject()}}",
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "Avg_OOS_compliance_g_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(Avg_OOS_compliance_g_1.result, 3, \"avg_Avg_OutOfStock_Compliance\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "text_70" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "chart_103" : {
        "parameters" : {
          "max" : "{{cell(Avg_promo_compliance_1.result, 1, \"max_Avg_PromoCompliance_Percentage\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Avg_PromoCompliance_Percentage"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(Avg_promo_compliance_1.result, 3, \"avg_Avg_PromoCompliance_Percentage_str\").asString()}}%\nMax: {{cell(Avg_promo_compliance_1.result, 1, \"max_Avg_PromoCompliance_Percentage_str\").asString()}}% ({{cell(Avg_promo_compliance_1.result, 1, \"Product\").asString()}})\nMin: {{cell(Avg_promo_compliance_1.result, 2, \"min_Avg_PromoCompliance_Percentage_str\").asString()}}% ({{cell(Avg_promo_compliance_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(Avg_promo_compliance_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(Avg_promo_compliance_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(Avg_promo_compliance_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(Avg_promo_compliance_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(Avg_promo_compliance_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(Avg_promo_compliance_1.result, 0, \"color\").asString()}}"
          },
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "Avg_PromoCompliance_Percentage"
            ]
          },
          "high" : 66,
          "showActionMenu" : true,
          "min" : "{{cell(Avg_promo_compliance_1.result, 2, \"min_range\").asObject()}}",
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "Avg_promo_compliance_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(Avg_promo_compliance_1.result, 3, \"avg_Avg_PromoCompliance_Percentage\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "dateselector_2" : {
        "parameters" : {
          "absoluteModeEnabled" : true,
          "calendarTypeSwitchingAllowed" : true,
          "defaultFiscalMode" : false,
          "displayMode" : "filter",
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "presetsEnabled" : true,
          "relativeModeEnabled" : true,
          "showActionMenu" : true,
          "step" : "Current_Period_1",
          "title" : "Duration"
        },
        "type" : "dateselector"
      },
      "text_69" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Out-of-Stock Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_68" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Revenue"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_65" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_64" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Order value"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_67" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_66" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Weekly Revenue"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_61" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_60" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_63" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_62" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Quantity"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_12" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_PromoCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_11" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_OutOfStock_Compliance",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_95" : {
        "parameters" : {
          "max" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 1, \"max_avg_weekly_revenue\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "avg_weekly_revenue"
            ],
            "showNullValues" : false,
            "showPercentage" : false,
            "customText" : "Avg: {{cell(AvgWeeklyRevenue_Gau_1.result, 3, \"avg_avg_weekly_revenue_str\").asString()}}\nMax: {{cell(AvgWeeklyRevenue_Gau_1.result, 1, \"max_avg_weekly_revenue_str\").asString()}} ({{cell(AvgWeeklyRevenue_Gau_1.result, 1, \"Product\").asString()}})\nMin: {{cell(AvgWeeklyRevenue_Gau_1.result, 2, \"min_avg_weekly_revenue_str\").asString()}} ({{cell(AvgWeeklyRevenue_Gau_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              150,
              80
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 0, \"color\").asString()}}"
          },
          "high" : 66,
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "avg_weekly_revenue"
            ]
          },
          "min" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 2, \"min_range\").asObject()}}",
          "showActionMenu" : true,
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "AvgWeeklyRevenue_Gau_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(AvgWeeklyRevenue_Gau_1.result, 3, \"avg_avg_weekly_revenue\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "number_10" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_WeeklyRev",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_93" : {
        "parameters" : {
          "max" : "{{cell(Store_Coverage_Gauge_1.result, 1, \"max_store_coverage\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "store_coverage"
            ],
            "showNullValues" : false,
            "showPercentage" : false,
            "customText" : "Avg: {{cell(Store_Coverage_Gauge_1.result, 3, \"avg_store_coverage_str\").asString()}}%\nMax: {{cell(Store_Coverage_Gauge_1.result, 1, \"max_store_coverage_str\").asString()}}% ({{cell(Store_Coverage_Gauge_1.result, 1, \"Product\").asString()}})\nMin: {{cell(Store_Coverage_Gauge_1.result, 2, \"min_store_coverage_str\").asString()}}% ({{cell(Store_Coverage_Gauge_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              150,
              80
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(Store_Coverage_Gauge_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(Store_Coverage_Gauge_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(Store_Coverage_Gauge_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(Store_Coverage_Gauge_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(Store_Coverage_Gauge_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(Store_Coverage_Gauge_1.result, 0, \"color\").asString()}}"
          },
          "high" : 66,
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "store_coverage"
            ]
          },
          "min" : "{{cell(Store_Coverage_Gauge_1.result, 2, \"min_range\").asObject()}}",
          "showActionMenu" : true,
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "Store_Coverage_Gauge_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(Store_Coverage_Gauge_1.result, 3, \"avg_store_coverage\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_59" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_90" : {
        "parameters" : {
          "autoFitMode" : "none",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "highColor" : "#009DDF",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Value"
            ],
            "showNullValues" : true,
            "showPercentage" : false,
            "customText" : "Period ({{cell(date_parser_2.result, 0, \"Fiscal_label\").asString()}}Year-Week) \n[Year~~~Week]",
            "showDimensions" : true,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Promotion Name",
              "Start Date",
              "End Date"
            ]
          },
          "lowColor" : "#E2F4FC",
          "visualizationType" : "heatmap",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "columnMap" : {
            "color" : [
              "Value"
            ],
            "x" : [
              "Year~~~Week"
            ],
            "y" : [
              "Promotion Name"
            ]
          },
          "showActionMenu" : true,
          "x" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "y" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "theme" : "wave",
          "step" : "Promotion_Final_1",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "container_57" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_19" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_InventoryCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_18" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Facings_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_17" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Share_of_Shelf_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_16" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_SoSCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_15" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_FacingsCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_14" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Promotion_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_13" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Out_of_Stock_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_88" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "total_sales",
              "Promotion"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "customText" : "Period (Year-Week) \n[CreatedDate_Year~~~CreatedDate_Week] \n{{cell(static_10.selection,0,\"Display\").asObject()}} \n[{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}] \n----------------------------------------------",
            "showDimensions" : true,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Promotion Status",
              "Promotion Name",
              "Start Date",
              "End Date"
            ]
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : [
              "Promotion"
            ],
            "showDashLine" : true
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "referenceLines" : [
              {
                "label" : {
                  "data" : {
                    "displayTemplate" : "Avg: {{cell(AllMetrics_newprods__1.result, 0, \"refline_text_prefix\").asString()}}[refline_value_label]{{cell(AllMetrics_newprods__1.result, 0, \"refline_text_suffix\").asString()}}",
                    "sourceType" : "result",
                    "step" : "AllMetrics_newprods__1"
                  },
                  "type" : "dynamic"
                },
                "value" : {
                  "data" : {
                    "field" : "Reference Line",
                    "sourceType" : "result",
                    "step" : "AllMetrics_newprods__1"
                  },
                  "type" : "dynamic"
                }
              }
            ],
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "wave",
          "step" : "ProdCat_Promo_Trend__1",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "container_60" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_23" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "total_sales",
          "numberColor" : "#091A3E",
          "numberSize" : 18,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_22" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_StoreCoverage",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_21" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "store_coverage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_20" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Inventory_Comp_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_49" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_48" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_47" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_46" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_29" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_weekly_revenue",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_28" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_AvgOrderValue",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_27" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_order_value",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_26" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_Quantity",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_25" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "total_qty",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_24" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_change_in_Sales",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "listselector_10" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "measureField" : "none",
          "showActionMenu" : true,
          "step" : "Assortment_Assortmen_2",
          "title" : "Assortment"
        },
        "type" : "listselector"
      },
      "chart_99" : {
        "parameters" : {
          "max" : "{{cell(AvgOrderValue_Gauge_1.result, 1, \"max_avg_order_value\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "avg_order_value"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(AvgOrderValue_Gauge_1.result, 3, \"avg_avg_order_value_str\").asString()}}\nMax: {{cell(AvgOrderValue_Gauge_1.result, 1, \"max_avg_order_value_str\").asString()}} ({{cell(AvgOrderValue_Gauge_1.result, 1, \"Product\").asString()}})\nMin: {{cell(AvgOrderValue_Gauge_1.result, 2, \"min_avg_order_value_str\").asString()}} ({{cell(AvgOrderValue_Gauge_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              150,
              80
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(AvgOrderValue_Gauge_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(AvgOrderValue_Gauge_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(AvgOrderValue_Gauge_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(AvgOrderValue_Gauge_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(AvgOrderValue_Gauge_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(AvgOrderValue_Gauge_1.result, 0, \"color\").asString()}}"
          },
          "high" : 66,
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "avg_order_value"
            ]
          },
          "min" : "{{cell(AvgOrderValue_Gauge_1.result, 2, \"min_range\").asObject()}}",
          "showActionMenu" : true,
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "AvgOrderValue_Gauge_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "Avg",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(AvgOrderValue_Gauge_1.result, 3, \"avg_avg_order_value\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_50" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_56" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_CompliancePercentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_19" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_55" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Out_of_Stock_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_51" : {
        "parameters" : {
          "max" : "{{cell(Avg_INV_compliance_g_1.result, 1, \"max_Avg_InventoryCompliance_Percentage\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Avg_InventoryCompliance_Percentage"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(Avg_INV_compliance_g_1.result, 3, \"avg_Avg_InventoryCompliance_Percentage_str\").asString()}}%\nMax: {{cell(Avg_INV_compliance_g_1.result, 1, \"max_Avg_InventoryCompliance_Percentage_str\").asString()}}% ({{cell(Avg_INV_compliance_g_1.result, 1, \"Product\").asString()}})\nMin: {{cell(Avg_INV_compliance_g_1.result, 2, \"min_Avg_InventoryCompliance_Percentage_str\").asString()}}% ({{cell(Avg_INV_compliance_g_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(Avg_INV_compliance_g_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(Avg_INV_compliance_g_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(Avg_INV_compliance_g_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(Avg_INV_compliance_g_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(Avg_INV_compliance_g_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(Avg_INV_compliance_g_1.result, 0, \"color\").asString()}}"
          },
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "Avg_InventoryCompliance_Percentage"
            ]
          },
          "high" : 66,
          "showActionMenu" : true,
          "min" : "{{cell(Avg_INV_compliance_g_1.result, 2, \"min_range\").asObject()}}",
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "Avg_INV_compliance_g_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(Avg_INV_compliance_g_1.result, 3, \"avg_Avg_InventoryCompliance_Percentage\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_18" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_54" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_OutOfStock_Compliance",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_50" : {
        "parameters" : {
          "max" : "{{cell(Avg_FCS_compliance_g_1.result, 1, \"max_Avg_FacingsCompliance_Percentage\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Avg_FacingsCompliance_Percentage"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(Avg_FCS_compliance_g_1.result, 3, \"avg_Avg_FacingsCompliance_Percentage_str\").asString()}}%\nMax: {{cell(Avg_FCS_compliance_g_1.result, 1, \"max_Avg_FacingsCompliance_Percentage_str\").asString()}}% ({{cell(Avg_FCS_compliance_g_1.result, 1, \"Product\").asString()}})\nMin: {{cell(Avg_FCS_compliance_g_1.result, 2, \"min_Avg_FacingsCompliance_Percentage_str\").asString()}}% ({{cell(Avg_FCS_compliance_g_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(Avg_FCS_compliance_g_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(Avg_FCS_compliance_g_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(Avg_FCS_compliance_g_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(Avg_FCS_compliance_g_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(Avg_FCS_compliance_g_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(Avg_FCS_compliance_g_1.result, 0, \"color\").asString()}}"
          },
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "Avg_FacingsCompliance_Percentage"
            ]
          },
          "high" : 66,
          "showActionMenu" : true,
          "min" : "{{cell(Avg_FCS_compliance_g_1.result, 2, \"min_range\").asObject()}}",
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "Avg_FCS_compliance_g_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(Avg_FCS_compliance_g_1.result, 3, \"avg_Avg_FacingsCompliance_Percentage\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_17" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_53" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_WeeklyRev",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_16" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_52" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_weekly_revenue",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_18" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(static_4.selection,0,\"Display\").asObject()}} and {{cell(static_5.result, 0, \"Display\").asString()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "container_15" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_51" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_AvgOrderValue",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_17" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance Trend based on {{cell(static_10.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "container_14" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_50" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_order_value",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_13" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_19" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_14" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Out-of-Stock Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_13" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Weekly Revenue"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_16" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Promotion Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_15" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Store Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_10" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Order Value"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_59" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Promotion_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_12" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Order Value"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_58" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_PromoCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_11" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Quantity"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_57" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Compliance_Percentate_Change_vs_Previous_Period",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_23" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_49" : {
        "parameters" : {
          "max" : "{{cell(Avg_store_compliance_1.result, 1, \"max_Avg_CompliancePercentage\").asString()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Avg_CompliancePercentage"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(Avg_store_compliance_1.result, 3, \"avg_Avg_CompliancePercentage_str\").asString()}}%\nMax: {{cell(Avg_store_compliance_1.result, 1, \"max_Avg_CompliancePercentage_str\").asString()}}% ({{cell(Avg_store_compliance_1.result, 1, \"Product\").asString()}})\nMin: {{cell(Avg_store_compliance_1.result, 2, \"min_Avg_CompliancePercentage_str\").asString()}}% ({{cell(Avg_store_compliance_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(Avg_store_compliance_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(Avg_store_compliance_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(Avg_store_compliance_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(Avg_store_compliance_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(Avg_store_compliance_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(Avg_store_compliance_1.result, 0, \"color\").asString()}}"
          },
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "Avg_CompliancePercentage"
            ]
          },
          "high" : 66,
          "showActionMenu" : true,
          "min" : "{{cell(Avg_store_compliance_1.result, 2, \"min_range\").asString()}}",
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "Avg_store_compliance_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(Avg_store_compliance_1.result, 3, \"avg_Avg_CompliancePercentage\").asString()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_22" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_21" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_47" : {
        "parameters" : {
          "max" : "{{cell(Avg_SOS_compliance_g_1.result, 1, \"max_Avg_SoSCompliance_Percentage\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Avg_SoSCompliance_Percentage"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(Avg_SOS_compliance_g_1.result, 3, \"avg_Avg_SoSCompliance_Percentage_str\").asString()}}%\nMax: {{cell(Avg_SOS_compliance_g_1.result, 1, \"max_Avg_SoSCompliance_Percentage_str\").asString()}}% ({{cell(Avg_SOS_compliance_g_1.result, 1, \"Product\").asString()}})\nMin: {{cell(Avg_SOS_compliance_g_1.result, 2, \"min_Avg_SoSCompliance_Percentage_str\").asString()}}% ({{cell(Avg_SOS_compliance_g_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(Avg_SOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(Avg_SOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(Avg_SOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(Avg_SOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(Avg_SOS_compliance_g_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(Avg_SOS_compliance_g_1.result, 0, \"color\").asString()}}"
          },
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "Avg_SoSCompliance_Percentage"
            ]
          },
          "high" : 66,
          "showActionMenu" : true,
          "min" : "{{cell(Avg_SOS_compliance_g_1.result, 2, \"min_range\").asObject()}}",
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "Avg_SOS_compliance_g_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(Avg_SOS_compliance_g_1.result, 3, \"avg_Avg_SoSCompliance_Percentage\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_20" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_46" : {
        "parameters" : {
          "max" : "{{cell(Quantity_Gauge_1.result, 1, \"max_Quantity\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Quantity"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(Quantity_Gauge_1.result, 3, \"avg_Quantity_str\").asString()}}\nMax: {{cell(Quantity_Gauge_1.result, 1, \"max_Quantity_str\").asString()}} ({{cell(Quantity_Gauge_1.result, 1, \"Product\").asString()}})\nMin: {{cell(Quantity_Gauge_1.result, 2, \"min_Quantity_str\").asString()}} ({{cell(Quantity_Gauge_1.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              150,
              80
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(Quantity_Gauge_1.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(Quantity_Gauge_1.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(Quantity_Gauge_1.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(Quantity_Gauge_1.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(Quantity_Gauge_1.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(Quantity_Gauge_1.result, 0, \"color\").asString()}}"
          },
          "high" : 66,
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "Quantity"
            ]
          },
          "min" : "{{cell(Quantity_Gauge_1.result, 2, \"min_range\").asObject()}}",
          "showActionMenu" : true,
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "Quantity_Gauge_1",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(Quantity_Gauge_1.result, 3, \"avg_Quantity\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "chart_44" : {
        "parameters" : {
          "max" : "{{cell(lens_5.result, 1, \"max_TotalPrice\").asObject()}}",
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "TotalPrice"
            ],
            "showNullValues" : false,
            "showPercentage" : true,
            "customText" : "Avg: {{cell(lens_5.result, 3, \"avg_TotalPrice_str\").asString()}}\nMax: {{cell(lens_5.result, 1, \"max_TotalPrice_str\").asString()}} ({{cell(lens_5.result, 1, \"Product\").asString()}})\nMin: {{cell(lens_5.result, 2, \"min_TotalPrice_str\").asString()}} ({{cell(lens_5.result, 2, \"Product\").asString()}})",
            "showDimensions" : false,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Product"
            ]
          },
          "visualizationType" : "flatgauge",
          "medium" : 33,
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              150,
              80
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "colors" : {
            "mediumColor2" : "{{cell(lens_5.result, 0, \"color\").asString()}}",
            "mediumColor1" : "{{cell(lens_5.result, 0, \"color\").asString()}}",
            "lowColor1" : "{{cell(lens_5.result, 0, \"color\").asString()}}",
            "lowColor2" : "{{cell(lens_5.result, 0, \"color\").asString()}}",
            "highColor1" : "{{cell(lens_5.result, 0, \"color\").asString()}}",
            "highColor2" : "{{cell(lens_5.result, 0, \"color\").asString()}}"
          },
          "high" : 66,
          "columnMap" : {
            "trellis" : [ ],
            "plots" : [
              "TotalPrice"
            ]
          },
          "min" : "{{cell(lens_5.result, 2, \"min_range\").asObject()}}",
          "showActionMenu" : true,
          "valueType" : "compactNumber",
          "theme" : "light",
          "step" : "lens_5",
          "referenceLines" : [
            {
              "label" : {
                "data" : "",
                "type" : "static"
              },
              "value" : {
                "data" : "{{cell(lens_5.result, 3, \"avg_TotalPrice\").asObject()}}",
                "type" : "static"
              }
            }
          ],
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "number_67" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_StoreCoverage",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_66" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "store_coverage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_65" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Inventory_Comp_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_61" : {
        "parameters" : {
          "autoFitMode" : "none",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "highColor" : "#009DDF",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Value"
            ],
            "showNullValues" : true,
            "showPercentage" : false,
            "customText" : "Period ({{cell(date_parser_2.result, 0, \"Fiscal_label\").asString()}}Year-Week) \n[Year~~~Week]",
            "showDimensions" : true,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Promotion Name",
              "Start Date",
              "End Date"
            ]
          },
          "lowColor" : "#E2F4FC",
          "visualizationType" : "heatmap",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "columnMap" : {
            "color" : [
              "Value"
            ],
            "x" : [
              "Year~~~Week"
            ],
            "y" : [
              "Promotion Name"
            ]
          },
          "showActionMenu" : true,
          "x" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "y" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "theme" : "wave",
          "step" : "Promotion_Final_2",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "number_64" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_InventoryCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_63" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Share_of_Shelf_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_62" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_SoSCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_61" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Facings_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_60" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_FacingsCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_69" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_change_in_Sales",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_5" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "total_qty",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_4" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Compliance_Percentate_Change_vs_Previous_Period",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_3" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_change_in_Sales",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_2" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_CompliancePercentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "total_sales",
          "numberColor" : "#091A3E",
          "numberSize" : 18,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_12" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_11" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_10" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_54" : {
        "parameters" : {
          "autoFitMode" : "none",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "Product_Name"
            ],
            "plots" : [
              "TotalPrice",
              "Orders",
              "Days Until First Order",
              "Days After First Order"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "new_launched_prod_py_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "number_34" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Compliance_Percentate_Change_vs_Previous_Period",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_33" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_CompliancePercentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_32" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Out_of_Stock_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_31" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_OutOfStock_Compliance",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_39" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_71" : {
        "parameters" : {
          "autoFitMode" : "none",
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "highColor" : "#009DDF",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Value"
            ],
            "showNullValues" : true,
            "showPercentage" : false,
            "customText" : "Period (Year-Week) \n[Year~~~Week]",
            "showDimensions" : true,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Promotion Name",
              "Year~~~Week",
              "Start Date",
              "End Date"
            ]
          },
          "lowColor" : "#E2F4FC",
          "visualizationType" : "heatmap",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "columnMap" : {
            "color" : [
              "Value"
            ],
            "x" : [
              "Year~~~Week"
            ],
            "y" : [
              "Promotion Name"
            ]
          },
          "showActionMenu" : true,
          "x" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "y" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "theme" : "wave",
          "step" : "Promotion_Final_3",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "number_30" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_WeeklyRev",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_38" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_37" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_36" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_35" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_39" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Share_of_Shelf_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_9" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_weekly_revenue",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_38" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_SoSCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_8" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_AvgOrderValue",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_37" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "total_sales",
          "numberColor" : "#091A3E",
          "numberSize" : 18,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_7" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_order_value",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_36" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Promotion_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_6" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_Quantity",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_1",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_35" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_PromoCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_45" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_44" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_43" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_42" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_41" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_40" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_45" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_StoreCoverage",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_44" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "store_coverage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_43" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Inventory_Comp_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_29" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_28" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_42" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_InventoryCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_27" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_41" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Facings_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_26" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_40" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_FacingsCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_2",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_25" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_24" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "link_3" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "66b86539-8d6c-442f-8df1-942d79ef84bf"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\"), \"\").asString()}} Performance",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_4" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "7b937a30-4712-4f85-acde-9be26fa70e0c"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\"), \"\").asString()}} Promotion",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_1" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "66b86539-8d6c-442f-8df1-942d79ef84bf"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\"), \"All Category\").asString()}} Performance",
          "textAlignment" : "center",
          "textColor" : "#335779"
        },
        "type" : "link"
      },
      "link_2" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "7b937a30-4712-4f85-acde-9be26fa70e0c"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{coalesce(cell(lens_1.selection, 0, \"ProductCategory_Name_Custom\"), \"All Category\").asString()}} Promotion",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "number_49" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_Quantity",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_48" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "total_qty",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_47" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_change_in_Sales",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_5",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_46" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "total_sales",
          "numberColor" : "#091A3E",
          "numberSize" : 18,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "table_1" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "step" : "MasterTable_5",
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "link_9" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "66b86539-8d6c-442f-8df1-942d79ef84bf"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Product Category",
          "textAlignment" : "center",
          "textColor" : "rgba(51, 87, 121, 0.6)"
        },
        "type" : "link"
      },
      "table_3" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "step" : "MasterTable_1",
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "table_4" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "step" : "MasterTable_2",
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "link_7" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "686a88d9-d63b-41b0-ae3d-323b0e3ca2da"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Assortment",
          "textAlignment" : "center",
          "textColor" : "rgba(51, 87, 121, 0.6)"
        },
        "type" : "link"
      },
      "table_5" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "step" : "MasterTable_3",
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "link_8" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "448e985e-a4fa-4652-bf1b-99d8d3325a0a"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Assortment",
          "textAlignment" : "center",
          "textColor" : "rgb(52, 127, 219)"
        },
        "type" : "link"
      },
      "table_6" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "step" : "MasterTable_4",
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "pillbox_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 14,
          "selectedTab" : {
            "backgroundColor" : "rgba(255, 255, 255, 0.1)",
            "borderColor" : "rgba(255, 255, 255, 0)",
            "borderEdges" : [
              "right"
            ],
            "borderWidth" : 1,
            "textColor" : "#E6ECF2"
          },
          "showActionMenu" : false,
          "step" : "OrderBy_Static_1",
          "textColor" : "rgba(255, 255, 255, 0.37)"
        },
        "type" : "pillbox"
      },
      "link_5" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "66b86539-8d6c-442f-8df1-942d79ef84bf"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Product Category",
          "textAlignment" : "center",
          "textColor" : "rgb(52, 127, 219)"
        },
        "type" : "link"
      },
      "pillbox_3" : {
        "parameters" : {
          "compact" : false,
          "displayTemplate" : "[]",
          "exploreLink" : false,
          "fontSize" : 14,
          "selectedTab" : {
            "backgroundColor" : "rgb(14, 47, 92)",
            "borderColor" : "rgb(52, 127, 219)",
            "borderEdges" : [
              "bottom"
            ],
            "borderWidth" : 4,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "static_7",
          "textColor" : "#7D98B3"
        },
        "type" : "pillbox"
      },
      "link_6" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "448e985e-a4fa-4652-bf1b-99d8d3325a0a"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Brand",
          "textAlignment" : "center",
          "textColor" : "rgb(52, 127, 219)"
        },
        "type" : "link"
      },
      "container_34" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_33" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_32" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_31" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_30" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_58" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_57" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_59" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_54" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Inventory Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_53" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Share-of-Shelf Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_56" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_55" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Store Coverage"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_52" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_2" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_3" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_4" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_6" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_7" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_8" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_9" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "dateselector_1" : {
        "parameters" : {
          "absoluteModeEnabled" : true,
          "calendarTypeSwitchingAllowed" : true,
          "defaultFiscalMode" : false,
          "displayMode" : "filter",
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "presetsEnabled" : true,
          "relativeModeEnabled" : true,
          "showActionMenu" : true,
          "step" : "Comparative_Period_1",
          "title" : "Compare To"
        },
        "type" : "dateselector"
      },
      "text_47" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "ⓘ"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF",
          "tooltip" : "Brands are distributed into top 20%, 20% - 80%, and bottom 20% groups based on this metric."
        },
        "type" : "text"
      },
      "filterpanel_1" : {
        "parameters" : {
          "filterItemOptions" : {
            "backgroundColor" : "#FFFFFF",
            "borderColor" : "#FFFFFF",
            "borderRadius" : 0,
            "borderWidth" : 0,
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [ ],
          "itemsPerRow" : 6,
          "showAllFilters" : true,
          "title" : {
            "separatorColor" : "#E6ECF2",
            "text" : {
              "align" : "left",
              "color" : "#091A3E",
              "fontSize" : 16,
              "label" : "Filters"
            },
            "visible" : false
          }
        },
        "type" : "filterpanel"
      },
      "text_46" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Promotion Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_49" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Facing Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_48" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "ⓘ"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF",
          "tooltip" : "Assortments are distributed into top 20%, 20% - 80%, and bottom 20% groups based on this metric."
        },
        "type" : "text"
      },
      "text_43" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Weekly Revenue"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_42" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Store Coverage"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_45" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Store Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_44" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Out-of-Stock Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_41" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Inventory Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_40" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Facing Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "chart_19" : {
        "parameters" : {
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "scatter",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "radiusRatio" : 5,
          "showActionMenu" : true,
          "x" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "high" : 102.2,
              "low" : -2.2,
              "showDomain" : true
            }
          },
          "y" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "low" : -6,
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "lens_1_1",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "image_1" : {
        "parameters" : {
          "alignmentX" : "center",
          "alignmentY" : "top",
          "fit" : "fitheight",
          "image" : {
            "name" : "${App.Images['Preview_CG_Iconpng66'].Name}",
            "namespace" : "${Org.Namespace}"
          }
        },
        "type" : "image"
      },
      "chart_15" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "total_sales",
              "Promotion"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "customText" : "Period ({{cell(date_parser_2.result, 0, \"Fiscal_label\").asString()}}Year-Week) \n[CreatedDate_Year{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_2.result, 0, \"Is_Fiscal\").asString()}}] \n{{cell(static_10.selection,0,\"Display\").asObject()}} \n[{{cell(static_10.selection,0,\"Field_Alias_x\").asObject()}}] \n----------------------------------------------",
            "showDimensions" : true,
            "showMeasures" : false,
            "customizeTooltip" : true,
            "dimensions" : [
              "Promotion Status",
              "Promotion Name",
              "Start Date",
              "End Date"
            ]
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : [
              "Promotion"
            ],
            "showDashLine" : true
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "referenceLines" : [
              {
                "label" : {
                  "data" : {
                    "displayTemplate" : "Avg: {{cell(AllMetrics_refline_q_1.result, 0, \"refline_text_prefix\").asString()}}[refline_value_label]{{cell(AllMetrics_refline_q_1.result, 0, \"refline_text_suffix\").asString()}}",
                    "sourceType" : "result",
                    "step" : "AllMetrics_refline_q_1"
                  },
                  "type" : "dynamic"
                },
                "value" : {
                  "data" : {
                    "field" : "Reference Line",
                    "sourceType" : "result",
                    "step" : "AllMetrics_refline_q_1"
                  },
                  "type" : "dynamic"
                }
              }
            ],
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "wave",
          "step" : "lens_3_1",
          "markers" : [ ],
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "image_3" : {
        "parameters" : {
          "alignmentX" : "right",
          "alignmentY" : "top",
          "fit" : "fitheight",
          "image" : {
            "name" : "${App.Images['Preview_CG_AvgIconpng14'].Name}",
            "namespace" : "${Org.Namespace}"
          },
          "tooltip" : ""
        },
        "type" : "image"
      },
      "number_78" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_CompliancePercentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_77" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Out_of_Stock_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_76" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_OutOfStock_Compliance",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_75" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_WeeklyRev",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_74" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_weekly_revenue",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_39" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Share-of-Shelf Compliance"
          },
          "fontSize" : 14,
          "showActionMenu" : false,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_73" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_AvgOrderValue",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_72" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_order_value",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_71" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_Quantity",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_36" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "ⓘ"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF",
          "tooltip" : "Product Categories are distributed into top 20%, 20% - 80%, and bottom 20% groups based on this metric."
        },
        "type" : "text"
      },
      "text_38" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "How did the newly launched products perform during the last 180 days?"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_37" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(OrderBy_Static_1.selection, 0, \"Display\").asString()}} Products"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_32" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_31" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_111" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Details"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "text_110" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Details"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "number_79" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Compliance_Percentate_Change_vs_Previous_Period",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_33" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Period ({{cell(date_parser_2.result, 0, \"Fiscal_label\").asString()}}Year-Week)"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgba(9, 26, 62, 0.63)"
        },
        "type" : "text"
      },
      "text_102" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(static_4.selection,0,\"Display\").asObject()}} and {{cell(static_5.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_101" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{coalesce(cell(lens_1_1.selection, 0, \"Product_Family\"), \"\").asString()}} Performance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_30" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Revenue"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_104" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : " Details"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "text_103" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{coalesce(cell(Assortment_lens_1_1.selection, 0, \"Assortment_AssortmentProduct_Assortment_Name\"), \"\").asString()}} Performance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_106" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{coalesce(cell(Promotion_Final_2.selection, 0, \"Promotion Name\"), \"Selected Promotion\").asString()}} Impact on {{cell(static_10.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_105" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Details"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "text_108" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Overall Performance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_107" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(static_4.selection,0,\"Display\").asObject()}} and {{cell(static_5.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_70" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "total_qty",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_109" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Details"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "chart_25" : {
        "parameters" : {
          "autoFitMode" : "none",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "top-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "lens_3_2",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          }
        },
        "type" : "chart"
      },
      "chart_22" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : [
              "total_sales"
            ],
            "showDashLine" : false
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : false,
          "showActionMenu" : true,
          "showZero" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "wave",
          "step" : "lens_3_3",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "listselector_7" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "measureField" : "none",
          "showActionMenu" : true,
          "step" : "Name_2",
          "title" : "Product Category"
        },
        "type" : "listselector"
      },
      "number_89" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Percent_Change_in_StoreCoverage",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "listselector_6" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "measureField" : "none",
          "showActionMenu" : true,
          "step" : "Name_1",
          "title" : "Product"
        },
        "type" : "listselector"
      },
      "number_88" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "store_coverage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "listselector_9" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "measureField" : "none",
          "showActionMenu" : true,
          "step" : "Product_Family_1",
          "title" : "Brand"
        },
        "type" : "listselector"
      },
      "number_87" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Inventory_Comp_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_86" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_InventoryCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_29" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Overall Performance"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_85" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Share_of_Shelf_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "listselector_2" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "static_5",
          "title" : ""
        },
        "type" : "listselector"
      },
      "number_84" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_SoSCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_28" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Represents the x-axis"
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "number_83" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Facings_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "listselector_4" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "static_10",
          "title" : ""
        },
        "type" : "listselector"
      },
      "number_82" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_FacingsCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_25" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Period (Year-Week)"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgba(9, 26, 62, 0.63)"
        },
        "type" : "text"
      },
      "text_24" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_27" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Performance aginst other products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_26" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "How are my products performing?"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_21" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ">  Avg of All Products"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_20" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{coalesce(cell(Promotion_Final_3.selection, 0, \"Promotion Name\"),\"Selected Promotion\").asString()}} Impact on {{cell(static_10.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_23" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Represents the y-axis"
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_22" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "number_81" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "PoP_Promotion_Compliance_percent",
          "numberColor" : "#091A3E",
          "numberSize" : 12,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_80" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Avg_PromoCompliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "AllMetrics___Percent_7",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "listselector_1" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "static_4",
          "title" : ""
        },
        "type" : "listselector"
      },
      "chart_34" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "dual",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : [
              "avg_order_value"
            ],
            "showDashLine" : false
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : false,
          "showActionMenu" : true,
          "showZero" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "wave",
          "step" : "Assortment_lens_3_1",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "chart_32" : {
        "parameters" : {
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "scatter",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "radiusRatio" : 5,
          "showActionMenu" : true,
          "x" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "high" : 102.2,
              "low" : -2.2,
              "showDomain" : true
            }
          },
          "y" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "low" : -6,
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Assortment_lens_1_1",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      }
    }
  }
}