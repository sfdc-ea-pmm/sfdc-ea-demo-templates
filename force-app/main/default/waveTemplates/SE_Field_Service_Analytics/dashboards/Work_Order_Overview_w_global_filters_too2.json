{
  "name" : "Work_Order_Overview_w_global_filters_too2_tp",
  "label" : "Work Order Overview",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "dateVersion" : 1,
  "mobileDisabled" : false,
  "xmd" : {
    "measures" : [ ],
    "derivedDimensions" : [ ],
    "organizations" : [ ],
    "showDetailsDefaultFields" : [ ],
    "dates" : [ ],
    "derivedMeasures" : [ ],
    "dimensions" : [ ]
  },
  "state" : {
    "dataSourceLinks" : [
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.ServiceAppointment3_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ServiceTerritoryId_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.AssignedResource3_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "SA_ServiceTerritoryId_Name"
          }
        ],
        "label" : "SA-AssignedResource|Territory",
        "name" : "Link_10690"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.ServiceAppointment3_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ParentRecordId_AccountId_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.AssignedResource3_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "SA_ParentRecordId_AccountId_Name"
          }
        ],
        "label" : "SA-AssignedResource|Account",
        "name" : "Link_2192"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.ServiceAppointment3_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "AssignedResource_User_User_Name"
          },
          {
            "dataSourceName" : "${App.Datasets.AssignedResource3_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "User_User_Name"
          }
        ],
        "label" : "SA-AssignedResource|Resource",
        "name" : "Link_10707"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.ServiceAppointment3_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "ParentRecordId_Priority"
          },
          {
            "dataSourceName" : "${App.Datasets.AssignedResource3_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "saql",
            "fieldName" : "SA_ParentRecordId_Priority"
          }
        ],
        "label" : "SA-AssignedResource|Priority",
        "name" : "Link_10746"
      }
    ],
    "filters" : [
      {
        "dataset" : {
          "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
        },
        "dependent" : false,
        "fields" : [
          "ServiceTerritoryId_Name"
        ],
        "label" : "Territory",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
        },
        "dependent" : false,
        "fields" : [
          "ParentRecordId_AccountId_Name"
        ],
        "label" : "Account",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
        },
        "dependent" : false,
        "fields" : [
          "AssignedResource_User_User_Name"
        ],
        "label" : "Resource",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
        },
        "dependent" : false,
        "fields" : [
          "ParentRecordId_Priority"
        ],
        "label" : "Priority",
        "locked" : false,
        "operator" : "in"
      }
    ],
    "gridLayouts" : [
      {
        "maxWidth" : 1360,
        "name" : "Default",
        "numColumns" : 48,
        "pages" : [
          {
            "label" : "Untitled",
            "name" : "c0656a5c-bdf0-4e38-9314-72fef97dc961",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 5,
                "column" : 42,
                "name" : "listselector_Time_Selection",
                "row" : 15,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "text__Work_Orders",
                "row" : 22,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_ParentRecordId_1",
                "row" : 27,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 7,
                "name" : "chart_ParentRecordId_Creat_1",
                "row" : 27,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "number_WO_prev_compare_1",
                "row" : 32,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(WO_prev_compare_1.result, 0, \"color\"),\"#091A3E\").asString()}}",
                  "borderColor" : "rgb(0, 0, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "chart_Status_3",
                "row" : 39,
                "rowspan" : 15,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 13,
                "name" : "chart_ParentRecordId_Prior_1",
                "row" : 39,
                "rowspan" : 15,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 25,
                "name" : "text_Work_Order_Volume",
                "row" : 22,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 26, 62)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 25,
                "name" : "chart_ParentRecordId_Accou_3",
                "row" : 27,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "text__Metrics_compared_to_prior_period",
                "row" : 58,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 1,
                "name" : "text_Avg_Travel_Time_min_",
                "row" : 61,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 18,
                "name" : "text_First_Time_Fix",
                "row" : 61,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 35,
                "name" : "text_Mean_Time_to_Repair_min_",
                "row" : 61,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "number_Avg_Travel_Time_2",
                "row" : 64,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 5,
                "name" : "chart_CreatedDate_Year_Cre_2",
                "row" : 64,
                "rowspan" : 7,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "number_all_2",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(all_2.result, 0, \"color\"),\"#ffffff\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 22,
                "name" : "chart_FirstTimeFixChart_1",
                "row" : 64,
                "rowspan" : 7,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 35,
                "name" : "number_ActualDuration_1",
                "row" : 64,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 39,
                "name" : "chart_CreatedDate_Year_Cre_1",
                "row" : 64,
                "rowspan" : 7,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 18,
                "name" : "number_FirstTimeFix_1",
                "row" : 64,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 18,
                "name" : "number_all_3",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(all_3.result, 0, \"color\"),\"#ffffff\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 35,
                "name" : "number_Mean_Time_to_Repair_1",
                "row" : 68,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(Mean_Time_to_Repair__1.result, 0, \"color\"),\"#ffffff\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 20,
                "column" : 14,
                "name" : "pillbox_Status_2",
                "row" : 76,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 2,
                "name" : "text_cell_Status_2_selection_0_wo_box_title_asString_",
                "row" : 82,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 2,
                "name" : "number_all_1",
                "row" : 84,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "container_7",
                "row" : 81,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgJobsPerAgent_comp_1.result, 0, \"left_color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 11,
                "name" : "number_AvgJobsPerAgent_comp_1",
                "row" : 84,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgJobsPerAgent_comp_1.result, 0, \"color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#5C7A99",
                  "borderEdges" : [ ],
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 18,
                "name" : "text_Planned_Work_Time",
                "row" : 82,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 18,
                "name" : "number_WorkTimes",
                "row" : 84,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 14,
                "column" : 17,
                "name" : "container_9",
                "row" : 81,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(84, 105, 141)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 33,
                "name" : "container_10",
                "row" : 81,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgUtilCompare_1.result, 0, \"left_color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 2,
                "name" : "chart_ServiceTerritoryMemb_2",
                "row" : 91,
                "rowspan" : 20,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 34,
                "name" : "chart_ParentRecordId_WorkT_1",
                "row" : 91,
                "rowspan" : 23,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 3,
                "name" : "pillbox_Sort_1",
                "row" : 112,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 8
                }
              },
              {
                "colspan" : 19,
                "column" : 1,
                "name" : "text_Work_Order_Detail_Table",
                "row" : 121,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 18,
                "name" : "chart_ServiceTerritoryMemb_3",
                "row" : 91,
                "rowspan" : 23,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 34,
                "name" : "text_Avg_Utilization_Rate",
                "row" : 82,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 34,
                "name" : "number_Avg_Util_Rate_1",
                "row" : 84,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 43,
                "name" : "number_AvgUtilCompare_1",
                "row" : 84,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgUtilCompare_1.result, 0, \"color\"),\"#54698D\").asString()}}",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 42,
                "name" : "listselector_WO_Volume_Static_Grp_1",
                "row" : 22,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_6",
                "row" : 73,
                "rowspan" : 8,
                "widgetStyle" : {
                  "borderEdges" : [
                    "left",
                    "right"
                  ]
                }
              },
              {
                "colspan" : 4,
                "column" : 26,
                "name" : "number_WorkTimes1",
                "row" : 84,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 24,
                "name" : "text_Actual_Work_Time",
                "row" : 82,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 1,
                "name" : "container_16",
                "row" : 89,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left",
                    "right",
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_5",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#634F95",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 1,
                "name" : "text_Work_Order_Overview1",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 34,
                "name" : "link_Technician_Performance",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#634F95",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 0,
                "name" : "container_8",
                "row" : 21,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "rgba(51, 87, 121, 0.5)",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 24,
                "name" : "container_11",
                "row" : 21,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_12",
                "row" : 56,
                "rowspan" : 17,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom",
                    "left",
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_13",
                "row" : 119,
                "rowspan" : 38,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 11,
                "name" : "container_14",
                "row" : 81,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgJobsPerAgent_comp_1.result, 0, \"color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 17,
                "name" : "container_2",
                "row" : 89,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom",
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 33,
                "name" : "container_3",
                "row" : 89,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right",
                    "left",
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 43,
                "name" : "container_4",
                "row" : 81,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgUtilCompare_1.result, 0, \"color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "container_18",
                "row" : 81,
                "rowspan" : 38,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 47,
                "name" : "container_19",
                "row" : 81,
                "rowspan" : 38,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 15,
                "name" : "container_15",
                "row" : 81,
                "rowspan" : 35,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 2,
                "column" : 31,
                "name" : "container_17",
                "row" : 81,
                "rowspan" : 35,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 46,
                "column" : 1,
                "name" : "container_21",
                "row" : 116,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 27,
                "name" : "text_Work_Order_Overview",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(99, 79, 149)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 46,
                "column" : 1,
                "name" : "table_lens_2",
                "row" : 125,
                "rowspan" : 29,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 37,
                "column" : 0,
                "name" : "filterpanel_1",
                "row" : 11,
                "rowspan" : 10,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_20",
                "row" : 11,
                "rowspan" : 10,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#634F95",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 40,
                "name" : "link_Work_Order_Backlog",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#C5D3E0",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "#C5D3E0"
        },
        "version" : 1.0
      },
      {
        "name" : "iPhone",
        "numColumns" : 6,
        "pages" : [
          {
            "label" : "Untitled",
            "name" : "c0656a5c-bdf0-4e38-9314-72fef97dc961",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "listselector_Time_Selection",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#634F95",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "text__Work_Orders",
                "row" : 24,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 3,
                "name" : "number_ParentRecordId_1",
                "row" : 23,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_ParentRecordId_Creat_1",
                "row" : 28,
                "rowspan" : 11,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 5,
                "name" : "number_WO_prev_compare_1",
                "row" : 24,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(WO_prev_compare_1.result, 0, \"color\"),\"#091A3E\").asString()}}",
                  "borderColor" : "rgb(0, 0, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_Status_3",
                "row" : 43,
                "rowspan" : 22,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_ParentRecordId_Prior_1",
                "row" : 69,
                "rowspan" : 22,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_8",
                "row" : 16,
                "rowspan" : 78,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "rgba(51, 87, 121, 0.5)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "text_Work_Order_Volume",
                "row" : 97,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "listselector_WO_Volume_Static_Grp_1",
                "row" : 100,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_ParentRecordId_Accou_3",
                "row" : 104,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_11",
                "row" : 94,
                "rowspan" : 39,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "text__Metrics_compared_to_prior_period",
                "row" : 133,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "text_Avg_Travel_Time_min_",
                "row" : 138,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "text_First_Time_Fix",
                "row" : 155,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "text_Mean_Time_to_Repair_min_",
                "row" : 175,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 1,
                "column" : 3,
                "name" : "number_Avg_Travel_Time_2",
                "row" : 138,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_CreatedDate_Year_Cre_2",
                "row" : 145,
                "rowspan" : 5,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 1,
                "column" : 3,
                "name" : "number_FirstTimeFix_1",
                "row" : 155,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_FirstTimeFixChart_1",
                "row" : 163,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 3,
                "name" : "number_ActualDuration_1",
                "row" : 175,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_CreatedDate_Year_Cre_1",
                "row" : 183,
                "rowspan" : 7,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 1,
                "column" : 5,
                "name" : "number_all_2",
                "row" : 138,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(all_2.result, 0, \"color\"),\"#ffffff\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 1,
                "column" : 5,
                "name" : "number_all_3",
                "row" : 155,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(all_3.result, 0, \"color\"),\"#ffffff\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 1,
                "column" : 5,
                "name" : "number_Mean_Time_to_Repair_1",
                "row" : 175,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(Mean_Time_to_Repair__1.result, 0, \"color\"),\"#ffffff\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_12",
                "row" : 152,
                "rowspan" : 20,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "pillbox_Status_2",
                "row" : 195,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#F2F6FA",
                  "borderEdges" : [ ],
                  "borderRadius" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_6",
                "row" : 192,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#F2F6FA",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 0,
                "name" : "text_cell_Status_2_selection_0_wo_box_title_asString_",
                "row" : 198,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_all_1",
                "row" : 200,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 0,
                "name" : "container_7",
                "row" : 197,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgJobsPerAgent_comp_1.result, 0, \"left_color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 4,
                "name" : "number_AvgJobsPerAgent_comp_1",
                "row" : 199,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgJobsPerAgent_comp_1.result, 0, \"color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#5C7A99",
                  "borderEdges" : [ ],
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 4,
                "name" : "container_14",
                "row" : 197,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgJobsPerAgent_comp_1.result, 0, \"color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "text_Planned_Work_Time",
                "row" : 232,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "#5C7A99",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "text_Actual_Work_Time",
                "row" : 232,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_WorkTimes",
                "row" : 234,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "number_WorkTimes1",
                "row" : 234,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_9",
                "row" : 231,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(84, 105, 141)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "text_Avg_Utilization_Rate",
                "row" : 266,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_Avg_Util_Rate_1",
                "row" : 268,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(44, 149, 92, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 0,
                "name" : "container_10",
                "row" : 265,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgUtilCompare_1.result, 0, \"left_color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 4,
                "name" : "number_AvgUtilCompare_1",
                "row" : 267,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgUtilCompare_1.result, 0, \"color\"),\"#54698D\").asString()}}",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 2,
                "column" : 4,
                "name" : "container_4",
                "row" : 265,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(AvgUtilCompare_1.result, 0, \"color\"),\"#54698D\").asString()}}",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_ServiceTerritoryMemb_2",
                "row" : 206,
                "rowspan" : 21,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "pillbox_Sort_1",
                "row" : 227,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_16",
                "row" : 204,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left",
                    "right",
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_ServiceTerritoryMemb_3",
                "row" : 239,
                "rowspan" : 23,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_2",
                "row" : 238,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom",
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_ParentRecordId_WorkT_1",
                "row" : 273,
                "rowspan" : 22,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_3",
                "row" : 272,
                "rowspan" : 26,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right",
                    "left",
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "text_Work_Order_Detail_Table",
                "row" : 300,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_13",
                "row" : 298,
                "rowspan" : 37,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "table_lens_21",
                "row" : 304,
                "rowspan" : 30,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_22",
                "row" : 133,
                "rowspan" : 19,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_23",
                "row" : 172,
                "rowspan" : 20,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "filterpanel_2",
                "row" : 7,
                "rowspan" : 9,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [
          "maxWidth(599)"
        ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#F2F6FA",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "#F2F6FA"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "Sort_1" : {
        "broadcastFacet" : false,
        "columns" : { },
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Descending"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "Ascending",
            "value" : "asc",
            "compact_value" : true
          },
          {
            "display" : "Descending",
            "value" : "desc",
            "compact_value" : false
          }
        ]
      },
      "WO_Volume_Static_Grp_1" : {
        "broadcastFacet" : false,
        "columns" : { },
        "isGlobal" : false,
        "label" : "WO_Volume_Static_Grp",
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "By Account"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "By Account",
            "grp" : "ParentRecordId_AccountId_Name",
            "grpp" : [
              "ParentRecordId_AccountId_Name"
            ],
            "grp_ar" : "SA_ParentRecordId_AccountId_Name",
            "viz" : "hbar",
            "legend" : false,
            "meas" : [
              [
                "sum",
                "Opportunity.Amount"
              ],
              [
                "avg",
                "DurationCalculatedField"
              ]
            ],
            "filt" : [
              "IsClosed",
              [
                "true"
              ],
              "in"
            ],
            "yes" : true,
            "no" : false,
            "Xtitle" : "Bookings($)",
            "Ytitle" : "Duration",
            "label" : "",
            "map" : "",
            "lowColor" : "",
            "highColor" : "",
            "visual" : "scatter",
            "ord" : [ ]
          },
          {
            "display" : "By Geography",
            "grp" : "ServiceTerritoryId_State",
            "grpp" : [
              "ServiceTerritoryId_State"
            ],
            "grp_ar" : "SA_ServiceTerritoryId_State",
            "viz" : "choropleth",
            "legend" : true,
            "meas" : [
              [
                "avg",
                "DurationCalculatedField",
                "Average Duration"
              ],
              [
                "count",
                "Id",
                "Closed Case Count"
              ]
            ],
            "filt" : [
              "IsClosed",
              [
                "true"
              ],
              "in"
            ],
            "yes" : true,
            "no" : false,
            "Xtitle" : "",
            "Ytitle" : "",
            "label" : "",
            "map" : "",
            "lowColor" : "",
            "highColor" : "",
            "visual" : "hbar",
            "ord" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          {
            "display" : "By Product",
            "grp" : "ProductConsumed_ProductName",
            "grpp" : [
              "ProductConsumed_ProductName"
            ],
            "grp_ar" : "SA_ProductConsumed_ProductName",
            "viz" : "hbar",
            "legend" : false,
            "meas" : [
              [
                "count",
                "Id",
                "Case Volume"
              ]
            ],
            "filt" : [ ],
            "yes" : true,
            "no" : true,
            "Xtitle" : "",
            "Ytitle" : "",
            "label" : "Case Volume by Geography",
            "map" : "World Countries",
            "lowColor" : "#C5DBF7",
            "highColor" : "#1674D9",
            "visual" : "choropleth",
            "ord" : [ ]
          },
          {
            "display" : "By Work Type",
            "grp" : "ParentRecordId_WorkTypeId_Name",
            "grpp" : [
              "ParentRecordId_WorkTypeId_Name"
            ],
            "grp_ar" : "SA_ParentRecordId_WorkTypeId_Name",
            "viz" : "hbar",
            "legend" : false,
            "meas" : [
              [
                "sum",
                "Opportunity.Amount"
              ],
              [
                "avg",
                "DurationCalculatedField"
              ]
            ],
            "filt" : [
              "IsClosed",
              [
                "true"
              ],
              "in"
            ],
            "yes" : true,
            "no" : false,
            "Xtitle" : "Bookings($)",
            "Ytitle" : "Duration",
            "label" : "",
            "map" : "",
            "lowColor" : "",
            "highColor" : "",
            "visual" : "scatter",
            "ord" : [ ]
          }
        ]
      },
      "WorkTimes" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(Status_2.selection, [\"filt_val\"]).asEquality(\"StatusCategory\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = group q by all; q = foreach q generate avg('DurationInMinutes') as 'avg_DurationInMinutes', avg('ActualDuration') as 'avg_ActualDuration';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "count"
              ]
            },
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            }
          },
          "type" : "chart"
        }
      },
      "FirstTimeFixChart_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "FirstTimeFixChart",
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; a = filter a by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = filter a by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(Status_3.selection, [\"StatusCategory\"]).asEquality(\"StatusCategory\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; i = filter q by 'StatusCategory' == \"CannotComplete\"; g = group q by {{cell(Time_Selection.selection, 0, \"GroupbyEarliestStartTime\").asObject()}} left, i by {{cell(Time_Selection.selection, 0, \"GroupbyEarliestStartTime\").asObject()}}; g = foreach g generate (1-(count(i)/count(q)))*100 as sum_first_time_fix, {{cell(Time_Selection.selection, 0, \"cogroupGenerateEarliestStartTime\").asObject()}};",
            "measures" : [
              [
                "sum",
                "first_time_fix"
              ]
            ],
            "groups" : [
              "{{cell(Time_Selection.selection, 0, \"compactGroup\").asObject()}}"
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "vbar"
        }
      },
      "WO_prev_compare_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "WO_prev_compare",
        "query" : {
          "query" : {
            "pigql" : "q = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(Status_3.selection, [\"StatusCategory\"]).asEquality(\"StatusCategory\")}};  r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; t = group r by all, s by all;  t = foreach t generate coalesce(100*((count(s)-count(r))/count(r)), 0) as 'perc_Percent', (case when 100*((count(s)-count(r))/count(r)) < 0 then \"#D14062\" when 100*((count(s)-count(r))/count(r)) > 0 then \"#0BA976\" else \"#54698D\" end) as 'color';",
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "AvgUtilCompare_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "AvgUtilCompare",
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; a = filter a by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; a = filter a by {{column(Status_2.selection, [\"filt_val_avg_util_compare\"]).asEquality(\"StatusCategory\")}};  a = filter a by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; a = filter a by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; sa = group a by 'Id'; sa = foreach sa generate sum('ActualDuration') as 'sum_ActualDuration', 'Id' as 'Id', first('ServiceTerritoryId_OperatingHoursId') as 'ServiceTerritoryId_OperatingHoursId';  ar = load \"${App.Datasets.AssignedResource3_tp.FullyQualifiedName}\"; ar = cogroup ar by 'ServiceAppointmentId' inner, sa by 'Id'; ar = foreach ar generate sum(ar['ActualTravelTime']) as 'sum_ActualTravelTime', first(ar['ServiceResourceId']) as 'ServiceResourceId', first(sa['ServiceTerritoryId_OperatingHoursId']) as 'ServiceTerritoryId_OperatingHoursId'; ra = load \"${App.Datasets.ResourceAbsence3_tp.FullyQualifiedName}\"; ra = cogroup ra by 'ResourceId' inner, ar by 'ServiceResourceId'; ra = foreach ra generate sum(ra['AbsenceMinutes']) as 'sum_AbsenceMinutes'; ts = load \"${App.Datasets.TimeSlot3_tp.FullyQualifiedName}\"; ts = cogroup ts by 'OperatingHoursId' inner, sa by 'ServiceTerritoryId_OperatingHoursId'; ts = foreach ts generate sum(ts['AvailableTime']) as 'sum_AvailableTime'; t = group a by 'AssignedResource_User_User_Name'; t = foreach t generate unique('AssignedResource_User_User_Name') as 'unique_AssignedResource_User_User_Name'; q = union sa,ar,ra,ts,t; q = group q by all; q = foreach q generate ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name') as 'avg_prev', 100*({{coalesce(cell(Avg_Util_Rate_1.result, 0, \"avg_util_rate\"),0).asString()}} - ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name')) / ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name') as 'perc_util_compare', (case when {{cell(Status_2.selection, 0, \"canceled_val\").asString()}} == 1 then \"#54698D\" when 100*({{coalesce(cell(Avg_Util_Rate_1.result, 0, \"avg_util_rate\"),0).asString()}} - ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name')) / ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name') < 0 then \"#C03757\" when 100*({{coalesce(cell(Avg_Util_Rate_1.result, 0, \"avg_util_rate\"),0).asString()}} - ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name')) / ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name') > 0 then \"#039264\" else \"#54698D\" end) as 'color', (case when 100*({{coalesce(cell(Avg_Util_Rate_1.result, 0, \"avg_util_rate\"),0).asString()}} - ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name')) / ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name') < 0 then \"#D14062\" when 100*({{coalesce(cell(Avg_Util_Rate_1.result, 0, \"avg_util_rate\"),0).asString()}} - ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name')) / ((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name') > 0 then \"#0BA976\" else \"#54698D\" end) as 'left_color';",
            "measures" : [
              [
                "perc",
                "util_compare"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "ServiceTerritoryMemb_3" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.AssignedResource3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; a = filter a by {{column(Status_2.selection, [\"filt_val\"]).asEquality(\"StatusCategory\")}}; a = filter a by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; a = filter a by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; q = load \"${App.Datasets.AssignedResource3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp_ar\"))}}; q = filter q by {{column(Status_2.selection, [\"filt_val\"]).asEquality(\"SA_StatusCategory\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month','SA_EarliestStartTime_Day')\")}}; g = group a by {{cell(Status_2.selection,0,\"box_2_group\").asString()}}; g = foreach g generate {{cell(Status_2.selection,0,\"box_2_generate\").asString()}}; g = order g by {{cell(Status_2.selection,0,\"box_2_sort\").asString()}} desc;",
            "measures" : "{{cell(Status_2.selection,0,\"meas\").asObject()}}",
            "groups" : [
              "name"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "ServiceTerritoryMemb_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(Status_2.selection, [\"filt_val\"]).asEquality(\"StatusCategory\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = group q by {{cell(Status_2.selection,0,\"box_1_group\").asString()}}; q = foreach q generate {{cell(Status_2.selection,0,\"box_1_generate\").asString()}}, count() as count; q = order q by count {{cell(Sort_1.selection, 0, \"value\").asObject()}};",
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : "{{cell(Status_2.selection,0,\"grp\").asObject()}}"
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "stackhbar"
        }
      },
      "ParentRecordId_Creat_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              [
                "EarliestStartTime_Year",
                "EarliestStartTime_Month",
                "EarliestStartTime_Day"
              ]
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "time"
        }
      },
      "ParentRecordId_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "Time_Selection" : {
        "broadcastFacet" : false,
        "columns" : { },
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Last 30 Days"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "YTD",
            "text_display" : "vs previous YTD",
            "Backlog30DayClose" : "[\"current day - 395 days\"..\"current day - 1 year\"]",
            "BacklogCompare" : [
              "current day - 1 year",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Year",
            "ClosedField" : "'ClosedDate_Month'",
            "CoGroup" : "('EarliestStartTime_Month')",
            "Compact" : [
              [
                "year",
                0
              ],
              [
                "year",
                0
              ]
            ],
            "CreatedField" : "'EarliestStartTime_Month'",
            "CreatedProjection" : "created['EarliestStartTime_Month']",
            "Current" : [
              "current year",
              "current day"
            ],
            "FullGroup" : "EarliestStartTime_Year~~~EarliestStartTime_Month",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "GenerateCoGroupDate" : "created['EarliestStartTime_Year']+\"~~~\"+created['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "GenerateEarliestStartTime" : "'EarliestStartTime_Year'+\"~~~\"+'EarliestStartTime_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "cogroupGenerateEarliestStartTime" : "q['EarliestStartTime_Year']+\"~~~\"+q['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "SAGenerateEarliestStartTime" : "'SA_EarliestStartTime_Year'+\"~~~\"+'SA_EarliestStartTime_Month' as 'SA_EarliestStartTime_Year~~~SA_EarliestStartTime_Month'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month')",
            "GroupbyEarliestStartTime" : "('EarliestStartTime_Year','EarliestStartTime_Month')",
            "SAGroupbyEarliestStartTime" : "('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month')",
            "Grouping" : "EarliestStartTime_Year~~~EarliestStartTime_Month",
            "LastPeriodCompare" : [
              "current year - 1 year",
              "current day - 1 year"
            ],
            "LastYearCompare" : [
              "current year - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "EarliestStartTime_Year",
              "EarliestStartTime_Month"
            ],
            "icompactGroup" : [
              "i[EarliestStartTime_Year]",
              "i[EarliestStartTime_Month]"
            ],
            "SAcompactGroup" : [
              "SA_EarliestStartTime_Year",
              "SA_EarliestStartTime_Month"
            ],
            "filter" : "year",
            "queryCogroupNew" : "first(ThisYear['EarliestStartTime_Year'])+\"~~~\"+ThisYear['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "SAQL" : "coalesce((avg(ThisYear['Duration__c'])-avg(LastYear['Duration__c']))/avg(LastYear['Duration__c']),0)*100 as sum_Percent",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "QTD",
            "text_display" : "vs previous QTD",
            "Backlog30DayClose" : "[\"current day - 120 days\"..\"current day - 1 quarter\"]",
            "BacklogCompare" : [
              "current day - 1 quarter",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Quarter",
            "ClosedField" : "'ClosedDate_Week'",
            "CoGroup" : "('EarliestStartTime_Week')",
            "Compact" : [
              [
                "quarter",
                0
              ],
              [
                "quarter",
                0
              ]
            ],
            "CreatedField" : "'EarliestStartTime_Week'",
            "CreatedProjection" : "created['EarliestStartTime_Week']",
            "Current" : [
              "current quarter",
              "current day"
            ],
            "FullGroup" : "EarliestStartTime_Year~~~EarliestStartTime_Week",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Week' as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "GenerateCoGroupDate" : "created['EarliestStartTime_Year']+\"~~~\"+created['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "GenerateEarliestStartTime" : "'EarliestStartTime_Year'+\"~~~\"+'EarliestStartTime_Week' as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "cogroupGenerateEarliestStartTime" : "q['EarliestStartTime_Year']+\"~~~\"+q['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "SAGenerateEarliestStartTime" : "'SA_EarliestStartTime_Year'+\"~~~\"+'SA_EarliestStartTime_Week' as 'SA_EarliestStartTime_Year~~~SA_EarliestStartTime_Week'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Week')",
            "GroupbyEarliestStartTime" : "('EarliestStartTime_Year','EarliestStartTime_Week')",
            "SAGroupbyEarliestStartTime" : "('SA_EarliestStartTime_Year','SA_EarliestStartTime_Week')",
            "Grouping" : "EarliestStartTime_Year~~~EarliestStartTime_Week",
            "LastPeriodCompare" : [
              "current quarter - 1 quarter",
              "current day - 1 quarter"
            ],
            "LastYearCompare" : [
              "current quarter - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "EarliestStartTime_Year",
              "EarliestStartTime_Week"
            ],
            "icompactGroup" : [
              "i[EarliestStartTime_Year]",
              "i[EarliestStartTime_Week]"
            ],
            "SAcompactGroup" : [
              "SA_EarliestStartTime_Year",
              "SA_EarliestStartTime_Week"
            ],
            "filter" : "quarter",
            "queryCogroupNew" : "first(ThisYear['EarliestStartTime_Year'])+\"~~~\"+ThisYear['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "SAQL" : "coalesce((avg(ThisYear['Duration__c'])-avg(LastYear['Duration__c']))/avg(LastYear['Duration__c']),0)*100 as sum_Percent",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "MTD",
            "text_display" : "vs previous MTD",
            "Backlog30DayClose" : "[\"current day - 60 days\"..\"current day - 1 month\"]",
            "BacklogCompare" : [
              "current day - 1 month",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Month",
            "ClosedField" : "'ClosedDate_Month','ClosedDate_Day'",
            "CoGroup" : "('EarliestStartTime_Month','EarliestStartTime_Day')",
            "Compact" : [
              [
                "month",
                0
              ],
              [
                "month",
                0
              ]
            ],
            "CreatedField" : "'EarliestStartTime_Month','EarliestStartTime_Day'",
            "CreatedProjection" : "created['EarliestStartTime_Month'] +\"~~~\" + created['EarliestStartTime_Day']",
            "Current" : [
              "current month",
              "current month"
            ],
            "FullGroup" : "EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month'+\"~~~\"+'ClosedDate_Day' as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "GenerateCoGroupDate" : "created['EarliestStartTime_Year']+\"~~~\"+created['EarliestStartTime_Month']+\"~~~\"+created['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "GenerateEarliestStartTime" : "'EarliestStartTime_Year'+\"~~~\"+'EarliestStartTime_Month'+\"~~~\"+'EarliestStartTime_Day' as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "cogroupGenerateEarliestStartTime" : "q['EarliestStartTime_Year']+\"~~~\"+q['EarliestStartTime_Month']+\"~~~\"+q['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "SAGenerateEarliestStartTime" : "'SA_EarliestStartTime_Year'+\"~~~\"+'SA_EarliestStartTime_Month'+\"~~~\"+'SA_EarliestStartTime_Day' as 'SA_EarliestStartTime_Year~~~SA_EarliestStartTime_Month~~~SA_EarliestStartTime_Day'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')",
            "GroupbyEarliestStartTime" : "('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')",
            "SAGroupbyEarliestStartTime" : "('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month','SA_EarliestStartTime_Day')",
            "Grouping" : "EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day",
            "LastPeriodCompare" : [
              "current month - 1 month",
              "current day - 1 month"
            ],
            "LastYearCompare" : [
              "current month - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Day"
              }
            ],
            "compactGroup" : [
              "EarliestStartTime_Year",
              "EarliestStartTime_Month",
              "EarliestStartTime_Day"
            ],
            "icompactGroup" : [
              "i[EarliestStartTime_Year]",
              "i[EarliestStartTime_Month]",
              "i[EarliestStartTime_Day]"
            ],
            "SAcompactGroup" : [
              "SA_EarliestStartTime_Year",
              "SA_EarliestStartTime_Month",
              "SA_EarliestStartTime_Day"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['EarliestStartTime_Year'])+\"~~~\"+ThisYear['EarliestStartTime_Month']+\"~~~\"+ThisYear['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 7 Days",
            "text_display" : "vs previous 7 days",
            "Backlog30DayClose" : "[\"current day - 37 days\"..\"current day - 7 days\"]",
            "BacklogCompare" : [
              "current day - 1 week",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 7 Days",
            "ClosedField" : "'ClosedDate_Month','ClosedDate_Day'",
            "CoGroup" : "('EarliestStartTime_Month','EarliestStartTime_Day')",
            "Compact" : [
              [
                "day",
                -7
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'EarliestStartTime_Month','EarliestStartTime_Day'",
            "CreatedProjection" : "created['EarliestStartTime_Month'] +\"~~~\" + created['EarliestStartTime_Day']",
            "Current" : [
              "7 days ago",
              "current day"
            ],
            "FullGroup" : "EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month'+\"~~~\"+'ClosedDate_Day' as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "GenerateCoGroupDate" : "created['EarliestStartTime_Year']+\"~~~\"+created['EarliestStartTime_Month']+\"~~~\"+created['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "GenerateEarliestStartTime" : "'EarliestStartTime_Year'+\"~~~\"+'EarliestStartTime_Month'+\"~~~\"+'EarliestStartTime_Day' as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "cogroupGenerateEarliestStartTime" : "q['EarliestStartTime_Year']+\"~~~\"+q['EarliestStartTime_Month']+\"~~~\"+q['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "SAGenerateEarliestStartTime" : "'SA_EarliestStartTime_Year'+\"~~~\"+'SA_EarliestStartTime_Month'+\"~~~\"+'SA_EarliestStartTime_Day' as 'SA_EarliestStartTime_Year~~~SA_EarliestStartTime_Month~~~SA_EarliestStartTime_Day'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')",
            "GroupbyEarliestStartTime" : "('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')",
            "SAGroupbyEarliestStartTime" : "('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month','SA_EarliestStartTime_Day')",
            "Grouping" : "EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day",
            "LastPeriodCompare" : [
              "7 days ago - 1 week",
              "current day - 1 week"
            ],
            "LastYearCompare" : [
              "7 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Day"
              }
            ],
            "compactGroup" : [
              "EarliestStartTime_Year",
              "EarliestStartTime_Month",
              "EarliestStartTime_Day"
            ],
            "icompactGroup" : [
              "i[EarliestStartTime_Year]",
              "i[EarliestStartTime_Month]",
              "i[EarliestStartTime_Day]"
            ],
            "SAcompactGroup" : [
              "SA_EarliestStartTime_Year",
              "SA_EarliestStartTime_Month",
              "SA_EarliestStartTime_Day"
            ],
            "filter" : "week",
            "queryCogroupNew" : "first(ThisYear['EarliestStartTime_Year'])+\"~~~\"+ThisYear['EarliestStartTime_Month']+\"~~~\"+ThisYear['EarliestStartTime_Day'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month~~~EarliestStartTime_Day'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 30 Days",
            "text_display" : "vs previous 30 days",
            "Backlog30DayClose" : "[\"current day - 60 days\"..\"current day - 30 days\"]",
            "BacklogCompare" : [
              "current day - 30 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 30 Days",
            "ClosedField" : "'ClosedDate_Week'",
            "CoGroup" : "('EarliestStartTime_Week')",
            "Compact" : [
              [
                "day",
                -30
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'EarliestStartTime_Week'",
            "CreatedProjection" : "created['EarliestStartTime_Week']",
            "Current" : [
              "30 days ago",
              "current day"
            ],
            "FullGroup" : "EarliestStartTime_Year~~~EarliestStartTime_Week",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Week' as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "GenerateCoGroupDate" : "created['EarliestStartTime_Year']+\"~~~\"+created['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "GenerateEarliestStartTime" : "'EarliestStartTime_Year'+\"~~~\"+'EarliestStartTime_Week' as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "cogroupGenerateEarliestStartTime" : "q['EarliestStartTime_Year']+\"~~~\"+q['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "SAGenerateEarliestStartTime" : "'SA_EarliestStartTime_Year'+\"~~~\"+'SA_EarliestStartTime_Week' as 'SA_EarliestStartTime_Year~~~SA_EarliestStartTime_Week'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Week')",
            "GroupbyEarliestStartTime" : "('EarliestStartTime_Year','EarliestStartTime_Week')",
            "SAGroupbyEarliestStartTime" : "('SA_EarliestStartTime_Year','SA_EarliestStartTime_Week')",
            "Grouping" : "EarliestStartTime_Year~~~EarliestStartTime_Week",
            "LastPeriodCompare" : [
              "30 days ago - 30 days",
              "current day - 30 days"
            ],
            "LastYearCompare" : [
              "30 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "EarliestStartTime_Year",
              "EarliestStartTime_Week"
            ],
            "icompactGroup" : [
              "i[EarliestStartTime_Year]",
              "i[EarliestStartTime_Week]"
            ],
            "SAcompactGroup" : [
              "SA_EarliestStartTime_Year",
              "SA_EarliestStartTime_Week"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['EarliestStartTime_Year'])+\"~~~\"+ThisYear['EarliestStartTime_Week'] as 'EarliestStartTime_Year~~~EarliestStartTime_Week'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 180 Days",
            "text_display" : "vs previous 180 days",
            "Backlog30DayClose" : "[\"current day - 240 days\"..\"current day - 180 days\"]",
            "BacklogCompare" : [
              "current day - 180 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 180 Days",
            "ClosedField" : "'ClosedDate_Month'",
            "CoGroup" : "('EarliestStartTime_Month')",
            "Compact" : [
              [
                "day",
                -180
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'EarliestStartTime_Month'",
            "CreatedProjection" : "created['EarliestStartTime_Month']",
            "Current" : [
              "180 days ago",
              "current day"
            ],
            "FullGroup" : "EarliestStartTime_Year~~~EarliestStartTime_Month",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "GenerateCoGroupDate" : "created['EarliestStartTime_Year']+\"~~~\"+created['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "GenerateEarliestStartTime" : "'EarliestStartTime_Year'+\"~~~\"+'EarliestStartTime_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "cogroupGenerateEarliestStartTime" : "q['EarliestStartTime_Year']+\"~~~\"+q['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "SAGenerateEarliestStartTime" : "'SA_EarliestStartTime_Year'+\"~~~\"+'SA_EarliestStartTime_Month' as 'SA_EarliestStartTime_Year~~~SA_EarliestStartTime_Month'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month')",
            "GroupbyEarliestStartTime" : "('EarliestStartTime_Year','EarliestStartTime_Month')",
            "SAGroupbyEarliestStartTime" : "('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month')",
            "Grouping" : "EarliestStartTime_Year~~~EarliestStartTime_Month",
            "LastPeriodCompare" : [
              "180 days ago - 180 days",
              "current day - 180 days"
            ],
            "LastYearCompare" : [
              "180 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "EarliestStartTime_Year",
              "EarliestStartTime_Month"
            ],
            "icompactGroup" : [
              "i[EarliestStartTime_Year]",
              "i[EarliestStartTime_Month]"
            ],
            "SAcompactGroup" : [
              "SA_EarliestStartTime_Year",
              "SA_EarliestStartTime_Month"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['EarliestStartTime_Year'])+\"~~~\"+ThisYear['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 2 years",
            "text_display" : "vs previous 2 years",
            "Backlog30DayClose" : "[\"current day - 690 days\"..\"current day - 2 years\"]",
            "BacklogCompare" : [
              "current day - 2 years",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 2 years",
            "ClosedField" : "'ClosedDate_Month'",
            "CoGroup" : "('EarliestStartTime_Month')",
            "Compact" : [
              [
                "day",
                -720
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'EarliestStartTime_Month'",
            "CreatedProjection" : "created['EarliestStartTime_Month']",
            "Current" : [
              "2 years ago",
              "current day"
            ],
            "FullGroup" : "EarliestStartTime_Year~~~EarliestStartTime_Month",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "GenerateCoGroupDate" : "created['EarliestStartTime_Year']+\"~~~\"+created['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "GenerateEarliestStartTime" : "'EarliestStartTime_Year'+\"~~~\"+'EarliestStartTime_Month' as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "cogroupGenerateEarliestStartTime" : "q['EarliestStartTime_Year']+\"~~~\"+q['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "SAGenerateEarliestStartTime" : "'SA_EarliestStartTime_Year'+\"~~~\"+'SA_EarliestStartTime_Month' as 'SA_EarliestStartTime_Year~~~SA_EarliestStartTime_Month'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month')",
            "GroupbyEarliestStartTime" : "('EarliestStartTime_Year','EarliestStartTime_Month')",
            "SAGroupbyEarliestStartTime" : "('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month')",
            "Grouping" : "EarliestStartTime_Year~~~EarliestStartTime_Month",
            "LastPeriodCompare" : [
              "2 years ago - 2 years",
              "current day - 2 years"
            ],
            "LastYearCompare" : [
              "2 years ago - 4 years",
              "current day - 2 years"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "EarliestStartTime_Year",
              "EarliestStartTime_Month"
            ],
            "icompactGroup" : [
              "i[EarliestStartTime_Year]",
              "i[EarliestStartTime_Month]"
            ],
            "SAcompactGroup" : [
              "SA_EarliestStartTime_Year",
              "SA_EarliestStartTime_Month"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['EarliestStartTime_Year'])+\"~~~\"+ThisYear['EarliestStartTime_Month'] as 'EarliestStartTime_Year~~~EarliestStartTime_Month'",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          }
        ]
      },
      "all_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q=load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = filter q by {{column(Status_2.selection, [\"filt_val\"]).asEquality(\"StatusCategory\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; q = group q by all; q = foreach q generate {{cell(Status_2.selection,0,\"pigql_query\").asString()}} as 'avg_jobs_per_agent';",
            "measures" : [
              [
                "avg",
                "jobs_per_agent"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "ActualDuration_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "ActualDuration"
              ]
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ],
              [
                "ActualDuration",
                [
                  [
                    0
                  ]
                ],
                ">"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "all_3" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q=load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; w = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; r = filter w by 'StatusCategory' == \"CannotComplete\"; prev = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; prev_inc = filter prev by 'StatusCategory' == \"CannotComplete\";  g = group w by all left, r by all, prev by all left, prev_inc by all; z = foreach g generate 1-(count(r) / count(w))*100 as 'sum_first_time_fix', 1-count(prev_inc) / count(prev)*100 as 'sum_prev_first_time_fix', 100*(((1-(count(r) / count(w)))*100)-((1-(count(prev_inc) / count(prev)))*100)) / ((1-(count(prev_inc) / count(prev)))*100) as 'perc_first_time_fix', (case when 100*(((1-(count(r) / count(w)))*100)-((1-(count(prev_inc) / count(prev)))*100)) / ((1-(count(prev_inc) / count(prev)))*100) < 0 then \"#D14062\" when 100*(((1-(count(r) / count(w)))*100)-((1-(count(prev_inc) / count(prev)))*100)) / ((1-(count(prev_inc) / count(prev)))*100) > 0 then \"#0BA976\" else \"#54698D\" end) as 'color';",
            "measures" : [
              [
                "perc",
                "first_time_fix"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "all_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.AssignedResource3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q=load \"${App.Datasets.AssignedResource3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp_ar\"))}}; q = filter q by 'ActualTravelTime' > 0; q = filter q by {{column(Status_3.selection, [\"StatusCategory\"]).asEquality(\"SA_StatusCategory\")}}; q = filter q by {{column(Status_3.result, [\"StatusCategory\"]).asEquality(\"SA_StatusCategory\")}}; w = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month','SA_EarliestStartTime_Day')\")}}; p = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month','SA_EarliestStartTime_Day')\")}}; g = group w by all, p by all; z = foreach g generate 100*(avg(w['ActualTravelTime']) - avg(p['ActualTravelTime'])) / avg(p['ActualTravelTime']) as 'perc_actual_travel_time_compare', (case when 100*(avg(w['ActualTravelTime']) - avg(p['ActualTravelTime'])) / avg(p['ActualTravelTime']) < 0 then \"#0BA976\" when 100*(avg(w['ActualTravelTime']) - avg(p['ActualTravelTime'])) / avg(p['ActualTravelTime']) > 0 then \"#D14062\" else \"#54698D\" end) as 'color';",
            "measures" : [
              [
                "perc",
                "actual_travel_time_compare"
              ]
            ],
            "filters" : [
              [
                "SA_EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "Avg_Util_Rate_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Avg_Util_Rate",
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; a = filter a by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; a = filter a by {{column(Status_2.selection, [\"filt_val_avg_util_compare\"]).asEquality(\"StatusCategory\")}}; a = filter a by {{column(ServiceTerritoryMemb_2.selection, [\"AssignedResource_User_User_Name\"]).asEquality(\"AssignedResource_User_User_Name\")}}; a = filter a by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; a = filter a by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; sa = group a by 'Id'; sa = foreach sa generate sum('ActualDuration') as 'sum_ActualDuration', 'Id' as 'Id', first('ServiceTerritoryId_OperatingHoursId') as 'ServiceTerritoryId_OperatingHoursId';  ar = load \"${App.Datasets.AssignedResource3_tp.FullyQualifiedName}\"; ar = cogroup ar by 'ServiceAppointmentId' inner, sa by 'Id'; ar = foreach ar generate sum(ar['ActualTravelTime']) as 'sum_ActualTravelTime', first(ar['ServiceResourceId']) as 'ServiceResourceId', first(sa['ServiceTerritoryId_OperatingHoursId']) as 'ServiceTerritoryId_OperatingHoursId'; ra = load \"${App.Datasets.ResourceAbsence3_tp.FullyQualifiedName}\"; ra = cogroup ra by 'ResourceId' inner, ar by 'ServiceResourceId'; ra = foreach ra generate sum(ra['AbsenceMinutes']) as 'sum_AbsenceMinutes'; ts = load \"${App.Datasets.TimeSlot3_tp.FullyQualifiedName}\"; ts = cogroup ts by 'OperatingHoursId' inner, sa by 'ServiceTerritoryId_OperatingHoursId'; ts = foreach ts generate sum(ts['AvailableTime']) as 'sum_AvailableTime'; t = group a by 'AssignedResource_User_User_Name'; t = foreach t generate unique('AssignedResource_User_User_Name') as 'unique_AssignedResource_User_User_Name'; q = union sa,ar,ra,ts,t; q = group q by all; q = foreach q generate coalesce(((sum('sum_ActualDuration') + sum('sum_ActualTravelTime')) / (sum('sum_AvailableTime') - sum('sum_AbsenceMinutes'))) / unique('unique_AssignedResource_User_User_Name'),0) as 'avg_util_rate';",
            "measures" : [
              [
                "avg",
                "util_rate"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "ParentRecordId_Prior_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "ParentRecordId_Priority"
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "CreatedDate_Year_Cre_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "ActualDuration"
              ]
            ],
            "groups" : [
              "{{cell(Time_Selection.selection, 0, \"compactGroup\").asObject()}}"
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ],
              [
                "ActualDuration",
                [
                  [
                    0
                  ]
                ],
                ">"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "vbar"
        }
      },
      "Status_2" : {
        "broadcastFacet" : false,
        "columns" : { },
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Completed"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "Completed",
            "grp" : [
              "AssignedResource_User_User_Name",
              "ParentRecordId_WorkTypeId_Name"
            ],
            "group" : "AssignedResource_User_User_Name",
            "box_1_group" : "('AssignedResource_User_User_Name', 'ParentRecordId_WorkTypeId_Name')",
            "box_2_group" : "'AssignedResource_User_User_Name', q by 'User_User_Name'",
            "box_1_generate" : "'AssignedResource_User_User_Name' as 'AssignedResource_User_User_Name', 'ParentRecordId_WorkTypeId_Name' as 'ParentRecordId_WorkTypeId_Name'",
            "box_2_generate" : "q['User_User_Name'] as 'name', avg(q['ActualTravelTime']) as 'avg_ActualTravelTime', avg(a['ActualDuration']) as 'avg_ActualDuration'",
            "box_2_sort" : "'avg_ActualTravelTime'",
            "meas" : [
              [
                "avg",
                "ActualDuration"
              ],
              [
                "avg",
                "ActualTravelTime"
              ]
            ],
            "filt" : [
              "StatusCategory",
              [
                "Completed"
              ],
              "in"
            ],
            "filt_val" : "Completed",
            "filt_val_avg_util_compare" : "Completed",
            "canceled_val" : "0",
            "pigql_query" : "(count(q) / unique('AssignedResource_User_User_Id'))",
            "wo_box_title" : "# Work Orders / Technician",
            "wo_chart_title" : "Work Order by Technician and Work Type",
            "font_color" : "#ffffff",
            "font_color_avg_util" : "#ffffff",
            "yes" : true,
            "no" : false,
            "Xtitle" : "Bookings($)",
            "Ytitle" : "Duration",
            "label" : "Technician's Service and Windshield Time",
            "map" : "",
            "lowColor" : "",
            "highColor" : "",
            "viz" : "stackhbar",
            "ord" : [ ]
          },
          {
            "display" : "Cannot Complete",
            "grp" : [
              "AssignedResource_User_User_Name",
              "ParentRecordId_WorkTypeId_Name"
            ],
            "group" : "AssignedResource_User_User_Name",
            "box_1_group" : "('AssignedResource_User_User_Name', 'ParentRecordId_WorkTypeId_Name')",
            "box_2_group" : "'AssignedResource_User_User_Name', q by 'User_User_Name'",
            "box_1_generate" : "'AssignedResource_User_User_Name' as 'AssignedResource_User_User_Name', 'ParentRecordId_WorkTypeId_Name' as 'ParentRecordId_WorkTypeId_Name'",
            "box_2_generate" : "q['User_User_Name'] as 'name', avg(q['ActualTravelTime']) as 'avg_ActualTravelTime', avg(a['ActualDuration']) as 'avg_ActualDuration'",
            "box_2_sort" : "'avg_ActualTravelTime'",
            "meas" : [
              [
                "avg",
                "ActualDuration"
              ],
              [
                "avg",
                "ActualTravelTime"
              ]
            ],
            "filt" : [
              "StatusCategory",
              [
                "CannotComplete"
              ]
            ],
            "filt_val" : "CannotComplete",
            "filt_val_avg_util_compare" : "bla",
            "canceled_val" : "1",
            "pigql_query" : "(count(q) / unique('AssignedResource_User_User_Id'))",
            "wo_box_title" : "# Work Orders / Technician",
            "wo_chart_title" : "Work Order by Technician and Work Type",
            "font_color" : "#ffffff",
            "font_color_avg_util" : "#54698D",
            "yes" : true,
            "no" : false,
            "Xtitle" : "",
            "Ytitle" : "",
            "label" : "Technician's Service and Windshield Time",
            "map" : "",
            "lowColor" : "",
            "highColor" : "",
            "viz" : "stackhbar",
            "ord" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          {
            "display" : "Canceled",
            "grp" : [
              "ParentRecordId_AccountId_Name",
              "ParentRecordId_WorkTypeId_Name"
            ],
            "group" : "ParentRecordId_WorkTypeId_Name",
            "box_1_group" : "('ParentRecordId_AccountId_Name', 'ParentRecordId_WorkTypeId_Name')",
            "box_2_group" : "'ParentRecordId_WorkTypeId_Name'",
            "box_1_generate" : "'ParentRecordId_AccountId_Name' as 'ParentRecordId_AccountId_Name', 'ParentRecordId_WorkTypeId_Name' as 'ParentRecordId_WorkTypeId_Name'",
            "box_2_generate" : "a['ParentRecordId_WorkTypeId_Name'] as 'name', avg(a['DurationInMinutes']) as 'avg_DurationInMinutes'",
            "box_2_sort" : "'avg_DurationInMinutes'",
            "meas" : [
              [
                "avg",
                "DurationInMinutes"
              ]
            ],
            "filt" : [
              "StatusCategory",
              [
                "Canceled"
              ]
            ],
            "filt_val" : "Canceled",
            "filt_val_avg_util_compare" : "bla",
            "canceled_val" : "1",
            "wo_box_title" : "# Work Orders",
            "wo_chart_title" : "Work Order by Account and Work Type",
            "pigql_query" : "count(q)",
            "font_color" : "#54698D",
            "font_color_avg_util" : "#54698D",
            "yes" : true,
            "no" : true,
            "Xtitle" : "",
            "Ytitle" : "",
            "label" : "Canceled Work Orders by Work Type",
            "map" : "World Countries",
            "lowColor" : "#C5DBF7",
            "highColor" : "#1674D9",
            "viz" : "stackhbar",
            "ord" : [ ]
          },
          {
            "display" : "Scheduled",
            "grp" : [
              "AssignedResource_User_User_Name",
              "ParentRecordId_WorkTypeId_Name"
            ],
            "group" : "AssignedResource_User_User_Name",
            "box_1_group" : "('AssignedResource_User_User_Name', 'ParentRecordId_WorkTypeId_Name')",
            "box_2_group" : "'AssignedResource_User_User_Name', q by 'User_User_Name'",
            "box_1_generate" : "'AssignedResource_User_User_Name' as 'AssignedResource_User_User_Name', 'ParentRecordId_WorkTypeId_Name' as 'ParentRecordId_WorkTypeId_Name'",
            "box_2_generate" : "q['User_User_Name'] as 'name', avg(q['ActualTravelTime']) as 'avg_ActualTravelTime', avg(a['ActualDuration']) as 'avg_ActualDuration'",
            "box_2_sort" : "'avg_ActualTravelTime'",
            "meas" : [
              [
                "avg",
                "ActualDuration"
              ],
              [
                "avg",
                "ActualTravelTime"
              ]
            ],
            "filt" : [
              "StatusCategory",
              [
                "Scheduled"
              ],
              "in"
            ],
            "filt_val" : "Scheduled",
            "filt_val_avg_util_compare" : "Scheduled",
            "canceled_val" : "0",
            "pigql_query" : "(count(q) / unique('AssignedResource_User_User_Id'))",
            "wo_box_title" : "# Work Orders / Technician",
            "wo_chart_title" : "Work Order by Technician and Work Type",
            "font_color" : "#54698D",
            "font_color_avg_util" : "#ffffff",
            "yes" : true,
            "no" : false,
            "Xtitle" : "Bookings($)",
            "Ytitle" : "Duration",
            "label" : "Technician's Service and Windshield Time",
            "map" : "",
            "lowColor" : "",
            "highColor" : "",
            "viz" : "stackhbar",
            "ord" : [ ]
          }
        ]
      },
      "Status_3" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "StatusCategory"
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "ParentRecordId_WorkT_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(Status_2.selection, [\"filt_val\"]).asEquality(\"StatusCategory\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = group q by 'ParentRecordId_WorkTypeId_Name'; q = foreach q generate count() as count, 'ParentRecordId_WorkTypeId_Name' as 'ParentRecordId_WorkTypeId_Name';",
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "ParentRecordId_WorkTypeId_Name"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "pie"
        }
      },
      "FirstTimeFix_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "FirstTimeFix",
        "query" : {
          "query" : {
            "pigql" : "q = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\";  q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = filter q by {{column(Status_3.selection, [\"StatusCategory\"]).asEquality(\"StatusCategory\")}}; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; i = filter q by 'StatusCategory' == \"CannotComplete\"; g = group q by all left, i by all; g = foreach g generate (1-(count(i)/count(q)))*100 as sum_first_time_fix;",
            "measures" : [
              [
                "sum",
                "first_time_fix"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "AvgJobsPerAgent_comp_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "AvgJobsPerAgent_compare",
        "query" : {
          "query" : {
            "pigql" : "q=load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = filter q by {{column(Status_2.selection, [\"filt_val\"]).asEquality(\"StatusCategory\")}}; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; t = group r by all, s by all; z = foreach t generate coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) as 'perc_jobs_per_agent_period_over_period', (case when {{cell(Status_2.selection, 0, \"canceled_val\").asString()}} == 1 && coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) < 0 then \"#0BA976\" when {{cell(Status_2.selection, 0, \"canceled_val\").asString()}} == 1 && coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) > 0 then \"#D14062\" when coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) < 0 then \"#D14062\" when coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) > 0 then \"#0BA976\" else \"#54698D\" end) as 'left_color', (case when {{cell(Status_2.selection, 0, \"canceled_val\").asString()}} == 1 && coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) < 0 then \"#039264\" when {{cell(Status_2.selection, 0, \"canceled_val\").asString()}} == 1 && coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) > 0 then \"#C03757\" when coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) < 0 then \"#C03757\" when coalesce(100*((count(s) / unique(s['AssignedResource_User_User_Id']))-(count(r) / unique(s['AssignedResource_User_User_Id']))) / (count(r) / unique(s['AssignedResource_User_User_Id'])),0) > 0 then \"#039264\" else \"#54698D\" end) as 'color';",
            "measures" : [
              [
                "perc",
                "jobs_per_agent_period_over_period"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "CreatedDate_Year_Cre_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.AssignedResource3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q=load \"${App.Datasets.AssignedResource3_tp.FullyQualifiedName}\"; q = filter q by {{column(Status_3.selection, [\"StatusCategory\"]).asEquality(\"SA_StatusCategory\")}}; q = filter q by {{column(Status_3.result, [\"StatusCategory\"]).asEquality(\"SA_StatusCategory\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month','SA_EarliestStartTime_Day')\")}}; q = filter q by 'ActualTravelTime' > 0; q = group q by {{cell(Time_Selection.selection, 0, \"SAGroupbyEarliestStartTime\").asObject()}}; z = foreach q generate avg('ActualTravelTime') as 'avg_ActualTravelTime', {{cell(Time_Selection.selection, 0, \"SAGenerateEarliestStartTime\").asObject()}};",
            "measures" : [
              [
                "avg",
                "ActualTravelTime"
              ]
            ],
            "groups" : [
              "{{cell(Time_Selection.selection, 0, \"SAcompactGroup\").asObject()}}"
            ],
            "filters" : [
              [
                "SA_EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "time"
        }
      },
      "Avg_Travel_Time_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.AssignedResource3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Avg_Travel_Time",
        "query" : {
          "query" : {
            "pigql" : "q=load \"${App.Datasets.AssignedResource3_tp.FullyQualifiedName}\"; q = filter q by {{column(Status_3.selection, [\"StatusCategory\"]).asEquality(\"SA_StatusCategory\")}}; q = filter q by {{column(Status_3.result, [\"StatusCategory\"]).asEquality(\"SA_StatusCategory\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('SA_EarliestStartTime_Year','SA_EarliestStartTime_Month','SA_EarliestStartTime_Day')\")}}; q = filter q by 'ActualTravelTime' > 0; q = group q by all; z = foreach q generate avg('ActualTravelTime') as 'avg_ActualTravelTime';",
            "measures" : [
              [
                "avg",
                "ActualTravelTime"
              ]
            ],
            "filters" : [
              [
                "SA_EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "Mean_Time_to_Repair__1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Mean_Time_to_Repair_compare",
        "query" : {
          "query" : {
            "pigql" : "q=load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{column(ParentRecordId_Accou_3.selection, cell(WO_Volume_Static_Grp_1.selection,0,\"grpp\")).asEquality(cell(WO_Volume_Static_Grp_1.selection, 0, \"grp\"))}}; q = filter q by 'ActualDuration' > 0; q = filter q by {{column(Status_3.selection, [\"StatusCategory\"]).asEquality(\"StatusCategory\")}}; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(ParentRecordId_Prior_1.selection, [\"ParentRecordId_Priority\"]).asEquality(\"ParentRecordId_Priority\")}}; q = filter q by {{column(Status_3.selection, [\"StatusCategory\"]).asEquality(\"StatusCategory\")}}; curr = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; prev = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; g = group curr by all, prev by all; z = foreach g generate 100*((avg(curr['ActualDuration'])-avg(prev['ActualDuration']))/avg(prev['ActualDuration'])) as 'perc_mean_time_to_repair', (case when 100*((avg(curr['ActualDuration'])-avg(prev['ActualDuration']))/avg(prev['ActualDuration'])) < 0 then \"#0BA976\" when 100*(avg(curr['ActualDuration'])-avg(prev['ActualDuration']))/avg(prev['ActualDuration']) > 0 then \"#D14062\" else \"#54698D\" end) as 'color';",
            "measures" : [
              [
                "perc",
                "mean_time_to_repair"
              ]
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "ParentRecordId_Accou_3" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.ServiceAppointment3_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "{{cell(WO_Volume_Static_Grp_1.selection,0,\"grp\").asObject()}}"
            ],
            "filters" : [
              [
                "EarliestStartTime",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "lens_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.ServiceAppointment3_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('EarliestStartTime_Year','EarliestStartTime_Month','EarliestStartTime_Day')\")}}; q = foreach q generate 'AppointmentNumber' as 'AppointmentNumber',  first('ParentRecordId_WorkOrderNumber') as 'ParentRecordId_WorkOrderNumber', first('ParentRecordId_WorkTypeId_Name') as 'ParentRecordId_WorkTypeId_Name', first('AssignedResource_User_User_SmallPhotoUrl') as 'AssignedResource_User_User_SmallPhotoUrl', first('AssignedResource_User_User_Name') as 'AssignedResource_User_User_Name', sum('DurationInMinutes') as 'DurationInMinutes', sum('ActualDuration') as 'ActualDuration', first('ParentRecordId_AccountId_Name') as 'ParentRecordId_AccountId_Name', first('ServiceTerritoryId_Name') as 'ServiceTerritoryId_Name', first('ParentRecordId_Priority') as 'ParentRecordId_Priority', first('StatusCategory') as 'StatusCategory', first('DueDate') as 'DueDate', first('ProductConsumed_ProductName') as 'ProductConsumed_ProductName', first('ParentRecordId_CaseId') as 'ParentRecordId_CaseId'; q = order q by 'AppointmentNumber' asc;q = limit q 100;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "container_19" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_18" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_17" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_16" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_15" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_14" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_13" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_Mean_Time_to_Repair_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_mean_time_to_repair",
          "numberColor" : "#ffffff",
          "numberSize" : 12,
          "showActionMenu" : true,
          "step" : "Mean_Time_to_Repair__1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_WorkTimes" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_DurationInMinutes",
          "numberColor" : "#FFFFFF",
          "numberSize" : 32,
          "showActionMenu" : true,
          "step" : "WorkTimes",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_2" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_ServiceTerritoryMemb_2" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "totalValue" : "computeTotal",
          "showValues" : false,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "{{cell(Status_2.selection,0,\"viz\").asString()}}",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "{{cell(Status_2.selection,0,\"wo_chart_title\").asString()}}",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "totalLabel" : "",
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "normalize" : false,
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "step" : "ServiceTerritoryMemb_2",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_3" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_ServiceTerritoryMemb_3" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "totalValue" : "computeTotal",
          "showValues" : false,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "sync",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "{{cell(Status_2.selection,0,\"label\").asString()}}",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "totalLabel" : "",
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "step" : "ServiceTerritoryMemb_3",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_4" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_5" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_6" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_23" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_7" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_22" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_8" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_21" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_9" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_20" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_First_Time_Fix" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "First Time Fix"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text__Work_Orders" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "# Work Orders"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "chart_ParentRecordId_Prior_1" : {
        "parameters" : {
          "centerText" : "",
          "totalValue" : "computeTotal",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : 40,
            "position" : "right-top",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "pie",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "Work Order Priority",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "textColor" : "#FFFFFF",
          "inner" : 70,
          "totalLabel" : "",
          "showActionMenu" : true,
          "centerValueType" : "none",
          "valueType" : "compactNumber",
          "step" : "ParentRecordId_Prior_1",
          "theme" : "dark",
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "filterpanel_2" : {
        "parameters" : {
          "filterItemOptions" : {
            "backgroundColor" : "#FFFFFF",
            "borderColor" : "#E6ECF2",
            "borderRadius" : 4,
            "borderWidth" : 1,
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [ ],
          "itemsPerRow" : 6,
          "showAllFilters" : true,
          "title" : {
            "separatorColor" : "#E6ECF2",
            "text" : {
              "align" : "left",
              "color" : "#091A3E",
              "fontSize" : 16,
              "label" : "Filters"
            },
            "visible" : true
          }
        },
        "type" : "filterpanel"
      },
      "filterpanel_1" : {
        "parameters" : {
          "filterItemOptions" : {
            "backgroundColor" : "#FFFFFF",
            "borderColor" : "#E6ECF2",
            "borderRadius" : 4,
            "borderWidth" : 1,
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [ ],
          "itemsPerRow" : 6,
          "showAllFilters" : true,
          "title" : {
            "separatorColor" : "#E6ECF2",
            "text" : {
              "align" : "left",
              "color" : "#091A3E",
              "fontSize" : 16,
              "label" : "Filters"
            },
            "visible" : true
          }
        },
        "type" : "filterpanel"
      },
      "table_lens_21" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "maxColumnWidth" : 300,
          "minColumnWidth" : 40,
          "mode" : "variable",
          "numberOfLines" : 1,
          "showActionMenu" : true,
          "step" : "lens_2",
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "text_Avg_Travel_Time_min_" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Travel Time (min)"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "pillbox_Sort_1" : {
        "parameters" : {
          "compact" : false,
          "displayTemplate" : "[]",
          "exploreLink" : false,
          "fontSize" : 16,
          "selectedTab" : {
            "backgroundColor" : "#677A97",
            "borderColor" : "#C6D3E1",
            "borderEdges" : [ ],
            "borderWidth" : 1,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : true,
          "step" : "Sort_1",
          "textColor" : "#5C7A99"
        },
        "type" : "pillbox"
      },
      "chart_CreatedDate_Year_Cre_2" : {
        "parameters" : {
          "totalValue" : "computeTotal",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "time",
          "missingValue" : "connect",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : false,
          "timeAxis" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Earliest Start Permitted"
          },
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "totalLabel" : "",
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "step" : "CreatedDate_Year_Cre_2",
          "theme" : "light",
          "applyConditionalFormatting" : false,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "number_AvgUtilCompare_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_util_compare",
          "numberColor" : "{{coalesce(cell(Status_2.selection, 0, \"font_color_avg_util\"),\"#54698D\").asString()}}",
          "numberSize" : 16,
          "showActionMenu" : true,
          "step" : "AvgUtilCompare_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_CreatedDate_Year_Cre_1" : {
        "parameters" : {
          "totalValue" : "computeTotal",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "time",
          "missingValue" : "connect",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : true,
          "timeAxis" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Earliest Start Permitted"
          },
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "totalLabel" : "",
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "step" : "CreatedDate_Year_Cre_1",
          "theme" : "light",
          "applyConditionalFormatting" : false,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "table_lens_2" : {
        "parameters" : {
          "borderColor" : "#e1e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#f2f6fa",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : {
            "AssignedResource_User_User_SmallPhotoUrl" : {
              "parameters" : {
                "alignment" : "center",
                "width" : 100
              },
              "type" : "image"
            }
          },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "evenRowColor" : "#f2f6fa",
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#e4ecf2",
            "fontColor" : "#5c7a99",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a9b7c7",
          "innerMinorBorderColor" : "#e1e5ee",
          "maxColumnWidth" : 300,
          "minColumnWidth" : 40,
          "mode" : "variable",
          "numberOfLines" : 1,
          "oddRowColor" : "#ffffff",
          "showActionMenu" : true,
          "showRowIndexColumn" : false,
          "step" : "lens_2",
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "chart_ParentRecordId_WorkT_1" : {
        "parameters" : {
          "centerText" : "",
          "totalValue" : "computeTotal",
          "showMeasureTitle" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "pie",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "Work Order Types",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70,
          "totalLabel" : "",
          "showActionMenu" : true,
          "centerValueType" : "none",
          "valueType" : "compactNumber",
          "step" : "ParentRecordId_WorkT_1",
          "theme" : "light",
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "container_12" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_11" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_10" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_Work_Order_Overview" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Work Order Overview"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(99, 79, 149)"
        },
        "type" : "text"
      },
      "chart_Status_3" : {
        "parameters" : {
          "centerText" : "",
          "totalValue" : "computeTotal",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : 40,
            "position" : "right-top",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "pie",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "Work Order Status",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "textColor" : "#FFFFFF",
          "inner" : 70,
          "totalLabel" : "",
          "showActionMenu" : true,
          "centerValueType" : "none",
          "valueType" : "compactNumber",
          "step" : "Status_3",
          "theme" : "dark",
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "number_Avg_Travel_Time_2" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "measureField" : "avg_ActualTravelTime",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : true,
          "step" : "Avg_Travel_Time_2",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_all_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_jobs_per_agent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 32,
          "showActionMenu" : true,
          "step" : "all_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_Work_Order_Overview1" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Work Order Overview"
          },
          "fontSize" : 24,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "number_all_3" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_first_time_fix",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "showActionMenu" : true,
          "step" : "all_3",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_all_2" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_actual_travel_time_compare",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "showActionMenu" : true,
          "step" : "all_2",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_ActualDuration_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_ActualDuration",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : true,
          "step" : "ActualDuration_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 18
        },
        "type" : "number"
      },
      "chart_FirstTimeFixChart_1" : {
        "parameters" : {
          "totalValue" : "computeTotal",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "time",
          "missingValue" : "connect",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : false,
          "timeAxis" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Earliest Start Permitted"
          },
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "totalLabel" : "",
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "step" : "FirstTimeFixChart_1",
          "theme" : "light",
          "applyConditionalFormatting" : false,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "text_Mean_Time_to_Repair_min_" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Mean Time to Repair (min)"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_ParentRecordId_Creat_1" : {
        "parameters" : {
          "totalValue" : "computeTotal",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "time",
          "missingValue" : "connect",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "textColor" : "#FFFFFF",
          "totalLabel" : "",
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "# WO",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "step" : "ParentRecordId_Creat_1",
          "theme" : "dark",
          "applyConditionalFormatting" : false,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "number_WO_prev_compare_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 14,
          "showActionMenu" : true,
          "step" : "WO_prev_compare_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#FFFFFF",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "number_AvgJobsPerAgent_comp_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_jobs_per_agent_period_over_period",
          "numberColor" : "#ffffff",
          "numberSize" : 16,
          "showActionMenu" : true,
          "step" : "AvgJobsPerAgent_comp_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_Work_Order_Backlog" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Work Order Backlog'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : true,
          "text" : "Work Order Backlog",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "text_Avg_Utilization_Rate" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Utilization Rate"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_Planned_Work_Time" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Planned Work Time"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text__Metrics_compared_to_prior_period" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "* Metrics compared to prior period"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#5C7A99"
        },
        "type" : "text"
      },
      "text_Work_Order_Volume" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Work Order Volume"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "listselector_Time_Selection" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "expanded" : true,
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#17324D"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "Time_Selection",
          "title" : "Date Range"
        },
        "type" : "listselector"
      },
      "text_Actual_Work_Time" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Actual Work Time"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "{{coalesce(cell(Status_2.selection, 0, \"font_color\"),\"#54698D\").asString()}}"
        },
        "type" : "text"
      },
      "link_Technician_Performance" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Technician Performance'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : true,
          "text" : "Technician Performance",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "number_ParentRecordId_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "count",
          "numberColor" : "#FFFFFF",
          "numberSize" : 48,
          "showActionMenu" : true,
          "step" : "ParentRecordId_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_WorkTimes1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_ActualDuration",
          "numberColor" : "{{coalesce(cell(Status_2.selection, 0, \"font_color\"),\"#54698D\").asString()}}",
          "numberSize" : 32,
          "showActionMenu" : true,
          "step" : "WorkTimes",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "{{coalesce(cell(Status_2.selection, 0, \"font_color\"),\"#54698D\").asString()}}",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "pillbox_Status_2" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 16,
          "selectedTab" : {
            "backgroundColor" : "#677A97",
            "borderColor" : "#C6D3E1",
            "borderEdges" : [ ],
            "borderWidth" : 1,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : true,
          "step" : "Status_2",
          "textColor" : "#5C7A99"
        },
        "type" : "pillbox"
      },
      "text_cell_Status_2_selection_0_wo_box_title_asString_" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(Status_2.selection,0,\"wo_box_title\").asString()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "chart_ParentRecordId_Accou_3" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "totalValue" : "computeTotal",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : "{{cell(WO_Volume_Static_Grp_1.selection,0,\"legend\").asObject()}}",
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "highColor" : "#1674D9",
          "lowColor" : "#C5DBF7",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "{{cell(WO_Volume_Static_Grp_1.selection,0,\"viz\").asString()}}",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "totalLabel" : "",
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "step" : "ParentRecordId_Accou_3",
          "theme" : "dark",
          "map" : "US States",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : false
        },
        "type" : "chart"
      },
      "text_Work_Order_Detail_Table" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Work Order Detail Table"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "number_Avg_Util_Rate_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_util_rate",
          "numberColor" : "{{coalesce(cell(Status_2.selection, 0, \"font_color_avg_util\"),\"#54698D\").asString()}}",
          "numberSize" : 32,
          "showActionMenu" : true,
          "step" : "Avg_Util_Rate_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_FirstTimeFix_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "sum_first_time_fix",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : true,
          "step" : "FirstTimeFix_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "listselector_WO_Volume_Static_Grp_1" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "combo",
          "displayTemplate" : "[]",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#091A3E",
            "valueColor" : "#17324D"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "WO_Volume_Static_Grp_1",
          "title" : ""
        },
        "type" : "listselector"
      }
    }
  }
}