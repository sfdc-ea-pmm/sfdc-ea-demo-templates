{
  "isDeletable": true,
  "notificationLevel": "Never",
  "workflowDefinition": {
    "Shift_Dates_ServiceAppointmentDemo": {
      "action": "computeExpression",
      "parameters": {
        "source": "Drop_Dates_ServiceAppointmentDemo",
        "mergeWithSource": true,
        "computedFields": [
          {
            "name": "LastProcessedDate",
            "format": "yyyy-MM-dd",
            "saqlExpression": "now()",
            "label": "Last Processed",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "EarliestStartTime",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('EarliestStartTime_Aux_sec_epoch' + 'ElapsedSeconds')",
            "label": "EarliestStartTime",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "CreatedDate",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('CreatedDate_Aux_sec_epoch' + 'ElapsedSeconds')",
            "label": "CreatedDate",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "DueDate",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('DueDate_Aux_sec_epoch' + 'ElapsedSeconds')",
            "label": "DueDate",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "saqlExpression": "toDate('ActualStartTime_Aux_sec_epoch' + 'ElapsedSeconds')",
            "name": "ActualStartTime",
            "format": "yyyy-MM-dd",
            "label": "ActualStartTime",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "saqlExpression": "toDate('ActualEndTime_Aux_sec_epoch' + 'ElapsedSeconds')",
            "name": "ActualEndTime",
            "format": "yyyy-MM-dd",
            "label": "ActualEndTime",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "saqlExpression": "toDate('ArrivalWindowEndTime_Aux_sec_epoch' + 'ElapsedSeconds')",
            "name": "ArrivalWindowEndTime",
            "format": "yyyy-MM-dd",
            "label": "ArrivalWindowEndTime",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "saqlExpression": "toDate('ArrivalWindowStartTime_Aux_sec_epoch' + 'ElapsedSeconds')",
            "name": "ArrivalWindowStartTime",
            "format": "yyyy-MM-dd",
            "label": "ArrivalWindowStartTime",
            "type": "Date",
            "isYearEndFiscalYear": true
          }
        ]
      }
    },
    "Compute_Aux_ServiceAppointmentDemo": {
      "action": "computeExpression",
      "parameters": {
        "source": "Load_Dataset_ServiceAppointment",
        "mergeWithSource": true,
        "computedFields": [
          {
            "precision": 18,
            "name": "ElapsedSeconds",
            "saqlExpression": "86400 * date_diff(\"day\", toDate('LastProcessedDate_sec_epoch'), now())",
            "scale": 0,
            "label": "ElapsedSeconds",
            "type": "Numeric"
          },
          {
            "name": "EarliestStartTime_Aux",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('EarliestStartTime_sec_epoch')",
            "label": "EarliestStartTime_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "CreatedDate_Aux",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('CreatedDate_sec_epoch')",
            "label": "CreatedDate_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "DueDate_Aux",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('DueDate_sec_epoch')",
            "label": "DueDate_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "ActualStartTime_Aux",
            "saqlExpression": "toDate('ActualStartTime_sec_epoch')",
            "format": "yyyy-MM-dd",
            "label": "ActualStartTime_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "ArrivalWindowEndTime_Aux",
            "saqlExpression": "toDate('ArrivalWindowEndTime_sec_epoch')",
            "format": "yyyy-MM-dd",
            "label": "ArrivalWindowEndTime_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "saqlExpression": "toDate('ArrivalWindowStartTime_sec_epoch')",
            "name": "ArrivalWindowStartTime_Aux",
            "format": "yyyy-MM-dd",
            "label": "ArrivalWindowStartTime_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "ActualEndTime_Aux",
            "saqlExpression": "toDate('ActualEndTime_sec_epoch')",
            "format": "yyyy-MM-dd",
            "label": "ActualEndTime_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          }
        ]
      }
    },
    "Register_AssignedResource": {
      "action": "sfdcRegister",
      "parameters": {
        "name": "AssignedResource",
        "alias": "${App.Datasets.AssignedResourceDemo.FullyQualifiedName}",
        "source": "Update_AssignedResource_Dates"
      }
    },
    "Drop_Dates_ServiceAppointmentDemo": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Compute_Aux_ServiceAppointmentDemo",
        "fields": [
          {
            "name": "ArrivalWindowStartTime"
          },
          {
            "name": "EarliestStartTime"
          },
          {
            "name": "ActualEndTime"
          },
          {
            "name": "CreatedDate"
          },
          {
            "name": "DueDate"
          },
          {
            "name": "ActualStartTime"
          },
          {
            "name": "ArrivalWindowEndTime"
          },
          {
            "name": "LastProcessedDate"
          }
        ]
      }
    },
    "Update_ServiceAppointment_w_User": {
      "action": "update",
      "parameters": {
        "right_key": [
          "Name"
        ],
        "left": "Drop_Aux_ServiceAppointmentDemo",
        "left_key": [
          "AssignedResource_User_User_Name"
        ],
        "update_columns": {
          "AssignedResource_User_User_SmallPhotoUrl": "SmallPhotoUrl",
          "AssignedResource_User_Id": "Id"
        },
        "right": "Extract_User"
      }
    },
    "Register_ServiceAppointment": {
      "action": "sfdcRegister",
      "parameters": {
        "name": "ServiceAppointment",
        "alias": "${App.Datasets.ServiceAppointmentDemo.FullyQualifiedName}",
        "source": "Update_ServiceAppointment_w_User"
      }
    },
    "Drop_Aux_ServiceResourceCapacityDemo": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Shift_Dates_ServiceResourceCapacityDemo",
        "fields": [
          {
            "name": "EndDate_Aux"
          },
          {
            "name": "StartDate_Aux"
          },
          {
            "name": "ElapsedSeconds"
          }
        ]
      }
    },
    "Load_Dataset_ServiceResourceCapacityDemo": {
      "action": "edgemart",
      "parameters": {
        "alias": "${App.Datasets.ServiceResourceCapacityDemo.FullyQualifiedName}"
      }
    },
    "Extract_User": {
      "action": "sfdcDigest",
      "parameters": {
        "fields": [
          {
            "name": "Id"
          },
          {
            "name": "Name"
          },
          {
            "name": "SmallPhotoUrl"
          }
        ],
        "object": "User"
      }
    },
    "Load_Dataset_ServiceAppointment": {
      "action": "edgemart",
      "parameters": {
        "alias": "${App.Datasets.ServiceAppointmentDemo.FullyQualifiedName}"
      }
    },
    "Drop_Aux_ServiceAppointmentDemo": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Shift_Dates_ServiceAppointmentDemo",
        "fields": [
          {
            "name": "ElapsedSeconds"
          },
          {
            "name": "EarliestStartTime_Aux"
          },
          {
            "name": "CreatedDate_Aux"
          },
          {
            "name": "DueDate_Aux"
          },
          {
            "name": "ActualEndTime_Aux"
          },
          {
            "name": "ActualStartTime_Aux"
          },
          {
            "name": "ArrivalWindowEndTime_Aux"
          },
          {
            "name": "ArrivalWindowStartTime_Aux"
          }
        ]
      }
    },
    "Shift_Dates_ServiceResourceCapacityDemo": {
      "action": "computeExpression",
      "parameters": {
        "source": "Drop_Dates_ServiceResourceCapacityDemo",
        "mergeWithSource": true,
        "computedFields": [
          {
            "name": "EndDate",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('EndDate_Aux_sec_epoch' + 'ElapsedSeconds')",
            "label": "EndDate",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "StartDate",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('StartDate_Aux_sec_epoch' + 'ElapsedSeconds')",
            "label": "StartDate",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "type": "Date",
            "name": "LastProcessedDate",
            "label": "LastProcessed",
            "isYearEndFiscalYear": true,
            "saqlExpression": "now()",
            "format": "yyyy-MM-dd"
          }
        ]
      }
    },
    "Compute_Aux_ServiceResourceCapacityDemo": {
      "action": "computeExpression",
      "parameters": {
        "source": "Load_Dataset_ServiceResourceCapacityDemo",
        "mergeWithSource": true,
        "computedFields": [
          {
            "precision": 18,
            "name": "ElapsedSeconds",
            "saqlExpression": "86400 * date_diff(\"day\", toDate('LastProcessedDate_sec_epoch'), now())",
            "scale": 0,
            "label": "ElapsedSeconds",
            "type": "Numeric"
          },
          {
            "name": "EndDate_Aux",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('EndDate_sec_epoch')",
            "label": "EndDate_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          },
          {
            "name": "StartDate_Aux",
            "format": "yyyy-MM-dd",
            "saqlExpression": "toDate('StartDate_sec_epoch')",
            "label": "StartDate_Aux",
            "type": "Date",
            "isYearEndFiscalYear": true
          }
        ]
      }
    },
    "Drop_Dates_ServiceResourceCapacityDemo": {
      "action": "sliceDataset",
      "parameters": {
        "mode": "drop",
        "source": "Compute_Aux_ServiceResourceCapacityDemo",
        "fields": [
          {
            "name": "EndDate"
          },
          {
            "name": "StartDate"
          },
          {
            "name": "LastProcessedDate"
          }
        ]
      }
    },
    "Load_Dataset_AssignedResource": {
      "action": "edgemart",
      "parameters": {
        "alias": "${App.Datasets.AssignedResourceDemo.FullyQualifiedName}"
      }
    },
    "Update_AssignedResource_Dates": {
      "action": "update",
      "parameters": {
        "right_key": [
          "Id"
        ],
        "left": "Load_Dataset_AssignedResource",
        "left_key": [
          "SA_Id"
        ],
        "update_columns": {
          "SA_EarliestStartTime": "EarliestStartTime",
          "SA_ParentRecordId_CreatedDate": "ParentRecordId_CreatedDate",
          "SA_CreatedDate": "CreatedDate"
        },
        "right": "Update_ServiceAppointment_w_User"
      }
    },
    "Register_ServiceResourceCapacityDemo": {
      "action": "sfdcRegister",
      "parameters": {
        "name": "ServiceResourceCapacity",
        "alias": "${App.Datasets.ServiceResourceCapacityDemo.FullyQualifiedName}",
        "source": "Drop_Aux_ServiceResourceCapacityDemo"
      }
    }
  },
  "DataflowType": "USER",
  "_type": "dataflow",
  "name": "AF_and_Timeshifting_Field_Service",
  "description": "Action Framework and Timeshifting - Field Service",
  "MasterLabel": "- AF and Timeshifting",
  "_url": "/insights/internal_api/v1.0/esObject/workflow//json",
  "_uid": "",
  "nextRun": "",
  "WorkflowStatus": "Inactive"
}