{
  "name" : "Sales_Manager_Store_Performance59_tp",
  "label" : "Sales Manager - Store Performance",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "dateVersion" : 1,
  "mobileDisabled" : true,
  "xmd" : {
    "measures" : [
      {
        "conditionalFormatting" : { },
        "field" : "Stores_scatter_plot__2.Compliance_Percentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Stores_scatter_plot__2.total_sales",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Compliance_Percentage",
            "type" : "static",
            "parameters" : {
              "formatValue" : "rgb(76, 148, 230)"
            }
          }
        },
        "field" : "Clone_of_Master_bar_1.Compliance_Percentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Clone_of_decline_que_1.Decline_percent",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Clone_of_decline_que_1.Decline",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : {
          "color" : {
            "referenceField" : "Compliance_Percentage_1",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "rgb(13, 52, 182)",
                  "bin" : "*"
                },
                {
                  "formatValue" : "rgb(13, 52, 182)",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Master_Table_1.Compliance_Percentage_1",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Clone_of_multi_query_2.Decline_percent",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"#,###.##%\",100]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "TotalPrice_Order_Act_1.Sales_Velocity",
        "format" : {
          "delimiters" : { },
          "customFormat" : "[\"$#,###\",1]"
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Stores_scatter_plot__1.Compliance_Percentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Stores_scatter_plot__1.total_sales",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Stores_scatter_plot__3.Compliance_Percentage",
        "format" : {
          "delimiters" : { }
        }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Stores_scatter_plot__3.total_sales",
        "format" : {
          "delimiters" : { }
        }
      }
    ],
    "derivedDimensions" : [ ],
    "organizations" : [ ],
    "showDetailsDefaultFields" : [ ],
    "dates" : [ ],
    "derivedMeasures" : [ ],
    "dimensions" : [
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : { },
        "salesforceActions" : [ ],
        "field" : "Stores_scatter_plot__2.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Compliance_Percentage",
            "type" : "static",
            "parameters" : {
              "formatValue" : "rgb(76, 148, 230)"
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Clone_of_Master_bar_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Decline_percent",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#CA3C23",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#4C94E6",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Clone_of_decline_que_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : { },
        "salesforceActions" : [ ],
        "field" : "Stores_scatter_plot__1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : { },
        "salesforceActions" : [ ],
        "field" : "Stores_scatter_plot__3.ALL",
        "members" : [ ],
        "customActions" : [ ]
      }
    ]
  },
  "state" : {
    "dataSourceLinks" : [
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.RetailStoreGroupName_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.RetailStoreGroupName_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "SurveyResponse.SurveySubject.StoreGroup"
          }
        ],
        "label" : "Store Group",
        "name" : "Link_2577"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Location.Address.City"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "AssessmentTask.Visit.RetailStore.Location.Address.City"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Location.Address.City"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "SurveyResponse.SurveySubject.City"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Location.Address.City"
          }
        ],
        "label" : "City",
        "name" : "Link_1400"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Location.Address.State"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Location.Address.State"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "AssessmentTask.Visit.RetailStore.Location.Address.State"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "SurveyResponse.SurveySubject.State"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Location.Address.State"
          }
        ],
        "label" : "State",
        "name" : "Link_1362"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "AssessmentTask.Visit.RetailStore.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "SurveyResponse.SurveySubject.StoreName"
          }
        ],
        "label" : "Store Name",
        "name" : "Link_305"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Account.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "AssessmentTask.Visit.RetailStore.Account.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Account_Name_Computed"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Account.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "SurveyResponse.SurveySubject.Account"
          }
        ],
        "label" : "Account",
        "name" : "Link_1294"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Order.ActivatedDate"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Visit69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Planned Start Time"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "ActualVisitStartTime"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "SurveyResponse.CompletionDateTime"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Created Date"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailStore53_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Created Date"
          }
        ],
        "label" : "Date",
        "name" : "Link_8847"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Product.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Product.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Product64_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Name"
          }
        ],
        "label" : "Product",
        "name" : "Link_386"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Product.ProductCategory.ProductCategory.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "ProductCategory.Name"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_ProductCategory64_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Name"
          }
        ],
        "label" : "ProductCategory",
        "name" : "Link_413"
      },
      {
        "fields" : [
          {
            "dataSourceName" : "${App.Datasets.CG_Visit69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Account.Parent_Account_Names"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_RetailVisitKpi70_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "AssessmentTask.Visit.RetailStore.Account.Parent_Account_Names"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_SurveyQuestionResponse69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "SurveyResponse.SurveySubject.Visit.RetailStore.Account.Parent_Account_Names"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_Case69_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "RetailStore.Account.Parent_Account_Names"
          },
          {
            "dataSourceName" : "${App.Datasets.CG_OrderItem59_tp.Name}",
            "dataSourceNamespace" : "${Org.Namespace}",
            "dataSourceType" : "dataset",
            "fieldName" : "Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Account.Parent_Account_Names"
          }
        ],
        "label" : "Parent Account Name",
        "name" : "Link_4390"
      }
    ],
    "filters" : [
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_Visit69_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "RetailStore.Account.Parent_Account_Names"
        ],
        "label" : "Parent Account Name",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_Visit69_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "RetailStore.Account.Name"
        ],
        "label" : "Account",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_Visit69_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "RetailStore.RetailStoreGroupName_Custom"
        ],
        "label" : "Store Group",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_Visit69_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "RetailStore.Name"
        ],
        "label" : "Store",
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_Visit69_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "RetailStore.Location.Address.State"
        ],
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_Visit69_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "RetailStore.Location.Address.City"
        ],
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_ProductCategory64_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "Name"
        ],
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.CG_Product64_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "Name"
        ],
        "locked" : false,
        "operator" : "in"
      }
    ],
    "gridLayouts" : [
      {
        "maxWidth" : 1500,
        "name" : "Default",
        "numColumns" : 50,
        "pages" : [
          {
            "label" : "StorePerformance",
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 3,
                "name" : "text_3",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 38,
                "column" : 1,
                "name" : "filterpanel_3",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_6",
                "row" : 12,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#335779",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "number_2",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 16,
                "name" : "number_1",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 7,
                "column" : 35,
                "name" : "number_7",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 22,
                "name" : "number_4",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 42,
                "name" : "number_9",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "text_1",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 11,
                "name" : "text_2",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 16,
                "name" : "text_4",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 35,
                "name" : "text_5",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 22,
                "name" : "text_7",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 42,
                "name" : "text_8",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_7",
                "row" : 19,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "text_9",
                "row" : 20,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_1",
                "row" : 26,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "rgb(51, 87, 121)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 7,
                "name" : "listselector_1",
                "row" : 20,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 1,
                "name" : "text_13",
                "row" : 27,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 23,
                "column" : 1,
                "name" : "chart_1",
                "row" : 30,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_26",
                "row" : 58,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "chart_2",
                "row" : 61,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 45,
                "column" : 1,
                "name" : "text_12",
                "row" : 93,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_11",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_1",
                "row" : 96,
                "rowspan" : 33,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 5,
                "name" : "text_10",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 5,
                "name" : "number_5",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 11,
                "name" : "number_8",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 8,
                "column" : 27,
                "name" : "text_23",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 27,
                "name" : "number_11",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 43,
                "name" : "listselector_5",
                "row" : 20,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(14, 47, 92)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 15,
                "name" : "listselector_4",
                "row" : 27,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 25,
                "name" : "chart_6",
                "row" : 30,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 33,
                "name" : "text_29",
                "row" : 27,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "dateselector_3",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 25,
                "column" : 7,
                "name" : "text_27",
                "row" : 23,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "text_32",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 19,
                "name" : "text_25",
                "row" : 27,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "text_33",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 8,
                "column" : 34,
                "name" : "link_4",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 42,
                "name" : "link_5",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 3,
                "column" : 40,
                "name" : "text_35",
                "row" : 20,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 25,
                "name" : "text_30",
                "row" : 27,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(34, 71, 116)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_12",
                "row" : 93,
                "rowspan" : 37,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Correlation - Compliance Metrics",
            "name" : "a827bee9-c006-4b3d-8db3-d61a7d055bbc",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 3,
                "name" : "text_3",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 38,
                "column" : 1,
                "name" : "filterpanel_3",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_11",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "dateselector_3",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "text_32",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "text_33",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 8,
                "column" : 42,
                "name" : "link_1",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 34,
                "name" : "link_3",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_4",
                "row" : 16,
                "rowspan" : 47,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0.06)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 9,
                "column" : 5,
                "name" : "listselector_2",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 39,
                "name" : "listselector_6",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 36,
                "name" : "text_31",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 2,
                "name" : "text_34",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_5",
                "row" : 23,
                "rowspan" : 40,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(34, 71, 116, 0)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 39,
                "name" : "rangeselector_1",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 17,
                "name" : "rangeselector_3",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_5",
                "row" : 72,
                "rowspan" : 46,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0.06)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_36",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 8,
                "name" : "text_37",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 29,
                "name" : "text_38",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 2,
                "name" : "text_39",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 39,
                "name" : "listselector_8",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 47,
                "column" : 1,
                "name" : "text_12",
                "row" : 119,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_1",
                "row" : 122,
                "rowspan" : 33,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 36,
                "name" : "text_40",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_3",
                "row" : 78,
                "rowspan" : 40,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(34, 71, 116, 0)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 14,
                "name" : "link_8",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(125, 152, 179, 0.7)",
                  "borderEdges" : [
                    "bottom",
                    "top",
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 5,
                "name" : "link_9",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0.1)",
                  "borderColor" : "rgba(125, 152, 179, 0.7)",
                  "borderEdges" : [
                    "left",
                    "top",
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_10",
                "row" : 67,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_12",
                "row" : 119,
                "rowspan" : 37,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 1,
                "name" : "text_28",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 5,
                "name" : "text_42",
                "row" : 20,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 39,
                "name" : "text_43",
                "row" : 20,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "text_45",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          },
          {
            "label" : "Correlation - Order Metrics",
            "name" : "ed2bab90-cef3-4c60-919b-cd14d9e5c494",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C6D3E1",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_1",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 3,
                "name" : "text_3",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 38,
                "column" : 1,
                "name" : "filterpanel_3",
                "row" : 7,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_11",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "dateselector_3",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 39,
                "name" : "text_32",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "dateselector_1",
                "row" : 7,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 5,
                "column" : 44,
                "name" : "text_33",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 8,
                "column" : 42,
                "name" : "link_1",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(0, 112, 210)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 34,
                "name" : "link_3",
                "row" : 3,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_4",
                "row" : 16,
                "rowspan" : 47,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0.06)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 9,
                "column" : 5,
                "name" : "listselector_2",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 39,
                "name" : "listselector_6",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 36,
                "name" : "text_31",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 2,
                "name" : "text_34",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_5",
                "row" : 23,
                "rowspan" : 40,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(34, 71, 116, 0)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 39,
                "name" : "rangeselector_1",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 17,
                "name" : "rangeselector_3",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_5",
                "row" : 72,
                "rowspan" : 46,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0.06)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_36",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 8,
                "name" : "text_37",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 29,
                "name" : "text_38",
                "row" : 68,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 14,
                "name" : "link_6",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0.1)",
                  "borderColor" : "rgba(125, 152, 179, 0.7)",
                  "borderEdges" : [
                    "right",
                    "top",
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 5,
                "name" : "link_7",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(125, 152, 179, 0.7)",
                  "borderEdges" : [
                    "top",
                    "bottom",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 2,
                "name" : "text_39",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "chart_4",
                "row" : 78,
                "rowspan" : 40,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(34, 71, 116, 0)",
                  "borderColor" : "#335779",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 39,
                "name" : "listselector_8",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "text_12",
                "row" : 119,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_1",
                "row" : 122,
                "rowspan" : 33,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 36,
                "name" : "text_40",
                "row" : 73,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_12",
                "row" : 119,
                "rowspan" : 37,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_10",
                "row" : 67,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 20,
                "column" : 1,
                "name" : "text_45",
                "row" : 64,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 1,
                "name" : "text_28",
                "row" : 12,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 5,
                "name" : "text_42",
                "row" : 20,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 39,
                "name" : "text_43",
                "row" : 20,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "rgb(14, 47, 92)",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "#C5D3E0"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "Clone_of_Clone_of_Ti_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Time_series_master",
        "numbers" : [ ],
        "query" : "retail_store = load \"${App.Datasets.CG_RetailStore53_tp.FullyQualifiedName}\";\r\nretail_store = group retail_store by ('CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nretail_store = foreach retail_store generate 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\n-- Incomplete High Priority Visits\r\nvisit1 = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\r\nvisit1 = filter visit1 by 'Status' in [\"Abandoned\", \"Planned\"] and  'VisitPriority' == \"High\" and  date('PlannedVisitStartTime_Year', 'PlannedVisitStartTime_Month', 'PlannedVisitStartTime_Day') in [..\"1 day ago\"];\r\nvisit1 = group visit1 by ('PlannedVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'PlannedVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nvisit1 = foreach visit1 generate 'PlannedVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'PlannedVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', count(visit1) as 'High_Priority_Incomplete_Visits';\r\nvisit1 = fill visit1 by (dateCols=('PlannedVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','PlannedVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\nvisit1 = timeseries visit1 generate 'High_Priority_Incomplete_Visits' as 'Incomplete_Visits' with (length=4, predictionInterval=80, dateCols=('PlannedVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'PlannedVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\nvisit1 = foreach visit1 generate 'PlannedVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'PlannedVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'PlannedVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~PlannedVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('High_Priority_Incomplete_Visits', 'Incomplete_Visits') as 'Incomplete_Visits', 'Incomplete_Visits_low_80', 'Incomplete_Visits_high_80';\r\n-- Sales Details\r\nsale1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\nsale1 = group sale1 by ('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nsale1 = foreach sale1 generate 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', sum('TotalPrice') as 'sum_TotalPrice';\r\nsale1 = fill sale1 by (dateCols=('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\nsale1 = timeseries sale1 generate 'sum_TotalPrice' as 'Sales' with (length=4, predictionInterval=80, dateCols=('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\nsale1 = foreach sale1 generate 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('sum_TotalPrice', 'Sales') as 'Sales', 'Sales_low_80', 'Sales_high_80';\r\n--Quantity\r\nqty1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\nqty1 = group qty1 by ('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nqty1 = foreach qty1 generate 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', sum('TotalPrice') as 'sum_Quantity';\r\nqty1 = fill qty1 by (dateCols=('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\nqty1 = timeseries qty1 generate 'sum_Quantity' as 'Quantity' with (length=4, predictionInterval=80, dateCols=('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\nqty1 = foreach qty1 generate 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('sum_Quantity', 'Quantity') as 'Quantity', 'Quantity_low_80', 'Quantity_high_80';\r\n--Sales Velocity\r\nsv1  = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\nsv1 = group sv1 by ('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nsv1 = foreach sv1 generate 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', sum('TotalPrice') as 'Sales', 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"-\" + 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'YearWeek';\r\nsv1 = group sv1 by ('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nsv1 = foreach sv1 generate 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', (sum(Sales)/unique('YearWeek')) as 'sum_SalesVelocity';\r\nsv1 = fill sv1 by (dateCols=('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\nsv1 = timeseries sv1 generate 'sum_SalesVelocity' as 'SalesVelocity' with (length=4, predictionInterval=80, dateCols=('Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\nsv1 = foreach sv1 generate 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('sum_SalesVelocity', 'SalesVelocity') as 'SalesVelocity', 'SalesVelocity_low_80', 'SalesVelocity_high_80';\r\n--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', count(oos) as 'OutOfStock_ActualCount1';\r\noos_result = fill oos_result by (dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\noos_result = timeseries oos_result generate 'OutOfStock_ActualCount1' as 'OutOfStock_ActualCount' with (length=4, predictionInterval=80, dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\noos_result = foreach oos_result generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('OutOfStock_ActualCount1', 'OutOfStock_ActualCount') as 'OutOfStock_ActualCount', 'OutOfStock_ActualCount_low_80', 'OutOfStock_ActualCount_high_80';\r\n-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp = group comp by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask.Visit.RetailStore.Name');\r\ncomp = foreach comp generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Compliance_Percentage') as 'Avg_Compliance_Percentage1';\r\ncomp = group comp by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\ncomp = foreach comp generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_Compliance_Percentage1') as 'Avg_Compliance_Percentage1';\r\ncomp = fill comp by (dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\ncomp = timeseries comp generate 'Avg_Compliance_Percentage1' as 'Avg_Compliance_Percentage' with (length=4, predictionInterval=80, dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\ncomp = foreach comp generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('Avg_Compliance_Percentage1', 'Avg_Compliance_Percentage') as 'Avg_Compliance_Percentage', 'Avg_Compliance_Percentage_low_80', 'Avg_Compliance_Percentage_high_80';\r\n\r\n-- FacingsCompliance% Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask.Visit.RetailStore.Name');\r\nfcs = foreach fcs generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Compliance_Percentage') as 'Avg_FacingCompliance_Percentage';\r\nfcs = group fcs by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nfcs = foreach fcs generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_FacingCompliance_Percentage') as 'Avg_FacingCompliance_Percentage';\r\nfcs = fill fcs by (dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\nfcs = timeseries fcs generate 'Avg_FacingCompliance_Percentage' as 'Avg_FacingsCompliance_Percentage' with (length=4, predictionInterval=80, dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\nfcs = foreach fcs generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('Avg_FacingCompliance_Percentage', 'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', 'Avg_FacingsCompliance_Percentage_low_80', 'Avg_FacingsCompliance_Percentage_high_80';\r\n\r\n-- OOSCompliance% Calculation\r\noos_comp = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\noos_comp = filter oos_comp by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_comp = group oos_comp by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask.Visit.RetailStore.Name');\r\noos_comp = foreach oos_comp generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Compliance_Percentage') as 'Avg_OutOfStockCompliance';\r\noos_comp = group oos_comp by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\noos_comp = foreach oos_comp generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_OutOfStockCompliance') as 'Avg_OutOfStockCompliance';\r\noos_comp = fill oos_comp by (dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\noos_comp = timeseries oos_comp generate 'Avg_OutOfStockCompliance' as 'Avg_OutOfStock_Compliance' with (length=4, predictionInterval=80, dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\noos_comp = foreach oos_comp generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('Avg_OutOfStockCompliance', 'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', 'Avg_OutOfStock_Compliance_low_80', 'Avg_OutOfStock_Compliance_high_80';\r\n\r\n-- PromotionCompliance% Calculation\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask.Visit.RetailStore.Name');\r\npromo = foreach promo generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Compliance_Percentage') as 'Avg_PromotionCompliance_Percentage';\r\npromo = group promo by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\npromo = foreach promo generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_PromotionCompliance_Percentage') as 'Avg_PromotionCompliance_Percentage';\r\npromo = fill promo by (dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\npromo = timeseries promo generate 'Avg_PromotionCompliance_Percentage' as 'Avg_PromoCompliance_Percentage' with (length=4, predictionInterval=80, dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\npromo = foreach promo generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('Avg_PromotionCompliance_Percentage', 'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', 'Avg_PromoCompliance_Percentage_low_80', 'Avg_PromoCompliance_Percentage_high_80';\r\n-- SOSCompliance% Calculation\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask.Visit.RetailStore.Name');\r\nsos = foreach sos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Compliance_Percentage') as 'Avg_SOSCompliance_Percentage';\r\nsos = group sos by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\nsos = foreach sos generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_SOSCompliance_Percentage') as 'Avg_SOSCompliance_Percentage';\r\nsos = fill sos by (dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\nsos = timeseries sos generate 'Avg_SOSCompliance_Percentage' as 'Avg_SoSCompliance_Percentage' with (length=4, predictionInterval=80, dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\nsos = foreach sos generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('Avg_SOSCompliance_Percentage', 'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', 'Avg_SoSCompliance_Percentage_low_80', 'Avg_SoSCompliance_Percentage_high_80';\r\n-- InventoryCompliance% Calculation\r\ninventory = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\ninventory = filter inventory by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninventory = group inventory by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','AssessmentTask.Visit.RetailStore.Name');\r\ninventory = foreach inventory generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninventory = group inventory by ('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\ninventory = foreach inventory generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', avg('Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage1';\r\ninventory = fill inventory by (dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\ninventory = timeseries inventory generate 'Avg_InventoryCompliance_Percentage1' as 'Avg_InventoryCompliance_Percentage' with (length=4, predictionInterval=80, dateCols=('ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\ninventory = foreach inventory generate 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('Avg_InventoryCompliance_Percentage1', 'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', 'Avg_InventoryCompliance_Percentage_low_80', 'Avg_InventoryCompliance_Percentage_high_80';\r\n--Cases\r\ncase1 = load \"${App.Datasets.CG_Case69_tp.FullyQualifiedName}\";\r\ncase1 = group case1 by ('CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}');\r\ncase1 = foreach case1 generate 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', count() as 'total_cases';\r\ncase1 = fill case1 by (dateCols=('CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}','CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"));\r\ncase1 = timeseries case1 generate 'total_cases' as 'Cases_count' with (length=4, predictionInterval=80, dateCols=('CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \"Y-W\"), seasonality=12);\r\ncase1 = foreach case1 generate 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' + \"~~~\" + 'CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' as 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', coalesce('total_cases', 'Cases_count') as 'Cases_count', 'Cases_count_low_80', 'Cases_count_high_80';\r\n\r\n--final multidataset table\r\nfinal_table = cogroup retail_store by 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, visit1 by 'PlannedVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~PlannedVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, sale1 by 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, qty1 by 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, sv1 by 'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, oos_result by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, comp by  'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, fcs by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, oos_comp by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, promo by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, sos by  'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, inventory by 'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' full, case1 by 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}';\r\n\r\nfinal_table = foreach final_table generate coalesce(retail_store.'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', visit1.'PlannedVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~PlannedVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',sale1.'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',qty1.'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',sv1.'Order.ActivatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~Order.ActivatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',oos_result.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',comp.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',fcs.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', oos_comp.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', promo.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', sos.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}',case1.'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', inventory.'ActualVisitStartTime_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~ActualVisitStartTime_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}') as 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', \r\n\r\nsum(sale1.'Sales') as 'Sales', sum(sale1.'Sales_low_80') as 'Sales_low_80', sum(sale1.'Sales_high_80') as 'Sales_high_80',\r\nsum(qty1.'Quantity') as 'Quantity', sum(qty1.'Quantity_low_80') as 'Quantity_low_80', sum(qty1.'Quantity_high_80') as 'Quantity_high_80',\r\nsum(sv1.'SalesVelocity') as 'SalesVelocity', sum(sv1.'SalesVelocity_low_80') as 'SalesVelocity_low_80', sum(sv1.'SalesVelocity_high_80') as 'SalesVelocity_high_80',\r\nsum(oos_result.'OutOfStock_ActualCount') as 'OutOfStock_ActualCount', sum(oos_result.'OutOfStock_ActualCount_low_80') as 'OutOfStock_ActualCount_low_80', sum(oos_result.'OutOfStock_ActualCount_high_80') as 'OutOfStock_ActualCount_high_80',\r\navg(comp.'Avg_Compliance_Percentage') as 'Avg_Compliance_Percentage', avg(comp.'Avg_Compliance_Percentage_low_80') as 'Avg_Compliance_Percentage_low_80', avg(comp.'Avg_Compliance_Percentage_high_80') as 'Avg_Compliance_Percentage_high_80',\r\navg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(fcs.'Avg_FacingsCompliance_Percentage_low_80') as 'Avg_FacingsCompliance_Percentage_low_80', avg(fcs.'Avg_FacingsCompliance_Percentage_high_80') as 'Avg_FacingsCompliance_Percentage_high_80',\r\navg(oos_comp.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(oos_comp.'Avg_OutOfStock_Compliance_low_80') as 'Avg_OutOfStock_Compliance_low_80', avg(oos_comp.'Avg_OutOfStock_Compliance_high_80') as 'Avg_OutOfStock_Compliance_high_80', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage_low_80') as 'Avg_PromoCompliance_Percentage_low_80', avg(promo.'Avg_PromoCompliance_Percentage_high_80') as 'Avg_PromoCompliance_Percentage_high_80',\r\navg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(sos.'Avg_SoSCompliance_Percentage_low_80') as 'Avg_SoSCompliance_Percentage_low_80', avg(sos.'Avg_SoSCompliance_Percentage_high_80') as 'Avg_SoSCompliance_Percentage_high_80',\r\nsum(visit1.'Incomplete_Visits')as 'Incomplete_Visits', sum(visit1.'Incomplete_Visits_low_80') as 'Incomplete_Visits_low_80', sum(visit1.'Incomplete_Visits_high_80') as 'Incomplete_Visits_high_80', \r\nsum(case1.'Cases_count')as 'Cases_count', sum(case1.'Cases_count_low_80') as 'Cases_count_low_80', sum(case1.'Cases_count_high_80') as 'Cases_count_high_80',\r\navg(inventory.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage', avg(inventory.'Avg_InventoryCompliance_Percentage_low_80') as 'Avg_InventoryCompliance_Percentage_low_80', avg(inventory.'Avg_InventoryCompliance_Percentage_high_80') as 'Avg_InventoryCompliance_Percentage_high_80';\r\n\r\nfinal_table = filter final_table by '{{cell(static_1.selection,0,\"Alias_name_trend\").asObject()}}' is not null;\r\nfinal_table = foreach final_table generate 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}', {{cell(static_1.selection,0,\"Field_value_trend\").asObject()}} as '{{cell(static_1.selection,0,\"Alias_name_trend\").asObject()}}', '{{cell(static_1.selection,0,\"Alias_name_trend\").asObject()}}_low_80', '{{cell(static_1.selection,0,\"Alias_name_trend\").asObject()}}_high_80';\r\nfinal_table = order final_table by 'CreatedDate_Year{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}~~~CreatedDate_Week{{cell(date_parser_1.result, 0, \"Is_Fiscal\").asString()}}' asc;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "time",
            "missingValue" : "connect",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "timeAxis" : {
              "showTitle" : true,
              "showAxis" : true,
              "title" : ""
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "Comparative_Period_1" : {
        "broadcastFacet" : false,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_Visit69_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Planned Start Time"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "start" : [
          [
            [
              "year",
              -1
            ],
            [
              "year",
              -1
            ]
          ]
        ],
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "date_parser_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "date_parser",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_RetailStore53_tp.FullyQualifiedName}\";\r\nq = foreach q generate \"1970\" as 'Date_Year', \"01\" as 'Date_Month', \"01\" as 'Date_Day';\r\nq = group q by ('Date_Year', 'Date_Month', 'Date_Day');\r\nq = foreach q generate 'Date_Year', 'Date_Month', 'Date_Day', count() as 'sum';\r\n-- use fill() to generate null rows for any missing dates. Then you can use timeseries().\r\nq = fill q by (dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = timeseries q generate 'sum' as 'cnt' with (length=60000,  dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = foreach q generate 'Date_Year' + \"-\" + 'Date_Month' + \"-\" + 'Date_Day'+ \" 00:00:00\" as 'Date','Date_Year', 'Date_Month', 'Date_Day';\r\nq_A = filter q by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Date_Year', 'Date_Month', 'Date_Day')\")}};\r\nq_A = foreach q_A generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_A = group q_A by all;\r\nq_A = foreach q_A generate min('Date') as 'min_Date', max('Date') as 'max_Date', min('Date_sec_epoch') as 'min_Date_sec_epoch', max('Date_sec_epoch') as 'max_Date_sec_epoch';\r\nq_B = filter q by date('Date_Year', 'Date_Month', 'Date_Day') in [\"current fiscal_year\"..\"current fiscal_year\"];\r\nq_B = foreach q_B generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_B = group q_B by all;\r\nq_B = foreach q_B generate min('Date') as 'min_current_fiscalYr_Date', max('Date') as 'max_current_fiscalYr_Date', min('Date_sec_epoch') as 'min_current_fiscalYr_Date_sec_epoch', max('Date_sec_epoch') as 'max_current_fiscalYr_Date_sec_epoch';\r\nq_C = filter q by date('Date_Year', 'Date_Month', 'Date_Day') in [\"current year\"..\"current year\"];\r\nq_C = foreach q_C generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\nq_C = group q_C by all;\r\nq_C = foreach q_C generate min('Date') as 'min_current_CalendarYr_Date', max('Date') as 'max_current_CalendarYr_Date', min('Date_sec_epoch') as 'min_current_CalendarYr_Date_sec_epoch', max('Date_sec_epoch') as 'max_current_CalendarYr_Date_sec_epoch';\r\nq = cogroup q_A by all full, q_B by all full, q_C by all;\r\nq = foreach q generate first(q_A.'min_Date') as 'min_Date', toDate(first(q_A.'max_Date_sec_epoch')+86399) as 'max_Date', first(q_A.'min_Date_sec_epoch') as 'min_Date_sec_epoch', first(q_A.'max_Date_sec_epoch')+86399 as 'max_Date_sec_epoch', first(q_B.'min_current_fiscalYr_Date') as 'min_current_fiscalYr_Date', toDate(first(q_B.'max_current_fiscalYr_Date_sec_epoch')+86399) as 'max_current_fiscalYr_Date', first(q_C.'min_current_CalendarYr_Date') as 'min_current_CalendarYr_Date', toDate(first(q_C.'max_current_CalendarYr_Date_sec_epoch')+86399) as 'max_current_CalendarYr_Date', (case when \"{{coalesce(cell(Current_Period_1.selection,0,\"min\"),\"All\").asObject()}}\" matches \"fiscal\" and first(q_C.'min_current_CalendarYr_Date') != first(q_B.'min_current_fiscalYr_Date') then \"_Fiscal\" else \"\" end) as 'Is_Fiscal';\r\nq = foreach q generate 'min_Date', 'max_Date', 'min_Date_sec_epoch', 'max_Date_sec_epoch', 'min_current_fiscalYr_Date', 'min_current_CalendarYr_Date', \"[\"+replace(toString('min_Date',\"yyyy-MM-dd\"),\"-\",\",\")+\"]\" as 'Date_Min', \"[\"+replace(toString('max_Date',\"yyyy-MM-dd\"),\"-\",\",\")+\"]\" as 'Date_Max', 'Is_Fiscal';",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "none",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Total_Cases_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_Case69_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Total Cases",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "filters" : [
              [
                "IsClosed",
                [
                  "false"
                ],
                "in"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "count"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Stores_scatter_plot__2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Stores_scatter_plot_2",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('AssessmentTask.Visit.RetailStore.Name');\r\ncomp_result = foreach comp_result generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name','OrderId','Order.ActivatedDate_Year','Order.ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', 'OrderId', 'Order.ActivatedDate_Year'+\"-\"+'Order.ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n-- Share of Shelf\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask.Visit.RetailStore.Name');\r\nsos = foreach sos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStockCompliance\r\noos = filter retail by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('AssessmentTask.Visit.RetailStore.Name');\r\noos_result = foreach oos_result generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\n--FacingsCompliance% Calculation\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('AssessmentTask.Visit.RetailStore.Name');\r\nfcs = foreach fcs generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask.Visit.RetailStore.Name');\r\npromo = foreach promo generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('AssessmentTask.Visit.RetailStore.Name');\r\ninv = foreach inv generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--Total_Number_of_Visits_and_Visit_Frequency\r\nq = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\r\nq = filter q by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [..\"current day\"];\r\nq_A = filter q by 'Status' in [\"Completed\", \"Abandoned\"];\r\nq_A = group q_A by ('RetailStore.Id', 'RetailStore.Name');\r\nq_A = foreach q_A generate 'RetailStore.Name', count('q_A') as 'Number of Visits', unique('ActualVisitStartTime_YearMonthDay') as 'number_of_visit_dates';\r\nq_A = foreach q_A generate 'RetailStore.Name', 'Number of Visits', ('Number of Visits'/'number_of_visit_dates') as 'visit_frequency';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name') full, q_A by ('RetailStore.Name') full, sos by ('Store_Name') full, oos_result by ('Store_Name') full, comp_result by ('Store_Name') full,fcs by ('Store_Name') full, promo by ('Store_Name') full, inv by ('Store_Name');\r\nfinal_table = foreach final_table generate coalesce(order1.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', q_A.'RetailStore.Name', comp_result.'Store_Name', sos.'Store_Name',oos_result.'Store_Name', fcs.'Store_Name', promo.'Store_Name', inv.'Store_Name') as 'AssessmentTask.Visit.RetailStore.Name', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', sum(q_A.'Number of Visits') as 'Number of Visits', sum(q_A.'visit_frequency') as 'visit_frequency', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage',\r\n\r\n(case when {{cell(range_orderitem_metr_1.selection, 0, \"min\").asString()}} is null then {{cell(range_orderitem_metr_1.result, 0, \"min\").asObject()}} else {{cell(range_orderitem_metr_1.selection, 0, \"min\").asString()}} end) as 'min_order',\r\n(case when {{cell(range_orderitem_metr_1.selection, 0, \"max\").asString()}} is null then {{cell(range_orderitem_metr_1.result, 0, \"max\").asObject()}} else {{cell(range_orderitem_metr_1.selection, 0, \"max\").asString()}} end) as 'max_order',\r\n(case when {{cell(range_compliance_metrics.selection, 0, \"min\").asString()}} is null then {{cell(range_compliance_metrics.result, 0, \"min\").asObject()}} else {{cell(range_compliance_metrics.selection, 0, \"min\").asString()}} end) as 'min_compliance',\r\n(case when {{cell(range_compliance_metrics.selection, 0, \"max\").asString()}} is null then {{cell(range_compliance_metrics.result, 0, \"max\").asObject()}} else {{cell(range_compliance_metrics.selection, 0, \"max\").asString()}} end) as 'max_compliance';\r\n\r\nfinal_table = filter final_table by \r\nround(coalesce('{{cell(picklist_order_metri_1.selection,0,\"Api_name_y\").asObject()}}',0),2) >= 'min_order' and \r\nround(coalesce('{{cell(picklist_order_metri_1.selection,0,\"Api_name_y\").asObject()}}',0),2) <= 'max_order' and \r\nround(coalesce('{{cell(picklist_compliance_metrics.selection, 0, \"Api_name_x\").asObject()}}',0),2) >= 'min_compliance'  and \r\nround(coalesce('{{cell(picklist_compliance_metrics.selection, 0, \"Api_name_x\").asObject()}}',0),2) <= 'max_compliance';\r\n\r\nfinal_table = foreach final_table generate 'AssessmentTask.Visit.RetailStore.Name', coalesce('{{cell(picklist_visit_metrics.selection, 0, \"Api_name_visits\").asObject()}}',0) as '{{cell(picklist_visit_metrics.selection, 0, \"Api_name_visits\").asObject()}}', coalesce('{{cell(picklist_order_metri_1.selection,0,\"Api_name_y\").asObject()}}',0) as '{{cell(picklist_order_metri_1.selection,0,\"Api_name_y\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "range_orderitem_metr_1",
            "range_compliance_metrics"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "AssessmentTask_Actio_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "AssessmentTask_Actio_1",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\nq = filter q by  'Include_In_Compliance' == \"True\" ;\nq = group q by 'AssessmentTask.Visit.RetailStore.Name';\nresult = foreach q generate avg(q.'Compliance_Percentage') as 'Compliance_Percentage';\nresult = group result by all;\nresult = foreach result generate avg('Compliance_Percentage') as 'Compliance_Percentage';\nresult = limit result 1;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Stores_scatter_plot__1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Stores_scatter_plot_1",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('AssessmentTask.Visit.RetailStore.Name');\r\ncomp_result = foreach comp_result generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name','OrderId','Order.ActivatedDate_Year','Order.ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', 'OrderId', 'Order.ActivatedDate_Year'+\"-\"+'Order.ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n-- Share of Shelf\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask.Visit.RetailStore.Name');\r\nsos = foreach sos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStockCompliance\r\noos = filter retail by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('AssessmentTask.Visit.RetailStore.Name');\r\noos_result = foreach oos_result generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\n--FacingsCompliance% Calculation\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('AssessmentTask.Visit.RetailStore.Name');\r\nfcs = foreach fcs generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask.Visit.RetailStore.Name');\r\npromo = foreach promo generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('AssessmentTask.Visit.RetailStore.Name');\r\ninv = foreach inv generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Store_Name') full, sos by ('Store_Name') full, oos_result by ('Store_Name') full, comp_result by ('Store_Name') full,fcs by ('Store_Name') full, promo by ('Store_Name') full, inv by ('Store_Name');\r\nfinal_table = foreach final_table generate coalesce(order1.'Store_Name', comp_result.'Store_Name', sos.'Store_Name',oos_result.'Store_Name', fcs.'Store_Name', promo.'Store_Name', inv.'Store_Name') as 'AssessmentTask.Visit.RetailStore.Name', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table = foreach final_table generate 'AssessmentTask.Visit.RetailStore.Name', coalesce('{{cell(picklist_compliance_metrics.selection,0,\"Api_name_x\").asObject()}}',0) as '{{cell(picklist_compliance_metrics.selection,0,\"Api_name_x\").asObject()}}', coalesce('{{cell(picklist_order_metri_1.selection,0,\"Api_name_y\").asObject()}}',0) as '{{cell(picklist_order_metri_1.selection,0,\"Api_name_y\").asObject()}}';\r\n--final_table = order final_table by 'AssessmentTask.Visit.RetailStore.Name' desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "range_orderitem_metr_1",
            "range_compliance_metrics"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Stores_scatter_plot__3" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Stores_scatter_plot_3",
        "numbers" : [ ],
        "query" : "-- Compliance% Calculation\r\nretail = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('AssessmentTask.Visit.RetailStore.Name');\r\ncomp_result = foreach comp_result generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_CompliancePercentage';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name','OrderId','Order.ActivatedDate_Year','Order.ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', 'OrderId', 'Order.ActivatedDate_Year'+\"-\"+'Order.ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'Sales', sum('Quantity') as 'Quantity';\r\n-- Share of Shelf\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask.Visit.RetailStore.Name');\r\nsos = foreach sos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--OutOfStockCompliance\r\noos = filter retail by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('AssessmentTask.Visit.RetailStore.Name');\r\noos_result = foreach oos_result generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\n--FacingsCompliance% Calculation\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('AssessmentTask.Visit.RetailStore.Name');\r\nfcs = foreach fcs generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask.Visit.RetailStore.Name');\r\npromo = foreach promo generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('AssessmentTask.Visit.RetailStore.Name');\r\ninv = foreach inv generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--Total_Number_of_Visits_and_Visit_Frequency\r\nq = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\r\nq = filter q by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [..\"current day\"];\r\nq_A = filter q by 'Status' in [\"Completed\", \"Abandoned\"];\r\nq_A = group q_A by ('RetailStore.Id', 'RetailStore.Name');\r\nq_A = foreach q_A generate 'RetailStore.Name', count('q_A') as 'Number of Visits', unique('ActualVisitStartTime_YearMonthDay') as 'number_of_visit_dates';\r\nq_A = foreach q_A generate 'RetailStore.Name', 'Number of Visits', ('Number of Visits'/'number_of_visit_dates') as 'visit_frequency';\r\n--final multidataset table \r\nfinal_table = cogroup order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name') full, q_A by ('RetailStore.Name') full, sos by ('Store_Name') full, oos_result by ('Store_Name') full, comp_result by ('Store_Name') full,fcs by ('Store_Name') full, promo by ('Store_Name') full, inv by ('Store_Name');\r\nfinal_table = foreach final_table generate coalesce(order1.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', q_A.'RetailStore.Name', comp_result.'Store_Name', sos.'Store_Name',oos_result.'Store_Name', fcs.'Store_Name', promo.'Store_Name', inv.'Store_Name') as 'AssessmentTask.Visit.RetailStore.Name', \r\n\r\nsum(order1.'avg_order_value') as 'avg_order_value', sum(order1.'avg_weekly_revenue') as 'avg_weekly_revenue',sum(order1.'Sales') as 'total_sales', sum(order1.'Quantity') as 'total_qty', sum(q_A.'Number of Visits') as 'Number of Visits', sum(q_A.'visit_frequency') as 'visit_frequency', avg(oos_result.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp_result.'Avg_CompliancePercentage') as 'Avg_CompliancePercentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', avg(inv.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage',\r\n\r\n(case when {{cell(range_orderitem_metr_1.selection, 0, \"min\").asString()}} is null then {{cell(range_orderitem_metr_1.result, 0, \"min\").asObject()}} else {{cell(range_orderitem_metr_1.selection, 0, \"min\").asString()}} end) as 'min_order',\r\n(case when {{cell(range_orderitem_metr_1.selection, 0, \"max\").asString()}} is null then {{cell(range_orderitem_metr_1.result, 0, \"max\").asObject()}} else {{cell(range_orderitem_metr_1.selection, 0, \"max\").asString()}} end) as 'max_order',\r\n(case when {{cell(range_compliance_metrics.selection, 0, \"min\").asString()}} is null then {{cell(range_compliance_metrics.result, 0, \"min\").asObject()}} else {{cell(range_compliance_metrics.selection, 0, \"min\").asString()}} end) as 'min_compliance',\r\n(case when {{cell(range_compliance_metrics.selection, 0, \"max\").asString()}} is null then {{cell(range_compliance_metrics.result, 0, \"max\").asObject()}} else {{cell(range_compliance_metrics.selection, 0, \"max\").asString()}} end) as 'max_compliance';\r\n\r\nfinal_table = filter final_table by \r\nround(coalesce('{{cell(picklist_order_metri_1.selection,0,\"Api_name_y\").asObject()}}',0),2) >= 'min_order' and \r\nround(coalesce('{{cell(picklist_order_metri_1.selection,0,\"Api_name_y\").asObject()}}',0),2) <= 'max_order' and \r\nround(coalesce('{{cell(picklist_compliance_metrics.selection, 0, \"Api_name_x\").asObject()}}',0),2) >= 'min_compliance'  and \r\nround(coalesce('{{cell(picklist_compliance_metrics.selection, 0, \"Api_name_x\").asObject()}}',0),2) <= 'max_compliance';\r\nfinal_table = foreach final_table generate 'AssessmentTask.Visit.RetailStore.Name', coalesce('{{cell(picklist_visit_metrics.selection, 0, \"Api_name_visits\").asObject()}}',0) as '{{cell(picklist_visit_metrics.selection, 0, \"Api_name_visits\").asObject()}}', coalesce('{{cell(picklist_compliance_metrics.selection,0,\"Api_name_x\").asObject()}}',0) as '{{cell(picklist_compliance_metrics.selection,0,\"Api_name_x\").asObject()}}';",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "range_orderitem_metr_1",
            "range_compliance_metrics"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Master_Table_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Master Table",
        "numbers" : [ ],
        "query" : "--Store Details\r\nstore1 = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\r\nstore1 = filter store1 by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nstore1 = group store1 by ('RetailStore.Name','RetailStore.RetailStoreGroupName_Custom','RetailStore.Location.Address.State',\r\n         'RetailStore.Location.Address.City','RetailStore.Account.Name','RetailStore.Location.Name' );\r\nstore1 = foreach store1 generate store1.'RetailStore.Name' as 'Store',store1.'RetailStore.RetailStoreGroupName_Custom' as 'Store Group',store1.'RetailStore.Account.Name' as 'Account',store1.'RetailStore.Location.Address.State' as 'State',store1.'RetailStore.Location.Address.City' as 'City',store1.'RetailStore.Location.Name' as 'Location';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\norder1 = filter order1 by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day')\")}};\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Location.Address.State','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Location.Address.City','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Account.Name','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Location.Name');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name' as 'Store','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store Group','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Account.Name' as 'Account','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Location.Address.State' as 'State','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Location.Address.City' as 'City','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Location.Name' as 'Location',sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\n-- Share of Shelf\r\nsos = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\nsos = filter sos by 'Include_In_Compliance' == \"True\";\r\nsos = filter sos by 'Type_Computed' == \"ShareOfShelf\";\r\nsos = filter sos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nsos = group sos by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','AssessmentTask.Visit.RetailStore.Account.Name','AssessmentTask.Visit.RetailStore.Location.Address.State','AssessmentTask.Visit.RetailStore.Location.Address.City','AssessmentTask.Visit.RetailStore.Location.Name');\r\nsos = foreach sos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store', 'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store Group', 'AssessmentTask.Visit.RetailStore.Account.Name' as 'Account','AssessmentTask.Visit.RetailStore.Location.Address.State' as 'State','AssessmentTask.Visit.RetailStore.Location.Address.City' as 'City','AssessmentTask.Visit.RetailStore.Location.Name' as 'Location',avg('Compliance_Percentage') as 'SoS_Compliance_Percentage';\r\n--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\noos = filter oos by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos = filter oos by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\noos = group oos by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','AssessmentTask.Visit.RetailStore.Account.Name','AssessmentTask.Visit.RetailStore.Location.Address.State','AssessmentTask.Visit.RetailStore.Location.Address.City','AssessmentTask.Visit.RetailStore.Location.Name');\r\noos = foreach oos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store Group','AssessmentTask.Visit.RetailStore.Account.Name' as 'Account','AssessmentTask.Visit.RetailStore.Location.Address.State' as 'State','AssessmentTask.Visit.RetailStore.Location.Address.City' as 'City','AssessmentTask.Visit.RetailStore.Location.Name' as 'Location',avg('Compliance_Percentage') as 'OOS_Compliance_Percentage';\r\n--Facings Calculation\r\nfcs = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\nfcs = filter fcs by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = filter fcs by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\nfcs = group fcs by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','AssessmentTask.Visit.RetailStore.Account.Name','AssessmentTask.Visit.RetailStore.Location.Address.State','AssessmentTask.Visit.RetailStore.Location.Address.City','AssessmentTask.Visit.RetailStore.Location.Name');\r\nfcs = foreach fcs generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store Group','AssessmentTask.Visit.RetailStore.Account.Name' as 'Account','AssessmentTask.Visit.RetailStore.Location.Address.State' as 'State','AssessmentTask.Visit.RetailStore.Location.Address.City' as 'City','AssessmentTask.Visit.RetailStore.Location.Name' as 'Location',avg('Compliance_Percentage') as 'FCS_Compliance_Percentage';\r\n--Promotion Compliance Calculation\r\npromo = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\npromo = filter promo by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo= filter promo by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\npromo = group promo by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','AssessmentTask.Visit.RetailStore.Account.Name','AssessmentTask.Visit.RetailStore.Location.Address.State','AssessmentTask.Visit.RetailStore.Location.Address.City','AssessmentTask.Visit.RetailStore.Location.Name');\r\npromo = foreach promo generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store Group','AssessmentTask.Visit.RetailStore.Account.Name' as 'Account','AssessmentTask.Visit.RetailStore.Location.Address.State' as 'State','AssessmentTask.Visit.RetailStore.Location.Address.City' as 'City','AssessmentTask.Visit.RetailStore.Location.Name' as 'Location',avg('Compliance_Percentage') as 'Promo_Compliance_Percentage';\r\n-- Compliance% Calculation\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp = group comp by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','AssessmentTask.Visit.RetailStore.Account.Name','AssessmentTask.Visit.RetailStore.Location.Address.State', 'AssessmentTask.Visit.RetailStore.Location.Address.City','AssessmentTask.Visit.RetailStore.Location.Name');\r\ncomp = foreach comp generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store Group','AssessmentTask.Visit.RetailStore.Account.Name' as 'Account','AssessmentTask.Visit.RetailStore.Location.Address.State' as 'State','AssessmentTask.Visit.RetailStore.Location.Address.City' as 'City','AssessmentTask.Visit.RetailStore.Location.Name' as 'Location',avg('Compliance_Percentage') as 'Compliance_Percentage';\r\n--Inventory Calculation\r\ninventory = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\ninventory = filter inventory by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninventory = filter inventory by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ninventory = group inventory by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','AssessmentTask.Visit.RetailStore.Account.Name','AssessmentTask.Visit.RetailStore.Location.Address.State','AssessmentTask.Visit.RetailStore.Location.Address.City','AssessmentTask.Visit.RetailStore.Location.Name');\r\ninventory = foreach inventory generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store Group','AssessmentTask.Visit.RetailStore.Account.Name' as 'Account','AssessmentTask.Visit.RetailStore.Location.Address.State' as 'State','AssessmentTask.Visit.RetailStore.Location.Address.City' as 'City','AssessmentTask.Visit.RetailStore.Location.Name' as 'Location',avg('Compliance_Percentage') as 'Inventory_Compliance_Percentage';\r\n-- NPS Calculation\r\nnps = load \"${App.Datasets.CG_SurveyQuestionResponse69_tp.FullyQualifiedName}\";\r\nnps = filter nps by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('SurveyResponse.CompletionDateTime_Year', 'SurveyResponse.CompletionDateTime_Month', 'SurveyResponse.CompletionDateTime_Day')\")}};\r\nnps_A = filter nps by 'ResponseValueBucket' == \"Detractors\";\r\nnps_B = filter nps by 'ResponseValueBucket' == \"Promoters\";\r\nnps_result = group nps by ('SurveyResponse.SurveySubject.StoreName','SurveyResponse.SurveySubject.StoreGroup','SurveyResponse.SurveySubject.Account','SurveyResponse.SurveySubject.State','SurveyResponse.SurveySubject.City','SurveyResponse.SurveySubject.Location')  full,nps_A by ('SurveyResponse.SurveySubject.StoreName','SurveyResponse.SurveySubject.StoreGroup','SurveyResponse.SurveySubject.Account','SurveyResponse.SurveySubject.State','SurveyResponse.SurveySubject.City','SurveyResponse.SurveySubject.Location') full , nps_B by ('SurveyResponse.SurveySubject.StoreName','SurveyResponse.SurveySubject.StoreGroup','SurveyResponse.SurveySubject.Account','SurveyResponse.SurveySubject.State','SurveyResponse.SurveySubject.City','SurveyResponse.SurveySubject.Location');\r\nnps_result = foreach nps_result generate  nps.'SurveyResponse.SurveySubject.StoreName' as 'Store', nps.'SurveyResponse.SurveySubject.StoreGroup' as 'Store Group',nps.'SurveyResponse.SurveySubject.Account' as 'Account',nps.'SurveyResponse.SurveySubject.State' as 'State',nps.'SurveyResponse.SurveySubject.City' as 'City',nps.'SurveyResponse.SurveySubject.Location' as 'Location',count(nps_A) as 'detractor_count', count(nps_B) as 'promoter_count', count(nps) as 'total_survey';\r\nnps_result = foreach nps_result generate   'Store', 'Store Group', 'Account', 'State', 'City', 'Location','detractor_count'/'total_survey' as 'detractors_percent','promoter_count'/'total_survey' as 'promoters_percent';\r\nnps_result = foreach nps_result generate   'Store', 'Store Group', 'Account', 'State', 'City', 'Location', ('promoters_percent'-'detractors_percent') as 'NPS_score_percentage';\r\n--Total Cases\r\ncase1 = load \"${App.Datasets.CG_Case69_tp.FullyQualifiedName}\";\r\ncase1 = filter case1 by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day')\")}};\r\ncase1 = group case1 by ('RetailStore.Name','RetailStore.RetailStoreGroupName_Custom','RetailStore.Account.Name','RetailStore.Location.Address.State','RetailStore.Location.Address.City','RetailStore.Location.Name');\r\ncase1 = foreach case1 generate 'RetailStore.Name' as 'Store','RetailStore.RetailStoreGroupName_Custom'as 'Store Group','RetailStore.Account.Name' as 'Account','RetailStore.Location.Address.State' as 'State','RetailStore.Location.Address.City' as 'City','RetailStore.Location.Name' as 'Location',count() as 'Total_Cases';\r\n--Days since last Visit\r\nvisit = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\r\nvisit = group visit by ('RetailStore.Name','RetailStore.RetailStoreGroupName_Custom','RetailStore.Account.Name','RetailStore.Location.Address.State','RetailStore.Location.Address.City','RetailStore.Location.Name');\r\nvisit = foreach visit generate 'RetailStore.Name' as 'Store','RetailStore.RetailStoreGroupName_Custom'as 'Store Group','RetailStore.Account.Name' as 'Account','RetailStore.Location.Address.State' as 'State','RetailStore.Location.Address.City' as 'City','RetailStore.Location.Name' as 'Location',(max(visit.'ActualVisitStartTime_sec_epoch')) as 'last_visited_time';\r\nvisit = foreach visit generate  'Store','Store Group','Account','State','City','Location', daysBetween(toDate(last_visited_time), now() ) as 'days_since_last_visited';\r\n--final multidataset table\r\nfinal_table = cogroup store1 by ('Store','Store Group','Account','State','City','Location') full,order1 by ('Store','Store Group','Account','State','City','Location') full,sos by ('Store','Store Group','Account','State','City','Location') full,fcs by ('Store','Store Group','Account','State','City','Location') full,oos by ('Store','Store Group','Account','State','City','Location') full,comp by ('Store','Store Group','Account','State','City','Location') full, promo by ('Store','Store Group','Account','State','City','Location') full, inventory by ('Store','Store Group','Account','State','City','Location') full, nps_result by ('Store','Store Group','Account','State','City','Location') full, case1 by ('Store','Store Group','Account','State','City','Location') full, visit by ('Store','Store Group','Account','State','City','Location');\r\nfinal_table = foreach final_table generate coalesce(store1.'Store', order1.'Store', sos.'Store', fcs.'Store', oos.'Store',comp.'Store',promo.'Store',nps_result.'Store',case1.'Store',visit.'Store', inventory.'Store') as 'RetailStore.Name', coalesce(store1.'Location', order1.'Location', sos.'Location', fcs.'Location', oos.'Location',comp.'Location',promo.'Location',nps_result.'Location',case1.'Location',visit.'Location',inventory.'Location') as 'RetailStore.Location.Name',coalesce(store1.'Account', order1.'Account', sos.'Account', fcs.'Account', oos.'Account',comp.'Account',promo.'Account',nps_result.'Account',case1.'Account',visit.'Account', inventory.'Account') as 'RetailStore.Account.Name',coalesce(store1.'State', order1.'State', sos.'State', fcs.'State',oos.'State',comp.'State',promo.'State',nps_result.'State',case1.'State',visit.'State', inventory.'State') as 'RetailStore.Location.Address.State',coalesce(store1.'City', order1.'City', sos.'City', fcs.'City',oos.'City',comp.'City',promo.'City',nps_result.'City',case1.'City',visit.'City', inventory.'City') as 'RetailStore.Location.Address.City',\r\n\r\navg(fcs.'FCS_Compliance_Percentage') as 'Facings', avg(inventory.'Inventory_Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage', sum(oos.'OOS_Compliance_Percentage') as 'Out_of_Stock', avg(promo.'Promo_Compliance_Percentage') as 'Promotions', avg(sos.'SoS_Compliance_Percentage') as 'Share_of_Shelf', sum(visit.'days_since_last_visited') as 'days_since_last_visit', sum(nps_result.'NPS_score_percentage') as 'NPS', sum(order1.'Quantity') as 'Quantity', sum(order1.'Sales') as 'Sales', sum(case1.'Total_Cases') as 'Total Cases', avg(comp.'Compliance_Percentage') as 'Compliance_Percentage_1';\r\nfinal_table = filter final_table by 'RetailStore.Name' is not null;\r\nfinal_table = order final_table  by 'Compliance_Percentage_1' desc;",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1"
          ]
        },
        "selectMode" : "none",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : {
              "NPS" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              },
              "days_since_last_visit" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              },
              "Sales" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              },
              "Promotions" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              },
              "Total Cases" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              },
              "Compliance_Percentage_1" : {
                "parameters" : { },
                "type" : "bar"
              },
              "Facings" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              },
              "Share_of_Shelf" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              },
              "Out_of_Stock" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              },
              "Quantity" : {
                "parameters" : {
                  "alignment" : "left"
                },
                "type" : "text"
              }
            },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "mode" : "fittocontainer",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "TotalPrice_Order_Act_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Sales_velocity_step",
        "numbers" : [ ],
        "query" : "order1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\norder1 = group order1 by( 'Order.ActivatedDate_Year','Order.ActivatedDate_Week');\norder1 = foreach order1 generate 'Order.ActivatedDate_Year'+\"-\"+'Order.ActivatedDate_Week' as 'YearWeek',sum('TotalPrice') as 'Sales', unique('OrderId') as 'Orders', sum('Quantity') as 'Quantity';\norder1 = group order1 by all;\norder1 = foreach order1 generate  sum('Sales') as 'Sales', sum('Sales')/unique('YearWeek') as 'SalesVelocity',sum('Quantity') as 'Quantity';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "Sales",
                "SalesVelocity"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Clone_of_decline_que_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Clone of decline_query1",
        "numbers" : [ ],
        "query" : "-- Decline in Sales and Quantity(CG_OrderItem)\r\nsales = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\nsales_A = filter sales by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day')\")}};\r\nsales_B = filter sales by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day')\")}};\r\ntotal_sale = group sales_A by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name') full, sales_B by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name');\r\ntotal_sale = foreach total_sale generate coalesce(sales_A.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', sales_B.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom') as 'Store_Group',coalesce(sales_A.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', sales_B.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name') as 'Store', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales', sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice') as 'Sales_Decline', (sum(sales_A.'TotalPrice') - sum(sales_B.'TotalPrice'))/sum(sales_B.'TotalPrice') as 'Sales_Decline_percent', sum(sales_A.'Quantity') as 'current_qty', sum(sales_B.'Quantity') as 'previous_qty', sum(sales_A.'Quantity') - sum(sales_B.'Quantity') as 'Quantity_Decline', (sum(sales_A.'Quantity') - sum(sales_B.'Quantity'))/sum(sales_B.'Quantity') as 'Quantity_Decline_percent';\r\n---Decline in SalesVelocity\r\ntotal_sv = group sales_A by ('{{column(static_3.selection,[\"Api_name_for_decline\"]).asObject()}}', 'Order.ActivatedDate_Year', 'Order.ActivatedDate_Week') full,\r\nsales_B by ('{{column(static_3.selection,[\"Api_name_for_decline\"]).asObject()}}', 'Order.ActivatedDate_Year', 'Order.ActivatedDate_Week');\r\ntotal_sv = foreach total_sv generate coalesce(sales_A.'{{column(static_3.selection,[\"Api_name_for_decline\"]).asObject()}}', sales_B.'{{column(static_3.selection,[\"Api_name_for_decline\"]).asObject()}}') as 'Store_StoreGroup', sales_A.'Order.ActivatedDate_Year'+\"-\"+ sales_A.'Order.ActivatedDate_Week' as 'CurrentPeriod_YearWeek', sales_B.'Order.ActivatedDate_Year'+\"-\"+ sales_B.'Order.ActivatedDate_Week' as 'PreviousPeriod_YearWeek', sum(sales_A.'TotalPrice') as 'current_sales', sum(sales_B.'TotalPrice') as 'previous_sales';\r\ntotal_sv = group total_sv by 'Store_StoreGroup';\r\ntotal_sv = foreach total_sv generate 'Store_StoreGroup' as 'Store_Group', 'Store_StoreGroup' as 'Store', sum('previous_sales') / unique('PreviousPeriod_YearWeek') as 'previous_sv', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) as 'SalesVelocity_Decline', ((sum('current_sales') / unique('CurrentPeriod_YearWeek')) - (sum('previous_sales') / unique('PreviousPeriod_YearWeek'))) / (sum('previous_sales') / unique('PreviousPeriod_YearWeek')) as 'SalesVelocity_Decline_percent';\r\n---Decline in Compliance (CG_RetailVisitKpi)\r\ncomp = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\ncomp = filter comp by 'Include_In_Compliance' == \"True\";\r\ncomp_A = filter comp by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ncomp_B = filter comp by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day')\")}};\r\ntotal_comp = group comp_A by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name') full, comp_B by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name');\r\ntotal_comp = foreach total_comp generate coalesce(comp_A.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', comp_B.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom') as 'Store_Group', coalesce(comp_A.'AssessmentTask.Visit.RetailStore.Name', comp_B.'AssessmentTask.Visit.RetailStore.Name') as 'Store', avg(comp_A.'Compliance_Percentage') as 'current_comp', avg(comp_B.'Compliance_Percentage') as 'previous_comp', avg(comp_A.'Compliance_Percentage') - avg(comp_B.'Compliance_Percentage') as 'CompliancePercent_Decline';\r\n\r\n---Decline in FacingCompliance (CG_RetailVisitKpi)\r\nfcs_A = filter comp_A by 'Type_Computed' == \"Facing\";\r\nfcs_B = filter comp_B by 'Type_Computed' == \"Facing\";\r\ntotal_fcs = group fcs_A by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name') full, fcs_B by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name');\r\ntotal_fcs = foreach total_fcs generate coalesce(fcs_A.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', fcs_B.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom') as 'Store_Group', coalesce(fcs_A.'AssessmentTask.Visit.RetailStore.Name', fcs_B.'AssessmentTask.Visit.RetailStore.Name') as 'Store', avg(fcs_A.'Compliance_Percentage') as 'current_fcs', avg(fcs_B.'Compliance_Percentage') as 'previous_fcs', avg(fcs_A.'Compliance_Percentage') - avg(fcs_B.'Compliance_Percentage') as 'FCS_Decline';\r\n\r\n---Decline in OOSCompliance (CG_RetailVisitKpi)\r\noos_comp_A = filter comp_A by 'Type_Computed' == \"OutOfStock\";\r\noos_comp_B = filter comp_B by 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos_comp = group oos_comp_A by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name') full, oos_comp_B by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name');\r\ntotal_oos_comp = foreach total_oos_comp generate coalesce(oos_comp_A.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', oos_comp_B.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom') as 'Store_Group', coalesce(oos_comp_A.'AssessmentTask.Visit.RetailStore.Name', oos_comp_B.'AssessmentTask.Visit.RetailStore.Name') as 'Store', avg(oos_comp_A.'Compliance_Percentage') as 'current_oos_comp', avg(oos_comp_B.'Compliance_Percentage') as 'previous_oos_comp', avg(oos_comp_A.'Compliance_Percentage') - avg(oos_comp_B.'Compliance_Percentage') as 'OOSComp_Decline';\r\n\r\n---Decline in PromotionCompliance (CG_RetailVisitKpi)\r\npromo_A = filter comp_A by 'Type_Computed' == \"Promotion\";\r\npromo_B = filter comp_B by 'Type_Computed' == \"Promotion\";\r\ntotal_promo = group promo_A by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name') full, promo_B by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name');\r\ntotal_promo = foreach total_promo generate coalesce(promo_A.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', promo_B.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom') as 'Store_Group', coalesce(promo_A.'AssessmentTask.Visit.RetailStore.Name', promo_B.'AssessmentTask.Visit.RetailStore.Name') as 'Store', avg(promo_A.'Compliance_Percentage') as 'current_promo', avg(promo_B.'Compliance_Percentage') as 'previous_promo', avg(promo_A.'Compliance_Percentage') - avg(promo_B.'Compliance_Percentage') as 'Promo_Decline';\r\n---Decline in SoSCompliance (CG_RetailVisitKpi)\r\nsos_A = filter comp_A by 'Type_Computed' == \"ShareOfShelf\";\r\nsos_B = filter comp_B by 'Type_Computed' == \"ShareOfShelf\";\r\ntotal_sos = group sos_A by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name') full, sos_B by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name');\r\ntotal_sos = foreach total_sos generate coalesce(sos_A.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', sos_B.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom') as 'Store_Group', coalesce(sos_A.'AssessmentTask.Visit.RetailStore.Name', sos_B.'AssessmentTask.Visit.RetailStore.Name') as 'Store', avg(sos_A.'Compliance_Percentage') as 'current_sos', avg(sos_B.'Compliance_Percentage') as 'previous_sos', avg(sos_A.'Compliance_Percentage') - avg(sos_B.'Compliance_Percentage') as 'SoS_Decline';\r\n---Decline in InventoryCompliance (CG_RetailVisitKpi)\r\ninventory_A = filter comp_A by 'Type_Computed' == \"Inventory\";\r\ninventory_B = filter comp_B by 'Type_Computed' == \"Inventory\";\r\ntotal_inventory = group inventory_A by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name') full, inventory_B by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name');\r\ntotal_inventory = foreach total_inventory generate coalesce(inventory_A.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', inventory_B.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom') as 'Store_Group', coalesce(inventory_A.'AssessmentTask.Visit.RetailStore.Name', inventory_B.'AssessmentTask.Visit.RetailStore.Name') as 'Store', avg(inventory_A.'Compliance_Percentage') as 'current_inventory', avg(inventory_B.'Compliance_Percentage') as 'previous_inventory', avg(inventory_A.'Compliance_Percentage') - avg(inventory_B.'Compliance_Percentage') as 'Inventory_Decline';\r\n---Decline in OutofStock (CG_RetailVisitKpi)\r\noos_A = filter comp_A by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_B = filter comp_B by 'ActualBooleanValue' == \"True\" and 'Type_Computed' == \"OutOfStock\";\r\ntotal_oos = group oos_A by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name') full, oos_B by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name');\r\ntotal_oos = foreach total_oos generate coalesce(oos_A.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', oos_B.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom') as 'Store_Group', coalesce(oos_A.'AssessmentTask.Visit.RetailStore.Name', oos_B.'AssessmentTask.Visit.RetailStore.Name') as 'Store', count(oos_A) as 'current_oos', count(oos_B) as 'previous_oos', count(oos_A) - count(oos_B) as 'OOS_Decline';\r\n---Decline in High Priority Visits not completed (CG_Visit)\r\nvisit = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\r\nvisit = filter visit by 'Status' in [\"Abandoned\", \"Planned\"] and  'VisitPriority' == \"High\" and  date('PlannedVisitStartTime_Year', 'PlannedVisitStartTime_Month', 'PlannedVisitStartTime_Day') in [..\"1 day ago\"];\r\nvisit_A = filter visit by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('PlannedVisitStartTime_Year', 'PlannedVisitStartTime_Month', 'PlannedVisitStartTime_Day')\")}};\r\nvisit_B = filter visit by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('PlannedVisitStartTime_Year', 'PlannedVisitStartTime_Month', 'PlannedVisitStartTime_Day')\")}};\r\ntotal_visit = group visit_A by ('RetailStore.RetailStoreGroupName_Custom', 'RetailStore.Name') full,visit_B by ('RetailStore.RetailStoreGroupName_Custom', 'RetailStore.Name');\r\ntotal_visit = foreach total_visit generate coalesce(visit_A.'RetailStore.RetailStoreGroupName_Custom', visit_B.'RetailStore.RetailStoreGroupName_Custom') as 'Store_Group', coalesce(visit_A.'RetailStore.Name', visit_B.'RetailStore.Name') as 'Store', count(visit_A) as 'current_HighPriorityIncompleteVisits', count(visit_B) as 'previous_HighPriorityIncompleteVisits', count(visit_A) - count(visit_B) as 'HighPriorityIncompleteVisits_Decline', (count(visit_A) - count(visit_B)) / count(visit_B) as 'HighPriorityIncompleteVisits_Decline_percent';\r\n--Decline in Cases(CG_Case)\r\ncase1 = load \"${App.Datasets.CG_Case69_tp.FullyQualifiedName}\";\r\ncase_A = filter case1 by {{row(Current_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day')\")}};\r\ncase_B = filter case1 by {{row(Comparative_Period_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day')\")}};\r\ntotal_case = group case_A by ('RetailStore.RetailStoreGroupName_Custom','RetailStore.Name') full, case_B by ('RetailStore.RetailStoreGroupName_Custom','RetailStore.Name');\r\ntotal_case = foreach total_case generate coalesce(case_A.'RetailStore.RetailStoreGroupName_Custom', case_B.'RetailStore.RetailStoreGroupName_Custom') as 'Store_Group',coalesce(case_A.'RetailStore.Name', case_B.'RetailStore.Name') as 'Store', count(case_A) - count(case_B) as 'Cases_Decline', count(case_A) as 'current_cases', count(case_B) as 'previous_cases', (count(case_A) - count(case_B)) / count(case_B) as 'Cases_Decline_percent';\r\n\r\n--Final cogroup table\r\nfinal_table = cogroup total_sale by  ('Store','Store_Group') full, total_sv by  ('Store','Store_Group') full, total_comp by  ('Store','Store_Group') full, total_fcs by  ('Store','Store_Group') full, total_oos_comp by  ('Store','Store_Group') full, total_promo by  ('Store','Store_Group') full, total_sos by ('Store','Store_Group') full, total_inventory by ('Store','Store_Group') full, total_oos by ('Store','Store_Group') full, total_visit by ('Store','Store_Group') full, total_case by ('Store','Store_Group');\r\n\r\n\r\nfinal_table = foreach final_table generate coalesce(total_sale.'Store', total_sv.'Store', total_comp.'Store', total_fcs.'Store', total_oos_comp.'Store', total_promo.'Store', total_sos.'Store', total_oos.'Store', total_visit.'Store',total_case.'Store') as 'Store', \r\ncoalesce(total_sale.'Store_Group', total_sv.'Store_Group', total_comp.'Store_Group', total_fcs.'Store_Group', total_oos_comp.'Store_Group', total_promo.'Store_Group', total_sos.'Store_Group',total_oos.'Store_Group', total_visit.'Store_Group',total_case.'Store_Group') as 'Store_Group',\r\n\r\nsum(total_sale.'previous_sales') as 'previous_sales', sum(total_sale.'Sales_Decline') as 'Sales_Decline', \r\nsum(total_sale.'previous_qty') as 'previous_qty', sum(total_sale.'Quantity_Decline') as 'Quantity_Decline', \r\nsum(total_sv.'previous_sv') as 'previous_sv', sum(total_sv.'SalesVelocity_Decline') as 'SalesVelocity_Decline', \r\nsum(total_fcs.'previous_fcs') as 'previous_fcs', sum(total_fcs.'FCS_Decline') as 'FCS_Decline', \r\nsum(total_oos_comp.'previous_oos_comp') as 'previous_oos_comp', sum(total_oos_comp.'OOSComp_Decline') as 'OOSComp_Decline',\r\nsum(total_promo.'previous_promo') as 'previous_promo', sum(total_promo.'Promo_Decline') as 'Promo_Decline', \r\navg(total_comp.'previous_comp') as 'previous_comp', avg(total_comp.'CompliancePercent_Decline') as 'CompliancePercent_Decline', \r\navg(total_sos.'previous_sos') as 'previous_sos', avg(total_sos.'SoS_Decline') as 'SoS_Decline', \r\nsum(total_oos.'previous_oos') as 'previous_oos', sum(total_oos.'OOS_Decline') as 'OOS_Decline', \r\nsum(total_visit.'previous_HighPriorityIncompleteVisits') as 'previous_HighPriorityIncompleteVisits', sum(total_visit.'HighPriorityIncompleteVisits_Decline') as 'HighPriorityIncompleteVisits_Decline', \r\nsum(total_case.'previous_cases') as 'previous_cases', sum(total_case.'Cases_Decline') as 'Cases_Decline', \r\nsum(total_inventory.'previous_inventory') as 'previous_inventory', sum(total_inventory.'Inventory_Decline') as 'Inventory_Decline';\r\n\r\nfinal_table1 = group final_table by {{column(static_3.selection,[\"Field_value\"]).asObject()}};\r\nfinal_table1 = foreach final_table1 generate {{column(static_3.selection,[\"Field_value\"]).asObject()}}, \r\nsum('Sales_Decline') as 'Sales_Decline', sum('Sales_Decline') / sum('previous_sales') as 'Sales_Decline_percent',\r\nsum('Quantity_Decline') as 'Quantity_Decline', sum('Quantity_Decline') / sum('previous_qty') as 'Quantity_Decline_percent',\r\nsum('SalesVelocity_Decline') as 'SalesVelocity_Decline', sum('SalesVelocity_Decline') / sum('previous_sv') as 'SalesVelocity_Decline_percent',\r\navg('FCS_Decline') as 'FCS_Decline', avg('FCS_Decline') / avg('previous_fcs') as 'FCS_Decline_percent',\r\navg('OOSComp_Decline') as 'OOSComp_Decline', avg('OOSComp_Decline') / avg('previous_oos_comp') as 'OOSComp_Decline_percent',\r\navg('Promo_Decline') as 'Promo_Decline', avg('Promo_Decline') / avg('previous_promo') as 'Promo_Decline_percent',\r\navg('CompliancePercent_Decline') as 'CompliancePercent_Decline', avg('CompliancePercent_Decline') / avg('previous_comp') as 'CompliancePercent_Decline_percent',\r\navg('SoS_Decline') as 'SoS_Decline', avg('SoS_Decline') / avg('previous_sos') as 'SoS_Decline_percent',\r\navg('Inventory_Decline') as 'Inventory_Decline', avg('Inventory_Decline') / avg('previous_inventory') as 'Inventory_Decline_percent',\r\nsum('OOS_Decline') as 'OOS_Decline', sum('OOS_Decline') / sum('previous_oos') as 'OOS_Decline_percent',\r\nsum('HighPriorityIncompleteVisits_Decline') as 'HighPriorityIncompleteVisits_Decline', sum('HighPriorityIncompleteVisits_Decline') / sum('previous_HighPriorityIncompleteVisits') as 'HighPriorityIncompleteVisits_Decline_percent',\r\nsum('Cases_Decline') as 'Cases_Decline', sum('Cases_Decline') / sum('previous_cases') as 'Cases_Decline_percent';\r\nfinal_table1 = foreach final_table1 generate {{row(static_3.selection,[0],[\"Field_value\",\"Api_name_for_decline\"]).asProjection()}}, {{row(static_1.selection,[0],[\"Field_value_decline\",\"Alias_decline\"]).asProjection()}}, {{row(static_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}};\r\nfinal_table1 = filter final_table1 by {{cell(static_1.selection,0,\"Alias_decline_percent\").asObject()}} is not null;\r\nfinal_table1 = order final_table1 by {{cell(static_1.selection,0,\"Alias_decline\").asObject()}} {{cell(static_2.selection,0,\"Text_fordecline\").asObject()}};",
        "receiveFacetSource" : {
          "mode" : "exclude",
          "steps" : [
            "Current_Period_1"
          ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "picklist_visit_metrics" : {
        "broadcastFacet" : true,
        "columns" : {
          "Api_name_visits" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "picklist_visit_metrics",
        "selectMode" : "singlerequired",
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Number of Visits",
            "Api_name_visits" : "Number of Visits"
          },
          {
            "Display" : "Visit Frequency",
            "Api_name_visits" : "visit_frequency"
          }
        ]
      },
      "OutofStock_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "OutofStock",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\nq = filter q by 'ActualBooleanValue' == \"True\";\nq = filter q by 'Type_Computed' == \"OutOfStock\";\nresult = group q by all;\nresult = foreach result generate count() as 'out_of_stock_count';\nresult = limit result 1;",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "picklist_compliance_metrics" : {
        "broadcastFacet" : true,
        "columns" : {
          "min" : {
            "type" : "string"
          },
          "max" : {
            "type" : "string"
          },
          "Api_name_x" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "picklist_compliance_metrics",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Avg Store Compliance"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Avg Facing Compliance",
            "Api_name_x" : "Avg_FacingsCompliance_Percentage",
            "min" : "min_Avg_FacingsCompliance_Percentage",
            "max" : "max_Avg_FacingsCompliance_Percentage"
          },
          {
            "Display" : "Avg Inventory Compliance",
            "Api_name_x" : "Avg_InventoryCompliance_Percentage",
            "min" : "min_Avg_InventoryCompliance_Percentage",
            "max" : "max_Avg_InventoryCompliance_Percentage"
          },
          {
            "Display" : "Avg Promotion Compliance",
            "Api_name_x" : "Avg_PromoCompliance_Percentage",
            "min" : "min_Avg_PromoCompliance_Percentage",
            "max" : "max_Avg_PromoCompliance_Percentage"
          },
          {
            "Display" : "Avg Share-of-Shelf Compliance",
            "Api_name_x" : "Avg_SoSCompliance_Percentage",
            "min" : "min_Avg_SoSCompliance_Percentage",
            "max" : "max_Avg_SoSCompliance_Percentage"
          },
          {
            "Display" : "Avg Store Compliance",
            "Api_name_x" : "Avg_CompliancePercentage",
            "min" : "min_Avg_CompliancePercentage",
            "max" : "max_Avg_CompliancePercentage"
          },
          {
            "Display" : "Avg Out-of-Stock Compliance",
            "Api_name_x" : "Avg_OutOfStock_Compliance",
            "min" : "min_Avg_OutOfStock_Compliance",
            "max" : "max_Avg_OutOfStock_Compliance"
          }
        ]
      },
      "range_orderitem_metr_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "range_orderitem_metrics",
        "numbers" : [ ],
        "query" : "order1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name','OrderId','Order.ActivatedDate_Year','Order.ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', 'OrderId', 'Order.ActivatedDate_Year'+\"-\"+'Order.ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', (sum('Sales')/unique('OrderId')) as 'avg_order_value', (sum('Sales')/unique('YearWeek')) as 'avg_weekly_revenue', sum('Sales') as 'total_sales', sum('Quantity') as 'Quantity';\r\norder1 = group order1 by all;\r\norder1 = foreach order1 generate min('total_sales') as 'min_total_sales', max('total_sales') as 'max_total_sales', min('Quantity') as 'min_total_qty', max('Quantity') as 'max_total_qty', min('avg_order_value') as 'min_avg_order_value', max('avg_order_value') as 'max_avg_order_value', min('avg_weekly_revenue') as 'min_avg_weekly_revenue', max('avg_weekly_revenue') as 'max_avg_weekly_revenue';\r\norder1 = foreach order1 generate \r\ncase when round(coalesce('{{cell(picklist_order_metri_1.selection, 0, \"min\").asString()}}',0),2) == round(coalesce('{{cell(picklist_order_metri_1.selection, 0, \"max\").asString()}}',0),2) then 0 else round(coalesce('{{cell(picklist_order_metri_1.selection, 0, \"min\").asString()}}',0),2) end as 'min', round(coalesce('{{cell(picklist_order_metri_1.selection, 0, \"max\").asString()}}',0),2) as 'max';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Clone_of_Master_bar_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Master_bar_values",
        "numbers" : [ ],
        "query" : "-- Incomplete High Priority Visits\r\nvisit1 = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\r\nvisit1 = filter visit1 by 'Status' in [\"Abandoned\", \"Planned\"] and  'VisitPriority' == \"High\" and  date('PlannedVisitStartTime_Year', 'PlannedVisitStartTime_Month', 'PlannedVisitStartTime_Day') in [..\"1 day ago\"];\r\nvisit1 = group visit1 by ('RetailStore.Name','RetailStore.RetailStoreGroupName_Custom');\r\nvisit1 = foreach visit1 generate 'RetailStore.Name' as 'Store','RetailStore.RetailStoreGroupName_Custom' as 'Store_Group',count(visit1) as 'High_Priority_Incomplete_Visits';\r\n-- Order Details\r\norder1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\r\norder1 = group order1 by( 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','Order.ActivatedDate_Year','Order.ActivatedDate_Week');\r\norder1 = foreach order1 generate 'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name' as 'Store','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store_Group','Order.ActivatedDate_Year'+\"-\"+'Order.ActivatedDate_Week' as 'YearWeek', sum('TotalPrice') as 'Sales',unique('OrderId') as 'Orders',sum('Quantity') as 'Quantity';\r\norder1 = group order1 by ({{column(static_3.selection,[\"Field_value\"]).asObject()}});\r\norder1 = foreach order1 generate {{column(static_3.selection,[\"Field_value\"]).asObject()}} as 'Store', {{column(static_3.selection,[\"Field_value\"]).asObject()}} as 'Store_Group', sum('Sales') as 'Sales', sum('Orders') as 'Orders', sum('Quantity') as 'Quantity', (sum('Sales')/unique('YearWeek')) as 'sales_velocity';\r\n-- Compliance% Calculation\r\nretailvisitkpi = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\nretailvisitkpi = filter retailvisitkpi by 'Include_In_Compliance' == \"True\";\r\ncomp = group retailvisitkpi by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom');\r\ncomp = foreach comp generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store', 'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store_Group',avg('Compliance_Percentage') as 'Avg_Compliance_Percentage';\r\n--Share of Shelf\r\nsos = filter retailvisitkpi by 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom');\r\nsos = foreach sos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store', 'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store_Group',avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\n--FacingsCompliance Calculation\r\nfcs = filter retailvisitkpi by 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom');\r\nfcs = foreach fcs generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store_Group', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\n\r\n--OOSCompliance Calculation\r\noos_comp = filter retailvisitkpi by 'Type_Computed' == \"OutOfStock\";\r\noos_comp = group oos_comp by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom');\r\noos_comp = foreach oos_comp generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store_Group', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\n\r\n--InventoryCompliance Calculation\r\ninventory = filter retailvisitkpi by 'Type_Computed' == \"Inventory\";\r\ninventory = group inventory by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom');\r\ninventory = foreach inventory generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store_Group', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = filter retailvisitkpi by 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom');\r\npromo = foreach promo generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store_Group', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\n--OutOfStock\r\noos = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\noos = filter oos by 'ActualBooleanValue'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos = group oos by ('AssessmentTask.Visit.RetailStore.Name','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom');\r\noos = foreach oos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store','AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as 'Store_Group',count() as 'OutOfStock_ActualCount';\r\n--Total Cases\r\ncase1 = load \"${App.Datasets.CG_Case69_tp.FullyQualifiedName}\";\r\ncase1 = group case1 by ('RetailStore.Name','RetailStore.RetailStoreGroupName_Custom');\r\ncase1 = foreach case1 generate case1.'RetailStore.Name' as 'Store', case1.'RetailStore.RetailStoreGroupName_Custom' as 'Store_Group',count(case1) as 'Total_Cases';\r\n--final multidataset table\r\nfinal_table = cogroup order1 by ('Store','Store_Group') full, comp by ('Store','Store_Group') full, sos by ('Store','Store_Group') full, inventory by ('Store','Store_Group') full, oos by ('Store','Store_Group') full, fcs by ('Store','Store_Group') full, oos_comp by ('Store','Store_Group') full, promo by ('Store','Store_Group') full, visit1 by ('Store','Store_Group') full, case1 by ('Store','Store_Group');\r\nfinal_table = foreach final_table generate coalesce(order1.'Store', sos.'Store', oos.'Store', comp.'Store', fcs.'Store', oos_comp.'Store', promo.'Store', visit1.'Store', case1.'Store', inventory.'Store') as 'Store', \r\n\r\ncoalesce(order1.'Store_Group', sos.'Store_Group', oos.'Store_Group', comp.'Store_Group', fcs.'Store_Group', oos_comp.'Store_Group', promo.'Store_Group', visit1.'Store_Group', case1.'Store_Group', inventory.'Store_Group') as 'Store_Group', \r\n\r\navg(order1.'sales_velocity') as 'Sales_Velocity', sum(order1.'Sales') as 'Sales', sum(order1.'Quantity') as 'Quantity', sum(oos.'OutOfStock_ActualCount') as 'OutOfStock_Count', sum(case1.'Total_Cases') as 'Total_Cases', avg(sos.'Avg_SoSCompliance_Percentage') as 'Avg_SoSCompliance_Percentage', avg(comp.'Avg_Compliance_Percentage') as 'Avg_Compliance_Percentage', avg(fcs.'Avg_FacingsCompliance_Percentage') as 'Avg_FacingsCompliance_Percentage', avg(oos_comp.'Avg_OutOfStock_Compliance') as 'Avg_OutOfStock_Compliance', avg(promo.'Avg_PromoCompliance_Percentage') as 'Avg_PromoCompliance_Percentage', sum(visit1.'High_Priority_Incomplete_Visits')as 'High_Priority_Incomplete_Visits', avg(inventory.'Avg_InventoryCompliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\nfinal_table1 = group final_table by {{column(static_3.selection,[\"Field_value\"]).asObject()}};\r\nfinal_table1 = filter final_table1 by {{cell(static_1.selection,0,\"Alias_name\").asObject()}} is not null;\r\nfinal_table1 = foreach final_table1 generate {{row(static_3.selection,[0],[\"Field_value\",\"Api_name\"]).asProjection()}},{{cell(static_1.selection,0,\"Field_value\").asObject()}} as '{{cell(static_1.selection,0,\"Alias_name\").asObject()}}';\r\nfinal_table1 = order final_table1 by '{{cell(static_1.selection,0,\"Alias_name\").asObject()}}' {{cell(static_2.selection,0,\"Text2\").asObject()}};",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Current_Period_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.CG_Visit69_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Planned Start Time"
            ]
          },
          "version" : -1.0
        },
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "start" : [
          [
            [
              "year",
              0
            ],
            [
              "year",
              0
            ]
          ]
        ],
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "Time_period_selector_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "Time_RetailVisitKpi_Alias" : {
            "type" : "string"
          },
          "Time_RetailVisitKpi_dim" : {
            "type" : "string"
          },
          "Time_Order_Alias" : {
            "type" : "string"
          },
          "Time_RetailVisitKpi_group" : {
            "type" : "string"
          },
          "Time_Order_dim" : {
            "type" : "string"
          },
          "Current_period" : {
            "type" : "string"
          },
          "Time_Order_group" : {
            "type" : "string"
          },
          "Previous_Period" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "Time period selector",
        "selectMode" : "single",
        "start" : {
          "Display" : [
            "View Current Year over Last Year"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "View Current Week over Last Week",
            "Current_period" : "\"current week\"..\"current day\"",
            "Time_Order_group" : "'Order.ActivatedDate_Year', 'Order.ActivatedDate_Week'",
            "Time_RetailVisitKpi_group" : "'ActualVisitStartTime_Year','ActualVisitStartTime_Week'",
            "Time_Order_dim" : "'Order.ActivatedDate_Year' + \"~~~\" + 'Order.ActivatedDate_Week'",
            "Time_RetailVisitKpi_dim" : "'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Week'",
            "Time_Order_Alias" : "'Order.ActivatedDate_Year~~~Order.ActivatedDate_Week'",
            "Time_RetailVisitKpi_Alias" : "'ActualVisitStartTime_Year~~~ActualVisitStartTime_Week'",
            "Previous_Period" : "\"1 week ago\"..\"current day - 1 week\""
          },
          {
            "Display" : "View Current Month over Last Month",
            "Current_period" : "\"current month\"..\"current day\"",
            "Time_Order_group" : "'Order.ActivatedDate_Year', 'Order.ActivatedDate_Month'",
            "Time_RetailVisitKpi_group" : "'ActualVisitStartTime_Year','ActualVisitStartTime_Month'",
            "Time_Order_dim" : "'Order.ActivatedDate_Year' + \"~~~\" + 'Order.ActivatedDate_Month'",
            "Time_RetailVisitKpi_dim" : "'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Month'",
            "Time_Order_Alias" : "'Order.ActivatedDate_Year~~~Order.ActivatedDate_Month'",
            "Time_RetailVisitKpi_Alias" : "'ActualVisitStartTime_Year~~~ActualVisitStartTime_Month'",
            "Previous_Period" : "\"1 month ago\"..\"current day - 1 month\""
          },
          {
            "Display" : "View Current Quarter over Last Quarter",
            "Current_period" : "\"current quarter\"..\"current day\"",
            "Time_Order_group" : "'Order.ActivatedDate_Year', 'Order.ActivatedDate_Quarter'",
            "Time_RetailVisitKpi_group" : "'ActualVisitStartTime_Year','ActualVisitStartTime_Quarter'",
            "Time_Order_dim" : "'Order.ActivatedDate_Year' + \"~~~\" + 'Order.ActivatedDate_Quarter'",
            "Time_RetailVisitKpi_dim" : "'ActualVisitStartTime_Year' + \"~~~\" + 'ActualVisitStartTime_Quarter'",
            "Time_Order_Alias" : "'Order.ActivatedDate_Year~~~Order.ActivatedDate_Quarter'",
            "Time_RetailVisitKpi_Alias" : "'ActualVisitStartTime_Year~~~ActualVisitStartTime_Quarter'",
            "Previous_Period" : "\"1 quarter ago\"..\"current day - 1 quarter\""
          },
          {
            "Display" : "View Current Year over Last Year",
            "Current_period" : "\"current year\"..\"current day\"",
            "Time_Order_group" : "'Order.ActivatedDate_Year'",
            "Time_RetailVisitKpi_group" : "'ActualVisitStartTime_Year'",
            "Time_Order_dim" : "'Order.ActivatedDate_Year'",
            "Time_RetailVisitKpi_dim" : "'ActualVisitStartTime_Year' ",
            "Time_Order_Alias" : "'Order.ActivatedDate_Year'",
            "Time_RetailVisitKpi_Alias" : "'ActualVisitStartTime_Year'",
            "Previous_Period" : " \"1 year ago\"..\"current day - 1 year\""
          }
        ]
      },
      "picklist_order_metri_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "min" : {
            "type" : "string"
          },
          "max" : {
            "type" : "string"
          },
          "Symbol" : {
            "type" : "string"
          },
          "Api_name_y" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "picklist_order_metrics",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Revenue"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Avg Order Value",
            "Api_name_y" : "avg_order_value",
            "min" : "min_avg_order_value",
            "max" : "max_avg_order_value",
            "Symbol" : "(USD)"
          },
          {
            "Display" : "Avg Weekly Revenue",
            "Api_name_y" : "avg_weekly_revenue",
            "min" : "min_avg_weekly_revenue",
            "max" : "max_avg_weekly_revenue",
            "Symbol" : "(USD)"
          },
          {
            "Display" : "Quantity",
            "Api_name_y" : "total_qty",
            "min" : "min_total_qty",
            "max" : "max_total_qty",
            "Symbol" : ""
          },
          {
            "Display" : "Revenue",
            "Api_name_y" : "total_sales",
            "min" : "min_total_sales",
            "max" : "max_total_sales",
            "Symbol" : "(USD)"
          }
        ]
      },
      "Clone_of_multi_query_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Decline_percent_multi_query",
        "numbers" : [ ],
        "query" : "\n-- %Decline in Sales\n\nsale1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\nsale1 = filter sale1 by date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day') in\n[{{cell(Time_period_selector_1.selection,0,\"Current_period\").asString()}}]|| date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day') in [{{cell(Time_period_selector_1.selection,0,\"Previous_Period\").asString()}}];\nsale_result = group sale1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom','Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', \n{{cell(Time_period_selector_1.selection,0,\"Time_Order_group\").asString()}});\nsale_result = foreach sale_result generate\nsale1.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as\n'Store_Group', sale1.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name' as 'Store', \n{{cell(Time_period_selector_1.selection,0,\"Time_Order_dim\").asString()}} as {{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}, sum(sale1.'TotalPrice') as 'Sales';\nsale_result = group sale_result by ('Store_Group','Store' ,{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}});\nsale_result = foreach sale_result generate 'Store_Group','Store', {{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}, \nfirst(Sales) as 'Sales', sum(Sales) - sum(sum(Sales)) over ([-1..-1] partition by ('Store_Group','Store') order by\n('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}})) as \n'Decline', (sum(Sales) - sum(sum(Sales)) over ([-1..-1] partition by ('Store_Group','Store') \norder by ('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}})))/(sum(sum(Sales)) over ([-1..-1] partition by ('Store_Group','Store') order by ('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}))) as 'Decline_percent';\ntotal_sale = filter sale_result by 'Decline_percent' is not null;\ntotal_sale = foreach total_sale generate 'Store_Group','Store','Decline','Decline_percent';\n\n\n--total_sale = order total_sale by 'Decline' asc;\n\n--%Decline in Quantity\n\nqty1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\nqty1 = filter qty1 by date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day') in\n[{{cell(Time_period_selector_1.selection,0,\"Current_period\").asString()}}]|| date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day') in [{{cell(Time_period_selector_1.selection,0,\"Previous_Period\").asString()}}];\nqty_result = group qty1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', \n'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', {{cell(Time_period_selector_1.selection,0,\"Time_Order_group\").asString()}});\nqty_result = foreach qty_result generate\nqty1.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as\n'Store_Group', qty1.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name' as 'Store', \n{{cell(Time_period_selector_1.selection,0,\"Time_Order_dim\").asString()}} as {{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}, sum(qty1.'Quantity') as 'Quantity';\nqty_result = group qty_result by ('Store_Group','Store' ,{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}});\nqty_result = foreach qty_result generate 'Store_Group','Store', {{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}, \nfirst(Quantity) as 'Quantity', sum(Quantity) - sum(sum(Quantity)) over ([-1..-1] partition by ('Store_Group','Store') order by\n('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}})) as \n'Decline', (sum(Quantity) - sum(sum(Quantity)) over ([-1..-1] partition by ('Store_Group','Store') \norder by ('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}})))/(sum(sum(Quantity)) over ([-1..-1] partition by ('Store_Group','Store') order by ('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}))) as 'Decline_percent';\ntotal_qty = filter qty_result by 'Decline_percent' is not null;\ntotal_qty = foreach total_qty generate 'Store_Group','Store','Decline','Decline_percent';\n\n\n--total_qty = order total_qty by 'Decline' asc;\n\n---%Decline in SalesVelocity\nsv1 = load \"${App.Datasets.CG_OrderItem59_tp.FullyQualifiedName}\";\nsv1 = filter sv1 by date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day') in\n[{{cell(Time_period_selector_1.selection,0,\"Current_period\").asString()}}]|| date('Order.ActivatedDate_Year', 'Order.ActivatedDate_Month', 'Order.ActivatedDate_Day') in [{{cell(Time_period_selector_1.selection,0,\"Previous_Period\").asString()}}];\nsv_result = group sv1 by ('Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', \n'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name', {{cell(Time_period_selector_1.selection,0,\"Time_Order_group\").asString()}});\nsv_result = foreach sv_result generate\nsv1.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as\n'Store_Group', sv1.'Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name' as 'Store', \n{{cell(Time_period_selector_1.selection,0,\"Time_Order_dim\").asString()}} as {{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}, sum(sv1.'TotalPrice') as 'Sales',unique(sv1.'Order.ActivatedDate_Week') as 'unique_week';sv_result = group sv_result by ('Store_Group','Store' ,{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}});\n sv_result = foreach sv_result generate 'Store_Group','Store',  {{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}, (sum(Sales)/sum(unique_week)) as 'SalesVelocity';\nsv_result = group sv_result by ('Store_Group','Store' ,{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}});\nsv_result = foreach sv_result generate 'Store_Group','Store', {{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}, \nfirst(SalesVelocity) as 'SalesVelocity', sum(SalesVelocity) - sum(sum(SalesVelocity)) over ([-1..-1] partition by ('Store_Group','Store') order by\n('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}})) as \n'Decline', (sum(SalesVelocity) - sum(sum(SalesVelocity)) over ([-1..-1] partition by ('Store_Group','Store') \norder by ('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}})))/(sum(sum(SalesVelocity)) over ([-1..-1] partition by ('Store_Group','Store') order by ('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_Order_Alias\").asString()}}))) as 'Decline_percent';\ntotal_sv = filter sv_result by 'Decline_percent' is not null;\ntotal_sv = foreach total_sv generate 'Store_Group','Store','Decline','Decline_percent';\n\n\n\n---%Decline in Compliance\n\ncomp1 = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\ncomp1 = filter comp1 by  'Include_In_Compliance' == \"True\" ;\ncomp1 = filter comp1 by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in\n[{{cell(Time_period_selector_1.selection,0,\"Current_period\").asString()}}]|| date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [{{cell(Time_period_selector_1.selection,0,\"Previous_Period\").asString()}}];\ncomp_result = group comp1 by ('AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom', 'AssessmentTask.Visit.RetailStore.Name', {{cell(Time_period_selector_1.selection,0,\"Time_RetailVisitKpi_group\").asString()}});\ncomp_result = foreach comp_result generate\ncomp1.'AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom' as\n'Store_Group', comp1.'AssessmentTask.Visit.RetailStore.Name' as 'Store', \n{{cell(Time_period_selector_1.selection,0,\"Time_RetailVisitKpi_dim\").asString()}} as {{cell(Time_period_selector_1.selection,0,\"Time_RetailVisitKpi_Alias\").asString()}},avg(comp1.'Compliance_Percentage') as 'Compliance_percent';\ncomp_result = group comp_result by ('Store_Group','Store' ,{{cell(Time_period_selector_1.selection,0,\"Time_RetailVisitKpi_Alias\").asString()}});\ncomp_result = foreach comp_result generate 'Store_Group','Store', {{cell(Time_period_selector_1.selection,0,\"Time_RetailVisitKpi_Alias\").asString()}}, \nfirst(Compliance_percent) as 'Compliance_percent', sum(Compliance_percent) - sum(sum(Compliance_percent)) over ([-1..-1] partition by ('Store_Group','Store') order by\n('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_RetailVisitKpi_Alias\").asString()}})) as \n'Decline', (sum(Compliance_percent) - sum(sum(Compliance_percent)) over ([-1..-1] partition by ('Store_Group','Store') \norder by ('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_RetailVisitKpi_Alias\").asString()}})))/(sum(sum(Compliance_percent)) over ([-1..-1] partition by ('Store_Group','Store') order by ('Store_Group','Store',{{cell(Time_period_selector_1.selection,0,\"Time_RetailVisitKpi_Alias\").asString()}}))) as 'Decline_percent';\ntotal_comp = filter comp_result by 'Decline_percent' is not null;\ntotal_comp = foreach total_comp generate 'Store_Group','Store','Decline','Decline_percent';\n\n--final multidataset table\nfinal_table = cogroup \n\n              total_sale by  ('Store','Store_Group') full,\n              total_qty by  ('Store','Store_Group')full,\n              total_sv by  ('Store','Store_Group') full,\n              total_comp by  ('Store','Store_Group') \n              ;\n\nfinal_table = foreach final_table generate\n        \n        total_comp.'Store' as 'Store',\n        total_comp.'Store_Group' as 'Store_Group',\n         sum(total_sale.'Decline') as 'Sales_Decline',\n         sum(total_sale.'Decline_percent') as 'Sales_Decline_percent',\n         sum(total_qty.'Decline') as 'Quantity_Decline',\n         sum(total_qty.'Decline_percent') as 'Quantity_Decline_percent',\n         sum(total_sv.'Decline') as 'SalesVelocity_Decline',\n         sum(total_sv.'Decline_percent') as 'SalesVelocity_Decline_percent',\n         avg(total_comp.'Decline') as 'CompliancePercent_Decline',\n         avg(total_comp.'Decline_percent') as 'CompliancePercent_Decline_percent', 0 as 'Decline_temp',0 as 'Decline_temp_percent'\n         \n         \n         \n         ;\n\n   final_table1 = group final_table by  {{column(static_3.selection,[\"Field_value\"]).asObject()}};     \n  final_table1 = foreach final_table1 generate\n                 {{row(static_3.selection,[0],[\"Field_value\",\"Api_name_for_decline\"]).asProjection()}},\n                {{row(static_1.selection,[0],[\"Field_value_decline_percent\",\"Alias_decline_percent\"]).asProjection()}}\n                ;\nfinal_table1 = order final_table1 by {{cell(static_1.selection,0,\"Alias_decline_percent\").asObject()}} asc;",
        "receiveFacetSource" : {
          "mode" : "none",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "start" : [ ],
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "range_compliance_metrics" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "range_compliance_metrics",
        "numbers" : [ ],
        "query" : "retail = load \"${App.Datasets.CG_RetailVisitKpi70_tp.FullyQualifiedName}\";\r\n-- Compliance% Calculation\r\ncomp = filter retail by 'Include_In_Compliance' == \"True\";\r\ncomp_result = group comp by ('AssessmentTask.Visit.RetailStore.Name');\r\ncomp_result = foreach comp_result generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_CompliancePercentage';\r\ncomp_result = group comp_result by all;\r\ncomp_result = foreach comp_result generate min('Avg_CompliancePercentage') as 'min_Avg_CompliancePercentage', max('Avg_CompliancePercentage') as 'max_Avg_CompliancePercentage';\r\n--OutOfStockCompliance\r\noos = filter retail by 'Include_In_Compliance'== \"True\" and 'Type_Computed' == \"OutOfStock\";\r\noos_result = group oos by ('AssessmentTask.Visit.RetailStore.Name');\r\noos_result = foreach oos_result generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_OutOfStock_Compliance';\r\noos_result = group oos_result by all;\r\noos_result = foreach oos_result generate min('Avg_OutOfStock_Compliance') as 'min_Avg_OutOfStock_Compliance', max('Avg_OutOfStock_Compliance') as 'max_Avg_OutOfStock_Compliance';\r\n-- Share of Shelf\r\nsos = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"ShareOfShelf\";\r\nsos = group sos by ('AssessmentTask.Visit.RetailStore.Name');\r\nsos = foreach sos generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_SoSCompliance_Percentage';\r\nsos = group sos by all;\r\nsos = foreach sos generate min('Avg_SoSCompliance_Percentage') as 'min_Avg_SoSCompliance_Percentage', max('Avg_SoSCompliance_Percentage') as 'max_Avg_SoSCompliance_Percentage';\r\n--FacingsCompliance% Calculation\r\nfcs = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Facing\";\r\nfcs = group fcs by  ('AssessmentTask.Visit.RetailStore.Name');\r\nfcs = foreach fcs generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_FacingsCompliance_Percentage';\r\nfcs = group fcs by all;\r\nfcs = foreach fcs generate min('Avg_FacingsCompliance_Percentage') as 'min_Avg_FacingsCompliance_Percentage', max('Avg_FacingsCompliance_Percentage') as 'max_Avg_FacingsCompliance_Percentage';\r\n--PromotionCompliance\r\npromo = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Promotion\";\r\npromo = group promo by ('AssessmentTask.Visit.RetailStore.Name');\r\npromo = foreach promo generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_PromoCompliance_Percentage';\r\npromo = group promo by all;\r\npromo = foreach promo generate min('Avg_PromoCompliance_Percentage') as 'min_Avg_PromoCompliance_Percentage', max('Avg_PromoCompliance_Percentage') as 'max_Avg_PromoCompliance_Percentage';\r\n--InventoryCompliance\r\ninv = filter retail by 'Include_In_Compliance' == \"True\" and 'Type_Computed' == \"Inventory\";\r\ninv = group inv by ('AssessmentTask.Visit.RetailStore.Name');\r\ninv = foreach inv generate 'AssessmentTask.Visit.RetailStore.Name' as 'Store_Name', avg('Compliance_Percentage') as 'Avg_InventoryCompliance_Percentage';\r\ninv = group inv by all;\r\ninv = foreach inv generate min('Avg_InventoryCompliance_Percentage') as 'min_Avg_InventoryCompliance_Percentage', max('Avg_InventoryCompliance_Percentage') as 'max_Avg_InventoryCompliance_Percentage';\r\n--final multidataset table \r\nfinal_table = cogroup sos by all full, oos_result by all full, comp_result by all full,fcs by all full, promo by all full, inv by all;\r\nfinal_table = foreach final_table generate\r\n\r\navg(oos_result.'min_Avg_OutOfStock_Compliance') as 'min_Avg_OutOfStock_Compliance', \r\navg(oos_result.'max_Avg_OutOfStock_Compliance') as 'max_Avg_OutOfStock_Compliance', \r\navg(comp_result.'min_Avg_CompliancePercentage') as 'min_Avg_CompliancePercentage', \r\navg(comp_result.'max_Avg_CompliancePercentage') as 'max_Avg_CompliancePercentage', \r\navg(promo.'min_Avg_PromoCompliance_Percentage') as 'min_Avg_PromoCompliance_Percentage', \r\navg(promo.'max_Avg_PromoCompliance_Percentage') as 'max_Avg_PromoCompliance_Percentage', \r\navg(sos.'min_Avg_SoSCompliance_Percentage') as 'min_Avg_SoSCompliance_Percentage', \r\navg(sos.'max_Avg_SoSCompliance_Percentage') as 'max_Avg_SoSCompliance_Percentage', \r\navg(fcs.'min_Avg_FacingsCompliance_Percentage') as 'min_Avg_FacingsCompliance_Percentage', \r\navg(fcs.'max_Avg_FacingsCompliance_Percentage') as 'max_Avg_FacingsCompliance_Percentage', \r\navg(inv.'min_Avg_InventoryCompliance_Percentage') as 'min_Avg_InventoryCompliance_Percentage', \r\navg(inv.'max_Avg_InventoryCompliance_Percentage') as 'max_Avg_InventoryCompliance_Percentage';\r\nfinal_table = foreach final_table generate \r\ncase when round(coalesce('{{cell(picklist_compliance_metrics.selection, 0, \"min\").asString()}}',0),2) == round(coalesce('{{cell(picklist_compliance_metrics.selection, 0, \"max\").asString()}}',0),2) then 0 else round(coalesce('{{cell(picklist_compliance_metrics.selection, 0, \"min\").asString()}}',0),2) end as 'min', round(coalesce('{{cell(picklist_compliance_metrics.selection, 0, \"max\").asString()}}',0),2) as 'max';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "static_3" : {
        "broadcastFacet" : true,
        "columns" : {
          "Api_name" : {
            "type" : "string"
          },
          "Field_value" : {
            "type" : "string"
          },
          "Api_name_for_decline" : {
            "type" : "string"
          },
          "display_text" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "Store/StoreGrp",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Stores"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Stores",
            "Field_value" : "'Store'",
            "Api_name" : "RetailStore.Name",
            "Api_name_for_decline" : "Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.Name",
            "display_text" : "Stores"
          },
          {
            "Display" : "Store Group",
            "Field_value" : "'Store_Group'",
            "Api_name" : "RetailStore.RetailStoreGroupName_Custom",
            "Api_name_for_decline" : "Order.AssessmentTaskOrder.AssessmentTask.Visit.RetailStore.RetailStoreGroupName_Custom",
            "display_text" : "Store Group"
          }
        ]
      },
      "static_2" : {
        "broadcastFacet" : true,
        "columns" : {
          "Text_fordecline" : {
            "type" : "string"
          },
          "Text2" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "Top/Bottom",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "High to Low"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "High to Low",
            "Text2" : "desc",
            "Text_fordecline" : "asc"
          },
          {
            "Display" : "Low to High",
            "Text2" : "asc",
            "Text_fordecline" : "desc"
          }
        ]
      },
      "static_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "Alias_name_trend" : {
            "type" : "string"
          },
          "Alias_decline_percent" : {
            "type" : "string"
          },
          "Field_value" : {
            "type" : "string"
          },
          "Custom_Text" : {
            "type" : "string"
          },
          "Alias_decline" : {
            "type" : "string"
          },
          "Field_value_trend" : {
            "type" : "string"
          },
          "Field_value_decline_percent" : {
            "type" : "string"
          },
          "Alias_name" : {
            "type" : "string"
          },
          "Trend_Header" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          },
          "Field_value_decline" : {
            "type" : "string"
          }
        },
        "label" : "PickList",
        "selectMode" : "singlerequired",
        "start" : {
          "Display" : [
            "Quantity"
          ]
        },
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Avg Facing Compliance",
            "Field_value" : "avg('Avg_FacingsCompliance_Percentage')",
            "Alias_name" : "Avg_FacingsCompliance_Percentage",
            "Alias_name_trend" : "Avg_FacingsCompliance_Percentage",
            "Field_value_trend" : "avg('Avg_FacingsCompliance_Percentage')",
            "Field_value_decline" : "avg('FCS_Decline')",
            "Field_value_decline_percent" : "avg('FCS_Decline_percent')",
            "Alias_decline" : "Compliance_Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Average Facing Compliance"
          },
          {
            "Display" : "Avg Inventory Compliance",
            "Field_value" : "avg('Avg_InventoryCompliance_Percentage')",
            "Alias_name" : "Avg_InventoryCompliance_Percentage",
            "Alias_name_trend" : "Avg_InventoryCompliance_Percentage",
            "Field_value_trend" : "avg('Avg_InventoryCompliance_Percentage')",
            "Field_value_decline" : "avg('Inventory_Decline')",
            "Field_value_decline_percent" : "avg('Inventory_Decline_percent')",
            "Alias_decline" : "Compliance_Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Average Inventory Compliance"
          },
          {
            "Display" : "Avg Out-of-Stock Compliance",
            "Field_value" : "avg('Avg_OutOfStock_Compliance')",
            "Alias_name" : "Avg_OutOfStock_Compliance",
            "Alias_name_trend" : "Avg_OutOfStock_Compliance",
            "Field_value_trend" : "avg('Avg_OutOfStock_Compliance')",
            "Field_value_decline" : "avg('OOSComp_Decline')",
            "Field_value_decline_percent" : "avg('OOSComp_Decline_percent')",
            "Alias_decline" : "Compliance_Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Average Out-of-Stock Compliance"
          },
          {
            "Display" : "Avg Promotion Compliance",
            "Field_value" : "avg('Avg_PromoCompliance_Percentage')",
            "Alias_name" : "Avg_PromoCompliance_Percentage",
            "Alias_name_trend" : "Avg_PromoCompliance_Percentage",
            "Field_value_trend" : "avg('Avg_PromoCompliance_Percentage')",
            "Field_value_decline" : "avg('Promo_Decline')",
            "Field_value_decline_percent" : "avg('Promo_Decline_percent')",
            "Alias_decline" : "Compliance_Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Average Promotion Compliance"
          },
          {
            "Display" : "Avg Share-of-Shelf Compliance",
            "Field_value" : "avg('Avg_SoSCompliance_Percentage')",
            "Alias_name" : "Avg_SoSCompliance_Percentage",
            "Alias_name_trend" : "Avg_SoSCompliance_Percentage",
            "Field_value_trend" : "avg('Avg_SoSCompliance_Percentage')",
            "Field_value_decline" : "avg('SoS_Decline')",
            "Field_value_decline_percent" : "avg('SoS_Decline_percent')",
            "Alias_decline" : "Compliance_Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Average Share-of-Shelf Compliance"
          },
          {
            "Display" : "Avg Store Compliance",
            "Field_value" : "avg('Avg_Compliance_Percentage')",
            "Alias_name" : "Avg_Compliance_Percentage",
            "Alias_name_trend" : "Avg_Compliance_Percentage",
            "Field_value_trend" : "avg('Avg_Compliance_Percentage')",
            "Field_value_decline" : "avg('CompliancePercent_Decline')",
            "Field_value_decline_percent" : "avg('CompliancePercent_Decline_percent')",
            "Alias_decline" : "Compliance_Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Average Store Compliance"
          },
          {
            "Display" : "Avg Weekly Revenue",
            "Field_value" : "avg('Sales_Velocity')",
            "Alias_name" : "Sales_Velocity",
            "Alias_name_trend" : "SalesVelocity",
            "Field_value_trend" : "avg('SalesVelocity')",
            "Field_value_decline" : "sum('SalesVelocity_Decline')",
            "Field_value_decline_percent" : "sum('SalesVelocity_Decline_percent')",
            "Alias_decline" : "SalesVelocity_Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Average Weekly Compliance"
          },
          {
            "Display" : "High-Priority Visits Not Completed",
            "Field_value" : "sum('High_Priority_Incomplete_Visits')",
            "Alias_name" : "High_Priority_Incomplete_Visits",
            "Alias_name_trend" : "Incomplete_Visits",
            "Field_value_trend" : "sum('Incomplete_Visits')",
            "Field_value_decline" : "sum('HighPriorityIncompleteVisits_Decline')",
            "Field_value_decline_percent" : "sum('HighPriorityIncompleteVisits_Decline_percent')",
            "Alias_decline" : "Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "High-Priority Visits Not Completed"
          },
          {
            "Display" : "Out-of-Stock Occurrences",
            "Field_value" : "sum('OutOfStock_Count')",
            "Alias_name" : "OutOfStock_Count",
            "Alias_name_trend" : "OutOfStock_ActualCount",
            "Field_value_trend" : "sum('OutOfStock_ActualCount')",
            "Field_value_decline" : "sum('OOS_Decline')",
            "Field_value_decline_percent" : "sum('OOS_Decline_percent')",
            "Alias_decline" : "Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Out-of-Stock Occurrences"
          },
          {
            "Display" : "Quantity",
            "Field_value" : "sum('Quantity')",
            "Alias_name" : "Quantity",
            "Alias_name_trend" : "Quantity",
            "Field_value_trend" : "sum('Quantity')",
            "Field_value_decline" : "sum('Quantity_Decline')",
            "Field_value_decline_percent" : "sum('Quantity_Decline_percent')",
            "Alias_decline" : "Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "To view performance for a specific product or category, set the appropriate filters.",
            "Trend_Header" : "Quantity"
          },
          {
            "Display" : "Revenue",
            "Field_value" : "sum('Sales')",
            "Alias_name" : "Sales",
            "Alias_name_trend" : "Sales",
            "Field_value_trend" : "sum('Sales')",
            "Field_value_decline" : "sum('Sales_Decline')",
            "Field_value_decline_percent" : "sum('Sales_Decline_percent')",
            "Alias_decline" : "Sales_Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Revenue"
          },
          {
            "Display" : "Total Cases",
            "Field_value" : "sum('Total_Cases')",
            "Alias_name" : "Total_Cases",
            "Alias_name_trend" : "Cases_count",
            "Field_value_trend" : "sum('Cases_count')",
            "Field_value_decline" : "sum('Cases_Decline')",
            "Field_value_decline_percent" : "sum('Cases_Decline_percent')",
            "Alias_decline" : "Decline",
            "Alias_decline_percent" : "Decline_percent",
            "Custom_Text" : "",
            "Trend_Header" : "Total Cases"
          }
        ]
      },
      "incomplete_visits_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "incomplete_visits",
        "numbers" : [ ],
        "query" : "-- Incomplete High Priority Visits\nvisit1 = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\nvisit1 = filter visit1 by 'Status' in [\"Abandoned\", \"Planned\"] and  'VisitPriority' == \"High\" and  date('PlannedVisitStartTime_Year', 'PlannedVisitStartTime_Month', 'PlannedVisitStartTime_Day') in [..\"1 day ago\"];\n\nvisit1 = group visit1 by all;\nvisit1 = foreach visit1 generate count(visit1) as 'High_Priority_Incomplete_Visits';",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [ ],
              "plots" : [
                "High_Priority_Incomplete_Visits"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "lens_2" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "number_of_visits",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.CG_Visit69_tp.FullyQualifiedName}\";\r\n--q = filter q by date('ActualVisitStartTime_Year', 'ActualVisitStartTime_Month', 'ActualVisitStartTime_Day') in [..\"current day\"];\r\nq = filter q by 'Status' in [\"Completed\", \"Abandoned\"];\nresult = group q by all;\nresult = foreach result generate count(q) as 'A';\nresult = limit result 2000;\n\n",
        "receiveFacetSource" : {
          "mode" : "all",
          "steps" : [ ]
        },
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "number_11" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "High_Priority_Incomplete_Visits",
          "numberColor" : "#091A3E",
          "numberSize" : 20,
          "showActionMenu" : false,
          "step" : "incomplete_visits_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16,
          "tooltip" : {
            "customizeTooltip" : false
          }
        },
        "type" : "number"
      },
      "text_18" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_17" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_19" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_14" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_13" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{column(static_3.selection,[\"display_text\"]).asObject()}} by {{cell(static_1.selection,0,\"Display\").asObject()}} "
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_16" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_15" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Decline in {{cell(static_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_10" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Weekly Revenue"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(151, 147, 147)"
        },
        "type" : "text"
      },
      "text_12" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Details"
          },
          "fontSize" : 18,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_11" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Show Decline Over"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "rgb(198, 211, 225)"
        },
        "type" : "text"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "stretch"
        },
        "type" : "container"
      },
      "container_2" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_3" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_4" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_5" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_3" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Store Performance "
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_6" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_6" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Clone_of_decline_que_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_2" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Quantity"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(151, 147, 147)"
        },
        "type" : "text"
      },
      "container_7" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_5" : {
        "parameters" : {
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "left-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Quantity"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : [
              "RetailStore.Name"
            ]
          },
          "visualizationType" : "scatter",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "radiusRatio" : 5,
          "showActionMenu" : true,
          "x" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "high" : 102.2,
              "low" : -2.2,
              "showDomain" : false
            }
          },
          "y" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Stores_scatter_plot__1",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_5" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Out-of-Stock Occurrences"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(151, 147, 147)"
        },
        "type" : "text"
      },
      "text_4" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Avg Store Compliance"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(151, 147, 147)"
        },
        "type" : "text"
      },
      "chart_7" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Clone_of_multi_query_2",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_7" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Visits"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(151, 147, 147)"
        },
        "type" : "text"
      },
      "chart_2" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : true,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "sync",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Quantity",
              "low_80",
              "high_80"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : false,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : [
              "PlannedVisitStartTime_Year~~~PlannedVisitStartTime_Week"
            ]
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : false,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "dark",
          "step" : "Clone_of_Clone_of_Ti_1",
          "applyConditionalFormatting" : true,
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "drawArea" : {
            "measure" : "Quantity",
            "showDrawArea" : false,
            "bounding1" : "low_80",
            "bounding2" : "high_80"
          }
        },
        "type" : "chart"
      },
      "chart_1" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Quantity"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : [
              "RetailStore.Name"
            ]
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Clone_of_Master_bar_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_6" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Share of Shelf"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(198, 211, 225)"
        },
        "type" : "text"
      },
      "text_9" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Show stores’ performance by"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "rgb(255, 255, 255)"
        },
        "type" : "text"
      },
      "chart_4" : {
        "parameters" : {
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "left-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Quantity"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : [
              "RetailStore.Name"
            ]
          },
          "visualizationType" : "scatter",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "radiusRatio" : 5,
          "showActionMenu" : true,
          "x" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "y" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Stores_scatter_plot__2",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_8" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Open Cases"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(151, 147, 147)"
        },
        "type" : "text"
      },
      "chart_3" : {
        "parameters" : {
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "left-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Quantity"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : [
              "RetailStore.Name"
            ]
          },
          "visualizationType" : "scatter",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "radiusRatio" : 5,
          "showActionMenu" : true,
          "x" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "y" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Stores_scatter_plot__3",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "dateselector_1" : {
        "parameters" : {
          "absoluteModeEnabled" : true,
          "calendarTypeSwitchingAllowed" : true,
          "defaultFiscalMode" : false,
          "displayMode" : "filter",
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "presetsEnabled" : true,
          "relativeModeEnabled" : true,
          "showActionMenu" : false,
          "step" : "Comparative_Period_1",
          "title" : "Compare To"
        },
        "type" : "dateselector"
      },
      "text_1" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Revenue"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(151, 147, 147)"
        },
        "type" : "text"
      },
      "text_43" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Represents the x-axis"
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF",
          "tooltip" : ""
        },
        "type" : "text"
      },
      "text_42" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Represents the y-axis"
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF",
          "tooltip" : ""
        },
        "type" : "text"
      },
      "text_45" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "How are the store visits affecting store compliance and revenue?"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "number_5" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "SalesVelocity",
          "numberColor" : "#091A3E",
          "numberSize" : 20,
          "showActionMenu" : false,
          "step" : "TotalPrice_Order_Act_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16,
          "tooltip" : {
            "customizeTooltip" : false
          }
        },
        "type" : "number"
      },
      "number_4" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "A",
          "numberColor" : "#091A3E",
          "numberSize" : 20,
          "showActionMenu" : false,
          "step" : "lens_2",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16,
          "tooltip" : {
            "customizeTooltip" : false
          }
        },
        "type" : "number"
      },
      "number_2" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "Sales",
          "numberColor" : "#091A3E",
          "numberSize" : 20,
          "showActionMenu" : false,
          "step" : "TotalPrice_Order_Act_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16,
          "tooltip" : {
            "customizeTooltip" : false
          }
        },
        "type" : "number"
      },
      "text_40" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select KPI"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "number_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "Compliance_Percentage",
          "numberColor" : "#091A3E",
          "numberSize" : 20,
          "showActionMenu" : false,
          "step" : "AssessmentTask_Actio_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16,
          "tooltip" : {
            "customizeTooltip" : false
          }
        },
        "type" : "number"
      },
      "image_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "fitheight",
          "image" : {
            "name" : "${App.Images['Preview_CG_Iconpng106png'].Name}",
            "namespace" : "${Org.Namespace}"
          }
        },
        "type" : "image"
      },
      "container_12" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_11" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_10" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_39" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select KPI"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "rangeselector_3" : {
        "parameters" : {
          "displayMode" : "filter",
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : false,
          "showActionMenu" : true,
          "step" : "range_orderitem_metr_1",
          "title" : ""
        },
        "type" : "rangeselector"
      },
      "text_36" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Apply Filters to Stores"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_35" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "View by"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_38" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(picklist_compliance_metrics.selection, 0, \"Display\").asString()}} Percentage Range"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_37" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(picklist_order_metri_1.selection, 0, \"Display\").asString()}} {{cell(picklist_order_metri_1.selection, 0, \"Symbol\").asString()}} Range"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "#FFFFFF",
          "tooltip" : "abc"
        },
        "type" : "text"
      },
      "number_9" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "count",
          "numberColor" : "#091A3E",
          "numberSize" : 20,
          "showActionMenu" : false,
          "step" : "Total_Cases_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16,
          "tooltip" : {
            "customizeTooltip" : false
          }
        },
        "type" : "number"
      },
      "text_32" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "number_8" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "Quantity",
          "numberColor" : "#091A3E",
          "numberSize" : 20,
          "showActionMenu" : false,
          "step" : "TotalPrice_Order_Act_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16,
          "tooltip" : {
            "customizeTooltip" : false
          }
        },
        "type" : "number"
      },
      "text_31" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select KPI"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "number_7" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "out_of_stock_count",
          "noResultsLabel" : "-",
          "numberColor" : "#091A3E",
          "numberSize" : 16,
          "showActionMenu" : false,
          "step" : "OutofStock_1",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16,
          "tooltip" : {
            "customizeTooltip" : false
          }
        },
        "type" : "number"
      },
      "text_34" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Select KPI"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF",
          "tooltip" : "Represents the y-axis."
        },
        "type" : "text"
      },
      "text_33" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_30" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "rangeselector_1" : {
        "parameters" : {
          "displayMode" : "filter",
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : false,
          "showActionMenu" : true,
          "step" : "range_compliance_metrics",
          "title" : ""
        },
        "type" : "rangeselector"
      },
      "filterpanel_3" : {
        "parameters" : {
          "filterItemOptions" : {
            "backgroundColor" : "#FFFFFF",
            "borderColor" : "#E6ECF2",
            "borderRadius" : 0,
            "borderWidth" : 0,
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [ ],
          "itemsPerRow" : 8,
          "showAllFilters" : true,
          "title" : {
            "separatorColor" : "#E6ECF2",
            "text" : {
              "align" : "left",
              "color" : "#091A3E",
              "fontSize" : 16,
              "label" : "Filters"
            },
            "visible" : false
          }
        },
        "type" : "filterpanel"
      },
      "dateselector_3" : {
        "parameters" : {
          "absoluteModeEnabled" : true,
          "calendarTypeSwitchingAllowed" : true,
          "defaultFiscalMode" : false,
          "displayMode" : "filter",
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "presetsEnabled" : true,
          "relativeModeEnabled" : true,
          "showActionMenu" : false,
          "step" : "Current_Period_1",
          "title" : "Duration"
        },
        "type" : "dateselector"
      },
      "listselector_6" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : true,
          "step" : "picklist_compliance_metrics",
          "title" : ""
        },
        "type" : "listselector"
      },
      "listselector_8" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : true,
          "step" : "picklist_visit_metrics",
          "title" : ""
        },
        "type" : "listselector"
      },
      "listselector_3" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : true,
          "step" : "Time_period_selector_1",
          "title" : ""
        },
        "type" : "listselector"
      },
      "text_29" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Change in {{cell(static_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "listselector_2" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : true,
          "step" : "picklist_order_metri_1",
          "title" : ""
        },
        "type" : "listselector"
      },
      "text_28" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "How are the retail execution KPIs affecting store performance?"
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "listselector_5" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "static_3",
          "title" : ""
        },
        "type" : "listselector"
      },
      "listselector_4" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "static_2",
          "title" : ""
        },
        "type" : "listselector"
      },
      "text_25" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 16,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "link_3" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Performance",
          "textAlignment" : "center",
          "textColor" : "#7D98B3"
        },
        "type" : "link"
      },
      "text_24" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "Decline in {{cell(static_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "link_4" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Performance",
          "textAlignment" : "center",
          "textColor" : "rgb(0, 112, 210)"
        },
        "type" : "link"
      },
      "text_27" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(static_1.selection, 0, \"Custom_Text\").asString()}}"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "link_1" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "a827bee9-c006-4b3d-8db3-d61a7d055bbc"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Correlation",
          "textAlignment" : "center",
          "textColor" : "rgb(0, 112, 210)"
        },
        "type" : "link"
      },
      "text_26" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "{{cell(static_1.selection,0,\"Trend_Header\").asObject()}}"
          },
          "fontSize" : 14,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "link_2" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "83c3beaa-bf4f-4dda-972e-ceb65c4666ba"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "Hide Decline {{cell(static_1.selection,0,\"Display\").asObject()}} 🔼",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "text_21" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_20" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : ""
          },
          "fontSize" : 10,
          "showActionMenu" : true,
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_23" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "High-Priority Visits Not Completed"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "center",
          "textColor" : "rgb(151, 147, 147)"
        },
        "type" : "text"
      },
      "text_22" : {
        "parameters" : {
          "content" : {
            "displayTemplate" : "%Decline in {{cell(static_1.selection,0,\"Display\").asObject()}}"
          },
          "fontSize" : 12,
          "showActionMenu" : true,
          "textAlignment" : "right",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "table_1" : {
        "parameters" : {
          "borderColor" : "#e1e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#f2f6fa",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : {
            "Compliance_Percentage_1" : {
              "parameters" : { },
              "type" : "bar"
            }
          },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "evenRowColor" : "#f2f6fa",
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#e4ecf2",
            "fontColor" : "#5c7a99",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a9b7c7",
          "innerMinorBorderColor" : "#e1e5ee",
          "maxColumnWidth" : 300,
          "minColumnWidth" : 40,
          "mode" : "variable",
          "numberOfLines" : 1,
          "oddRowColor" : "#ffffff",
          "pivoted" : false,
          "showActionMenu" : true,
          "showRowIndexColumn" : false,
          "step" : "Master_Table_1",
          "subtotals" : true,
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "link_9" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "a827bee9-c006-4b3d-8db3-d61a7d055bbc"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{cell(picklist_compliance_metrics.selection, 0, \"Display\").asString()}}",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "link_7" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "a827bee9-c006-4b3d-8db3-d61a7d055bbc"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{cell(picklist_compliance_metrics.selection, 0, \"Display\").asString()}}",
          "textAlignment" : "center",
          "textColor" : "#C6D3E1"
        },
        "type" : "link"
      },
      "link_8" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "ed2bab90-cef3-4c60-919b-cd14d9e5c494"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{cell(picklist_order_metri_1.selection, 0, \"Display\").asString()}}",
          "textAlignment" : "center",
          "textColor" : "#C6D3E1"
        },
        "type" : "link"
      },
      "link_5" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "a827bee9-c006-4b3d-8db3-d61a7d055bbc"
          },
          "destinationType" : "page",
          "fontSize" : 16,
          "includeState" : false,
          "text" : "Correlation",
          "textAlignment" : "center",
          "textColor" : "#7D98B3"
        },
        "type" : "link"
      },
      "link_6" : {
        "parameters" : {
          "destinationLink" : {
            "name" : "ed2bab90-cef3-4c60-919b-cd14d9e5c494"
          },
          "destinationType" : "page",
          "fontSize" : 14,
          "includeState" : false,
          "text" : "{{cell(picklist_order_metri_1.selection, 0, \"Display\").asString()}}",
          "textAlignment" : "center",
          "textColor" : "#FFFFFF"
        },
        "type" : "link"
      },
      "listselector_1" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#FFFFFF",
            "valueColor" : "#FFFFFF"
          },
          "instant" : true,
          "showActionMenu" : false,
          "step" : "static_1",
          "title" : ""
        },
        "type" : "listselector"
      }
    }
  }
}