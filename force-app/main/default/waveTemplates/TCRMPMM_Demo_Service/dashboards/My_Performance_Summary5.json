{
  "name": "My_Performance_Summary5_tp",
  "label": "My Performance Summary",
  "folder": {
    "id": "${App.Folder.Id}"
  },
  "dateVersion": 1,
  "mobileDisabled": true,
  "xmd": {
    "measures": [],
    "derivedDimensions": [],
    "organizations": [],
    "showDetailsDefaultFields": [],
    "dates": [],
    "derivedMeasures": [],
    "dimensions": []
  },
  "state": {
    "dataSourceLinks": [],
    "filters": [],
    "gridLayouts": [
      {
        "maxWidth": 1360,
        "name": "Default",
        "numColumns": 48,
        "pages": [
          {
            "label": "Untitled",
            "name": "Default",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 31,
                "column": 1,
                "name": "text_My_Performance_Summary",
                "row": 0,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_1",
                "row": 0,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#634F95",
                  "borderEdges": ["bottom"],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 1,
                "name": "listselector_static_case_open_closed",
                "row": 10,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 6,
                "name": "listselector_filter_role",
                "row": 10,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 11,
                "name": "listselector_filter_origin",
                "row": 10,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 16,
                "name": "listselector_filter_account",
                "row": 10,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 21,
                "name": "listselector_filter_product",
                "row": 10,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 26,
                "name": "listselector_filter_reason",
                "row": 10,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 43,
                "name": "listselector_Time_Selection",
                "row": 10,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_13",
                "row": 8,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["top"],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 16,
                "column": 0,
                "name": "text_2",
                "row": 18,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(2, 10, 26, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 16,
                "column": 0,
                "name": "number_number_cases",
                "row": 20,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 4,
                "name": "number_CaseCount_PrevPeriod",
                "row": 25,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "{{cell(CaseCount_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderColor": "{{cell(CaseCount_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges": [],
                  "borderRadius": 4,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 14,
                "column": 1,
                "name": "chart_average_case_count_over_time",
                "row": 28,
                "rowspan": 14,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": ["left"],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 14,
                "column": 1,
                "name": "number_kpi_unique_owner_count",
                "row": 43,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 14,
                "column": 1,
                "name": "number_owner_rank",
                "row": 46,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 16,
                "column": 0,
                "name": "container_3",
                "row": 16,
                "rowspan": 36,
                "widgetStyle": {
                  "backgroundColor": "rgb(2, 10, 26)",
                  "borderColor": "rgba(51, 87, 121, 0.7)",
                  "borderEdges": ["right"],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 16,
                "column": 16,
                "name": "number_DurationCalculatedField_37",
                "row": 20,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "number_kpi_duration_prev",
                "row": 25,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "{{cell(kpi_duration_prev.result, 0, \"color\").asString()}}",
                  "borderColor": "{{cell(kpi_duration_prev.result, 0, \"color\").asString()}}",
                  "borderEdges": ["right"],
                  "borderRadius": 4,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 14,
                "column": 17,
                "name": "chart_average_case_duration_over_time",
                "row": 28,
                "rowspan": 14,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": ["left"],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 14,
                "column": 17,
                "name": "number_DurationCalculatedField_41",
                "row": 43,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 14,
                "column": 17,
                "name": "number_Duration_Rank",
                "row": 46,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 16,
                "column": 16,
                "name": "container_27",
                "row": 16,
                "rowspan": 36,
                "widgetStyle": {
                  "backgroundColor": "rgb(2, 10, 26)",
                  "borderColor": "rgba(51, 87, 121, 0.7)",
                  "borderEdges": ["right"],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 16,
                "column": 32,
                "name": "number_count_activities",
                "row": 20,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 36,
                "name": "number_Activities_PrevPeriod",
                "row": 25,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "{{cell(Activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderColor": "{{cell(Activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges": [],
                  "borderRadius": 4,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 14,
                "column": 33,
                "name": "chart_average_activities_over_time",
                "row": 28,
                "rowspan": 14,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": ["left"],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 14,
                "column": 33,
                "name": "number_Activities_teamavg",
                "row": 42,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 14,
                "column": 33,
                "name": "number_rank_activities",
                "row": 45,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 36,
                "name": "pillbox_IsClosed_42",
                "row": 48,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgb(0, 0, 0)",
                  "borderColor": "#335779",
                  "borderEdges": ["all"],
                  "borderRadius": 4
                }
              },
              {
                "colspan": 16,
                "column": 32,
                "name": "container_22",
                "row": 16,
                "rowspan": 36,
                "widgetStyle": {
                  "backgroundColor": "rgb(2, 10, 26)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 15,
                "column": 1,
                "name": "card_caseDuration_text_title",
                "row": 54,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 46,
                "column": 1,
                "name": "card_caseDuration_chart_kpi",
                "row": 58,
                "rowspan": 17,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "card_caseDuration_container",
                "row": 52,
                "rowspan": 24,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 46,
                "column": 1,
                "name": "ScoreCard_text_title",
                "row": 78,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "text__Escalated",
                "row": 84,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "text_Activities_per_case",
                "row": 84,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_CSAT_text_title",
                "row": 84,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_FCR_text_title",
                "row": 84,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 38,
                "name": "card_SLA_text_title",
                "row": 84,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "number_kpi_escalation_percent",
                "row": 87,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "number_kpi_avg_activities",
                "row": 87,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_CSAT_number_kpi",
                "row": 87,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_FCR_number_kpi",
                "row": 87,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 38,
                "name": "card_SLA_chart_kpi",
                "row": 87,
                "rowspan": 18,
                "widgetStyle": {
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "chart_kpi_escalation_percent",
                "row": 91,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "chart_kpi_avg_activities",
                "row": 91,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_CSAT_chart_kpi",
                "row": 91,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_FCR_chart_kpi",
                "row": 91,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "number_kpi_escalation_prev_percent",
                "row": 97,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "number_kpi_avg_prev_activities",
                "row": 97,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_CSAT_number_prior_period",
                "row": 97,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_FCR_number_prior_period",
                "row": 97,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "number_kpi_escalation_team_percent",
                "row": 100,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "number_kpi_avg_activities_team",
                "row": 100,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_CSAT_number_teamAvg",
                "row": 100,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_FCR_number_teamAvg",
                "row": 100,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "number_kpi_escalation_percent_rank",
                "row": 103,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "number_kpi_avg_activities_rank",
                "row": 103,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_CSAT_number_rank",
                "row": 103,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_FCR_number_rank",
                "row": 103,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "card_telephonyCount_text_title",
                "row": 109,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "card_telephonyDuration_text_title",
                "row": 109,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "card_telephonyDuration_number_kpi",
                "row": 112,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "card_telephonyDuration_chart_kpi",
                "row": 116,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "card_telephonyDuration_number_prior_period",
                "row": 122,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "card_telephonyDuration_number_teamAvg",
                "row": 125,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "card_telephonyDuration_number_rank",
                "row": 128,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "card_telephonyCount_number_kpi",
                "row": 112,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "card_telephonyCount_chart_kpi",
                "row": 116,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "card_telephonyCount_number_prior_period",
                "row": 122,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "card_telephonyCount_number_teamAvg",
                "row": 125,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "card_telephonyCount_number_rank",
                "row": 128,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_FCR_container",
                "row": 83,
                "rowspan": 23,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": ["all"],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 16,
                "column": 16,
                "name": "text_3",
                "row": 18,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 16,
                "column": 32,
                "name": "text_4",
                "row": 18,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_CSAT_container",
                "row": 83,
                "rowspan": 23,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": ["all"],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 38,
                "name": "card_SLA_container",
                "row": 83,
                "rowspan": 23,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": ["all"],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "container_9",
                "row": 83,
                "rowspan": 23,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": ["all"],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "container_11",
                "row": 83,
                "rowspan": 23,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": ["all"],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 2,
                "name": "card_telephonyCount_container",
                "row": 108,
                "rowspan": 23,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": ["all"],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 11,
                "name": "card_telephonyDuration_container",
                "row": 108,
                "rowspan": 23,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": ["all"],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_ChatCount_container",
                "row": 108,
                "rowspan": 23,
                "widgetStyle": {
                  "borderEdges": ["all"],
                  "borderRadius": 4
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_ChatCount_text_title",
                "row": 109,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_ChatCount_number_kpi",
                "row": 112,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_ChatCount_number_prior_period",
                "row": 122,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_ChatCount_number_teamAvg",
                "row": 125,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_ChatCount_number_rank",
                "row": 128,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 20,
                "name": "card_ChatCount_chart_kpi",
                "row": 116,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_ChatHandleTime_container",
                "row": 108,
                "rowspan": 23,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": ["all"],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_ChatHandleTime_text_title",
                "row": 109,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_ChatHandleTime_number_kpi",
                "row": 112,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_ChatHandleTime_number_teamAvg",
                "row": 125,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_ChatHandleTime_number_prior_period",
                "row": 122,
                "rowspan": 3,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": ["bottom"]
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_ChatHandleTime_chart_kpi",
                "row": 116,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 29,
                "name": "card_ChatHandleTime_number_rank",
                "row": 128,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              }
            ]
          }
        ],
        "rowHeight": "fine",
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#F2F6FA",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "documentId": "",
          "fit": "original"
        },
        "version": 1.0
      },
      {
        "name": "iphone",
        "numColumns": 1,
        "pages": [
          {
            "label": "Untitled",
            "name": "iphone",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 1,
                "column": 0,
                "name": "text_desktop_only",
                "row": 24,
                "rowspan": 6,
                "widgetStyle": {
                  "borderEdges": []
                }
              }
            ]
          }
        ],
        "rowHeight": "fine",
        "selectors": ["maxWidth(599)"],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#F2F6FA",
          "cellSpacingX": 8,
          "cellSpacingY": 0,
          "fit": "original",
          "gutterColor": "#C5D3E0"
        },
        "version": 1.0
      }
    ],
    "layouts": [],
    "steps": {
      "kpi_unique_owner_count": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; q = group q by all; q = foreach q generate unique('Id')/unique('OwnerId') as 'team_avg';",
            "measures": [["team", "avg"]],
            "autoFilter": true,
            "filters": []
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_CSAT_step_kpi": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["avg", "CSAT"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by 'CSAT' >= -10; q = filter q by 'IsClosed' == \"true\"; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};  q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};q = group q by all;  q = foreach q generate avg('CSAT') as 'avg_CSAT', (case when avg('CSAT') < {{coalesce(cell(card_CSAT_step_teamAvg.result, 0, \"avg_CSAT\"),0).asObject()}} then \"#f2536d\" when avg('CSAT') > {{coalesce(cell(card_CSAT_step_teamAvg.result, 0, \"avg_CSAT\"),0).asObject()}} then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_telephonyDuration_step_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by 'IsCall' == \"Yes\"; q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by ('Owner_Name','OwnerId'); q = foreach q generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('CallDurationInSeconds')) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "Duration_Rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = group q by ('Owner_Name', 'OwnerId'); q = foreach q generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('{{column(Static_Duration.selection,[\"pigql_value\"]).asObject()}}')) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_CSAT_step_teamAvg": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["avg", "CSAT"]],
            "filters": [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ],
              ["CSAT", [[-10]], ">="],
              ["IsClosed", ["true"], "in"],
              [
                "Role_Name",
                "{{column(filter_role.selection, [\"Role_Name\"]).asObject()}}"
              ]
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_telephonyCount_step_prior_period": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}};  q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by 'IsCall' == \"Yes\"; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; curYear = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 as 'unique_Percent', (case when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 < 0 then \"#3CAF6D\" when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 > 0 then \"#f2536d\"  else \"#7D98B3\" end) as 'color';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_telephonyCount_step_kpi": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}};  q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by 'IsCall' == \"Yes\"; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by all; q = foreach q generate count() as 'count', (case when count() < {{coalesce(cell(card_telephonyCount_step_teamAvg.result, 0, \"count\"),0).asObject()}} then \"#f2536d\" when count() > {{coalesce(cell(card_telephonyCount_step_teamAvg.result, 0, \"count\"),0).asObject()}} then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_escalation_percent_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = group q by ('Owner_Name', 'OwnerId', 'IsEscalated'); q = foreach q generate 'IsEscalated' as 'IsEscalated', 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', count() as 'count'; r = filter q by 'IsEscalated' == \"true\"; s = group q by ('Owner_Name','OwnerId') left, r by ('Owner_Name','OwnerId'); s = foreach s generate q.'Owner_Name' as 'Owner_Name', q.'OwnerId' as 'OwnerId', coalesce(count(r)/count(q),0) as 'escalated'; s = group s by ('Owner_Name', 'OwnerId'); s = foreach s generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('escalated')) as 'rank_position'; s = filter s by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_ChatHandleTime_step_kpi": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceChatTranscript_tp.Name}"
          }
        ],
        "isGlobal": false,
        "label": "",
        "query": {
          "query": {
            "measures": [["avg", "ChatDuration"]],
            "pigql": "q = load \"${App.Datasets.ServiceChatTranscript_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}};  q = group q by all; q = foreach q generate avg('ChatDuration') as 'avg_ChatDuration', (case when avg('ChatDuration') < {{coalesce(cell(card_ChatHandleTime_step_teamAvg.result, 0, \"team_avg\"),0).asObject()}} then \"#f2536d\" when avg('ChatDuration') > {{coalesce(cell(card_ChatHandleTime_step_teamAvg.result, 0, \"team_avg\"),0).asObject()}} then \"#3CAF6D\" else \"#7D98B3\" end) as 'color'; ",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "owner_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = group q by ('Owner_Name', 'OwnerId'); q = foreach q generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; ",
            "measures": [["rank", "position"]],
            "autoFilter": true,
            "filters": []
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "OwnerId_hidden": {
        "broadcastFacet": false,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["OwnerId"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "none",
          "steps": []
        },
        "selectMode": "singlerequired",
        "start": ["!{user.id}"],
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_escalation_vs_team_color": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\";  q = group q by all; q = foreach q generate count() as 'count', (case when {{coalesce(cell(kpi_escalation_percent.result, 0, \"perc_Percent\"),0).asObject()}} < {{coalesce(cell(kpi_escalation_team_percent.result, 0, \"perc_Percent\"),0).asObject()}} then \"#f2536d\" when {{coalesce(cell(kpi_escalation_percent.result, 0, \"perc_Percent\"),0).asObject()}} > {{coalesce(cell(kpi_escalation_team_percent.result, 0, \"perc_Percent\"),0).asObject()}} then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "pie"
        }
      },
      "card_telephonyDuration_step_prior_period": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}};  q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by 'IsCall' == \"Yes\"; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; curYear = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate 100*(avg(curYear.'CallDurationInSeconds')-avg(comparePeriod.'CallDurationInSeconds'))/avg(comparePeriod.'CallDurationInSeconds') as 'perc_Percent;"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_ChatCount_step_prior_period": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceChatTranscript_tp.Name}"
          }
        ],
        "isGlobal": false,
        "label": "",
        "query": {
          "query": {
            "measures": [["unique", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceChatTranscript_tp.FullyQualifiedName}\";  q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Case_Priority\"]).asEquality(\"Case_Priority\")}}; curYear = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('RequestTime_Year','RequestTime_Month','RequestTime_Day')\")}}; comparePeriod = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('RequestTime_Year','RequestTime_Month','RequestTime_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 as 'unique_Percent', (case when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 < 0 then \"#3CAF6D\" when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 > 0 then \"#f2536d\" else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_telephonyCount_step_teamAvg": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by 'IsCall' == \"Yes\"; q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by all; q = foreach q generate count() as 'count';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "filter_product": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["Product_Family_KB__c"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_avg_activities": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["avg", "activity"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}}; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};  q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by all; q = foreach q generate coalesce(count(), 0)/coalesce(unique('Case_Id'), 0) as 'avg_activity', (case when count()/unique('Case_Id') < {{coalesce(cell(kpi_avg_activities_team.result, 0, \"avg_activity\"),0).asObject()}} then \"#f2536d\" when count()/unique('Case_Id') > {{coalesce(cell(kpi_avg_activities_team.result, 0, \"avg_activity\"),0).asObject()}} then \"#3CAF6D\" else \"#7D98B3\" end) as 'color'; ",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_caseDuration_step_kpi": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCaseHistory_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["avg", "Case_DurationCalculatedField"]],
            "pigql": "q = load \"${App.Datasets.ServiceCaseHistory_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('Case_CreatedDate_Year','Case_CreatedDate_Month','Case_CreatedDate_Day')\")}};q = filter q by 'ChangeAfterCloseDate' == \"false\"; q = filter q by 'Field' == \"Status\"; average = filter q by  {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; average = filter average by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; average = filter average by {{column(card_SLA_step_kpi.selection, [\"MilestoneStatus__c\"]).asEquality(\"Case_MilestoneStatus__c\")}}; average = filter average by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"OldOwner_Role_Name\")}}; average = filter average by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; average = filter average by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; averageOld = group average by 'OldValue'; averageOld = foreach averageOld generate 'OldValue' as 'Status', avg(DateDiffOld) as 'Case_{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}'; averageNew = filter average by 'IsLastChange' == \"true\"; averageNew = group averageNew by 'NewValue'; averageNew = foreach averageNew generate 'NewValue' as 'Status', avg(DateDiffNew) as 'Case_{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}'; averageTotal = union averageOld,averageNew; averageTotal = group averageTotal by 'Status'; averageTotal = foreach averageTotal generate 'Status' as 'Status', \"Team Average\" as 'Performance', avg('Case_{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}') as 'avg_Case_DurationCalculatedField'; averageAccount = filter average by {{column(OwnerId_hidden.selection, [\"OwnerId\"]).asEquality(\"OldOwner_Id\")}}; averageAccountOld = group averageAccount by 'OldValue'; averageAccountOld = foreach averageAccountOld generate 'OldValue' as 'Status', avg(DateDiffOld) as 'Case_{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}'; averageAccountNew = filter averageAccount by 'IsLastChange' == \"true\"; averageAccountNew = group averageAccountNew by 'NewValue'; averageAccountNew = foreach averageAccountNew generate 'NewValue' as 'Status', avg(DateDiffNew) as 'Case_{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}'; averageAccountTotal = union averageAccountOld,averageAccountNew; averageAccountTotal = group averageAccountTotal by 'Status'; averageAccountTotal = foreach averageAccountTotal generate 'Status' as 'Status', (case when (\"{{cell(OwnerId_hidden.selection, 0, \"OwnerId\").asString()}}\" == \"all\") then \"ALL\" else \"My Performance\" end) as 'Performance', avg('Case_{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}') as 'avg_Case_DurationCalculatedField'; FinalChart = union averageTotal, averageAccountTotal; FinalChart = filter FinalChart by 'Performance' != \"ALL\"; FinalChart = order FinalChart by 'avg_Case_DurationCalculatedField' desc;",
            "autoFilter": true,
            "groups": ["Status", "Performance"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "DurationCalculatedField_41": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; q = group q by all; q = foreach q generate avg('{{column(Static_Duration.selection, [\"pigql_value\"]).asObject()}}') as 'avg_Duration';",
            "measures": [["avg", "Duration"]],
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_ChatHandleTime_step_teamAvg": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceChatTranscript_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["team", "avg"]],
            "pigql": "q = load \"${App.Datasets.ServiceChatTranscript_tp.FullyQualifiedName}\";  q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}};  q = group q by all; q = foreach q generate avg('ChatDuration')/unique('OwnerId') as 'team_avg';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "number_cases": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "filters": [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ],
              [
                "Owner_Name",
                "{{column(filter_agent.selection, [\"Owner_Name\"]).asObject()}}"
              ]
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "average_case_duration_over_time": {
        "broadcastFacet": false,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["avg", "Duration", null]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Reason\")}};r = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, avg('{{column(Static_Duration.selection, [\"pigql_value\"]).asObject()}}') as 'avg_Duration', (case when (\"{{cell(filter_agent.selection, 0, \"Owner_Name\").asObject()}}\" == \"all\" && \"{{cell(OwnerId_hidden.selection, 0, \"OwnerId\").asObject()}}\" == \"all\") then \"ALL\" else \"My Performance\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, avg('{{column(Static_Duration.selection, [\"pigql_value\"]).asObject()}}') as 'avg_Duration', \"All Agents - Team\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \"ALL\"; u = group u by ({{cell(Time_Selection.selection, 0, \"FullGroup\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection, 0, \"Grouping\").asObject()}}, 'Performance' as 'Performance', sum('avg_Duration') as 'avg_Duration';",
            "groups": [
              "{{cell(Time_Selection.selection, 0, \"compactGroup\").asObject()}}",
              "Performance"
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "none",
          "steps": []
        },
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "time"
        }
      },
      "filter_reason": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*", null]],
            "groups": ["Reason"],
            "filters": [
              [
                "Owner_Name",
                "{{column(filter_agent.selection, [\"Owner_Name\"]).asObject()}}"
              ]
            ],
            "order": [
              [
                -1,
                {
                  "ascending": "{{cell(Order_Select.selection,0,\"value\").asObject()}}"
                }
              ]
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_ChatCount_step_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceChatTranscript_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceChatTranscript_tp.FullyQualifiedName}\";  q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "rank_activities": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}}; q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by ('Owner_Name','OwnerId'); q = foreach q generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "filter_origin": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["Origin"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "start": [],
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "filter_role": {
        "broadcastFacet": false,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["Role_Name"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "none",
          "steps": []
        },
        "selectMode": "multi",
        "start": [],
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_FCR_step_teamAvg": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by 'IsClosed' == \"true\"; q = group q by 'First_Contact_Close__c'; q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'First_Contact_Close__c' == \"true\";",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "filter_record_type": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["RecordType_Name"],
            "filters": [
              [
                "Owner_Name",
                "{{column(filter_agent.selection, [\"Owner_Name\"]).asObject()}}"
              ]
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "start": [],
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_escalation_prev_percent": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; prevq = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; prevq = group prevq by 'IsEscalated'; prevq = foreach prevq generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; prevq = filter prevq by 'IsEscalated' == \"true\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \"true\"; b = cogroup q by all, prevq by all; b = foreach b generate 100*(avg(q.'perc_Percent')-avg(prevq.'perc_Percent'))/avg(prevq.'perc_Percent') as 'perc_Percent', (case when 100*(avg(q.'perc_Percent')-avg(prevq.'perc_Percent'))/avg(prevq.'perc_Percent') < 0 then \"#3CAF6D\" when 100*(avg(q.'perc_Percent')-avg(prevq.'perc_Percent'))/avg(prevq.'perc_Percent') > 0 then \"#f2536d\" else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "pie"
        }
      },
      "count_activities": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};  q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by all; q = foreach q generate count() as 'count';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "Activities_teamavg": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["team", "avg"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}};q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by all; q = foreach q generate count()/unique('Owner_Id') as 'team_avg';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_avg_activities_team": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["avg", "activity"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}};q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by all; q = foreach q generate coalesce(count(), 0)/coalesce(unique('Case_Id'), 0) as 'avg_activity'; "
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_escalation_percent": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \"true\";",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "pie"
        }
      },
      "Static_Duration": {
        "broadcastFacet": true,
        "columns": {},
        "isGlobal": false,
        "selectMode": "singlerequired",
        "start": {
          "display": ["Time Open"]
        },
        "type": "staticflex",
        "useGlobal": true,
        "values": [
          {
            "display": "Time Open",
            "value": ["avg", "Time_Open__c"],
            "pigql_value": "Time_Open__c",
            "measure_field": "avg_Time_Open__c"
          }
        ]
      },
      "card_telephonyCount_step_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by 'IsCall' == \"Yes\"; q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by ('Owner_Name','OwnerId'); q = foreach q generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position';q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_FCR_step_kpi": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent", null]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by 'IsClosed' == \"true\"; q = group q by 'First_Contact_Close__c'; q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent', (case when (count()) / sum(count()) over([..] partition by all)*100 < {{coalesce(cell(card_FCR_step_teamAvg.result, 0, \"perc_Percent\"),0).asObject()}} then \"#f2536d\" when (count()) / sum(count()) over([..] partition by all)*100 > {{coalesce(cell(card_FCR_step_teamAvg.result, 0, \"perc_Percent\"),0).asObject()}} then \"#3CAF6D\" else \"#7D98B3\" end) as 'color'; q = filter q by 'First_Contact_Close__c' == \"true\";",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_ChatHandleTime_step_prior_period": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceChatTranscript_tp.Name}"
          }
        ],
        "isGlobal": false,
        "label": "",
        "query": {
          "query": {
            "measures": [["unique", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceChatTranscript_tp.FullyQualifiedName}\"; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; curYear = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('RequestTime_Year','RequestTime_Month','RequestTime_Day')\")}}; comparePeriod = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('RequestTime_Year','RequestTime_Month','RequestTime_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (avg(curYear.'ChatDuration') - avg(comparePeriod.'ChatDuration'))/avg(comparePeriod.'ChatDuration') *100 as 'unique_Percent', (case when (avg(curYear.'ChatDuration') - avg(comparePeriod.'ChatDuration'))/avg(comparePeriod.'ChatDuration') *100 < 0 then \"#3CAF6D\" when (avg(curYear.'ChatDuration') - avg(comparePeriod.'ChatDuration'))/avg(comparePeriod.'ChatDuration') *100 > 0 then \"#f2536d\" else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "Order_Select": {
        "datasets": [],
        "dimensions": [],
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "start": [false],
        "type": "static",
        "useGlobal": false,
        "values": [
          {
            "display": "Desc",
            "value": ["false"]
          },
          {
            "display": "Asc",
            "value": ["true"]
          }
        ]
      },
      "DurationCalculatedField_37": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; q = group q by all; q = foreach q generate avg('{{column(Static_Duration.selection, [\"pigql_value\"]).asObject()}}') as 'avg_Duration';",
            "measures": [["avg", "Duration"]],
            "autoFilter": true,
            "order": [
              [
                -1,
                {
                  "ascending": false
                }
              ]
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_telephonyDuration_step_teamAvg": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["avg", "CallDurationInSeconds"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}};q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by 'IsCall' == \"Yes\"; q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by all; q = foreach q generate avg('CallDurationInSeconds') as 'avg_CallDurationInSeconds';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "Time_Selection": {
        "broadcastFacet": false,
        "columns": {},
        "isGlobal": false,
        "selectMode": "singlerequired",
        "start": {
          "display": ["Last 180 Days"]
        },
        "type": "staticflex",
        "useGlobal": false,
        "values": [
          {
            "display": "YTD",
            "text_display": "vs Prior YTD",
            "Backlog30DayClose": "[\"current day - 395 days\"..\"current day - 1 year\"]",
            "BacklogCompare": ["current day - 1 year", "current day"],
            "BacklogLabel": "Backlog Last Year",
            "ClosedField": "'ClosedDate_Month'",
            "CoGroup": "('CreatedDate_Month')",
            "Compact": [
              ["year", 0],
              ["year", 0]
            ],
            "CreatedField": "'CreatedDate_Month'",
            "CreatedProjection": "created['CreatedDate_Month']",
            "Current": ["current year", "current day"],
            "FullGroup": "'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateClosedDate": "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCoGroupDate": "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCreatedDate": "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GroupbyClosedDate": "('ClosedDate_Year','ClosedDate_Month')",
            "GroupbyCreatedDate": "'CreatedDate_Year','CreatedDate_Month'",
            "Grouping": "'CreatedDate_Year~~~CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "LastPeriodCompare": [
              "current year - 1 year",
              "current day - 1 year"
            ],
            "LastYearCompare": [
              "current year - 1 year",
              "current day - 1 year"
            ],
            "Measure": [
              "Backlog",
              "Count",
              null,
              {
                "display": "Backlog Count at Start of Month"
              }
            ],
            "compactGroup": ["CreatedDate_Year", "CreatedDate_Month"],
            "filter": "year",
            "queryCogroupNew": "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "SAQL": "coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent",
            "trendProjection": "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display": "QTD",
            "text_display": "vs Prior QTD",
            "Backlog30DayClose": "[\"current day - 120 days\"..\"current day - 1 quarter\"]",
            "BacklogCompare": ["current day - 1 quarter", "current day"],
            "BacklogLabel": "Backlog Last Quarter",
            "ClosedField": "'ClosedDate_Week'",
            "CoGroup": "('CreatedDate_Week')",
            "Compact": [
              ["quarter", 0],
              ["quarter", 0]
            ],
            "CreatedField": "'CreatedDate_Week'",
            "CreatedProjection": "created['CreatedDate_Week']",
            "Current": ["current quarter", "current day"],
            "FullGroup": "'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateClosedDate": "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate": "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate": "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate": "('ClosedDate_Year','ClosedDate_Week')",
            "GroupbyCreatedDate": "'CreatedDate_Year','CreatedDate_Week'",
            "Grouping": "'CreatedDate_Year~~~CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "LastPeriodCompare": [
              "current quarter - 1 quarter",
              "current day - 1 quarter"
            ],
            "LastYearCompare": [
              "current quarter - 1 year",
              "current day - 1 year"
            ],
            "Measure": [
              "Backlog",
              "Count",
              null,
              {
                "display": "Backlog Count at Start of Week"
              }
            ],
            "compactGroup": ["CreatedDate_Year", "CreatedDate_Week"],
            "filter": "quarter",
            "queryCogroupNew": "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "SAQL": "coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent",
            "trendProjection": "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display": "MTD",
            "text_display": "vs Prior MTD",
            "Backlog30DayClose": "[\"current day - 60 days\"..\"current day - 1 month\"]",
            "BacklogCompare": ["current day - 1 month", "current day"],
            "BacklogLabel": "Backlog Last Month",
            "ClosedField": "'ClosedDate_Month','ClosedDate_Day'",
            "CoGroup": "('CreatedDate_Month','CreatedDate_Day')",
            "Compact": [
              ["month", 0],
              ["month", 0]
            ],
            "CreatedField": "'CreatedDate_Month','CreatedDate_Day'",
            "CreatedProjection": "created['CreatedDate_Month'] +\"~~~\" + created['CreatedDate_Day']",
            "Current": ["current month", "current month"],
            "FullGroup": "'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateClosedDate": "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month'+\"~~~\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCoGroupDate": "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month']+\"~~~\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCreatedDate": "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month'+\"~~~\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GroupbyClosedDate": "('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')",
            "GroupbyCreatedDate": "'CreatedDate_Year','CreatedDate_Month','CreatedDate_Day'",
            "Grouping": "'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "LastPeriodCompare": [
              "current month - 1 month",
              "current day - 1 month"
            ],
            "LastYearCompare": [
              "current month - 1 year",
              "current day - 1 year"
            ],
            "Measure": [
              "Backlog",
              "Count",
              null,
              {
                "display": "Backlog Count at Start of Day"
              }
            ],
            "compactGroup": [
              "CreatedDate_Year",
              "CreatedDate_Month",
              "CreatedDate_Day"
            ],
            "filter": "month",
            "queryCogroupNew": "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month']+\"~~~\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "trendProjection": "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display": "Last 7 Days",
            "text_display": "vs Prior 7 Days",
            "Backlog30DayClose": "[\"current day - 37 days\"..\"current day - 7 days\"]",
            "BacklogCompare": ["current day - 1 week", "current day"],
            "BacklogLabel": "Backlog Last 7 Days",
            "ClosedField": "'ClosedDate_Month','ClosedDate_Day'",
            "CoGroup": "('CreatedDate_Month','CreatedDate_Day')",
            "Compact": [
              ["day", -7],
              ["day", 0]
            ],
            "CreatedField": "'CreatedDate_Month','CreatedDate_Day'",
            "CreatedProjection": "created['CreatedDate_Month'] +\"~~~\" + created['CreatedDate_Day']",
            "Current": ["7 days ago", "current day"],
            "FullGroup": "'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateClosedDate": "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month'+\"~~~\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCoGroupDate": "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month']+\"~~~\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCreatedDate": "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month'+\"~~~\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GroupbyClosedDate": "('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')",
            "GroupbyCreatedDate": "'CreatedDate_Year','CreatedDate_Month','CreatedDate_Day'",
            "Grouping": "'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "LastPeriodCompare": [
              "7 days ago - 1 week",
              "current day - 1 week"
            ],
            "LastYearCompare": ["7 days ago - 1 year", "current day - 1 year"],
            "Measure": [
              "Backlog",
              "Count",
              null,
              {
                "display": "Backlog Count at Start of Day"
              }
            ],
            "compactGroup": [
              "CreatedDate_Year",
              "CreatedDate_Month",
              "CreatedDate_Day"
            ],
            "filter": "week",
            "queryCogroupNew": "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month']+\"~~~\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "trendProjection": "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display": "Last 30 Days",
            "text_display": "vs Prior 30 Days",
            "Backlog30DayClose": "[\"current day - 60 days\"..\"current day - 30 days\"]",
            "BacklogCompare": ["current day - 30 days", "current day"],
            "BacklogLabel": "Backlog Last 30 Days",
            "ClosedField": "'ClosedDate_Week'",
            "CoGroup": "('CreatedDate_Week')",
            "Compact": [
              ["day", -30],
              ["day", 0]
            ],
            "CreatedField": "'CreatedDate_Week'",
            "CreatedProjection": "created['CreatedDate_Week']",
            "Current": ["30 days ago", "current day"],
            "FullGroup": "'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateClosedDate": "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate": "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate": "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate": "('ClosedDate_Year','ClosedDate_Week')",
            "GroupbyCreatedDate": "'CreatedDate_Year','CreatedDate_Week'",
            "Grouping": "'CreatedDate_Year~~~CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "LastPeriodCompare": [
              "30 days ago - 30 days",
              "current day - 30 days"
            ],
            "LastYearCompare": ["30 days ago - 1 year", "current day - 1 year"],
            "Measure": [
              "Backlog",
              "Count",
              null,
              {
                "display": "Backlog Count at Start of Week"
              }
            ],
            "compactGroup": ["CreatedDate_Year", "CreatedDate_Week"],
            "filter": "month",
            "queryCogroupNew": "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "trendProjection": "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display": "Last 180 Days",
            "text_display": "vs Prior 180 Days",
            "Backlog30DayClose": "[\"current day - 240 days\"..\"current day - 180 days\"]",
            "BacklogCompare": ["current day - 180 days", "current day"],
            "BacklogLabel": "Backlog Last 180 Days",
            "ClosedField": "'ClosedDate_Month'",
            "CoGroup": "('CreatedDate_Month')",
            "Compact": [
              ["day", -180],
              ["day", 0]
            ],
            "CreatedField": "'CreatedDate_Month'",
            "CreatedProjection": "created['CreatedDate_Month']",
            "Current": ["180 days ago", "current day"],
            "FullGroup": "'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateClosedDate": "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCoGroupDate": "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCreatedDate": "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GroupbyClosedDate": "('ClosedDate_Year','ClosedDate_Month')",
            "GroupbyCreatedDate": "'CreatedDate_Year','CreatedDate_Month'",
            "Grouping": "'CreatedDate_Year~~~CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "LastPeriodCompare": [
              "180 days ago - 180 days",
              "current day - 180 days"
            ],
            "LastYearCompare": [
              "180 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure": [
              "Backlog",
              "Count",
              null,
              {
                "display": "Backlog Count at Start of Month"
              }
            ],
            "compactGroup": ["CreatedDate_Year", "CreatedDate_Month"],
            "filter": "month",
            "queryCogroupNew": "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "trendProjection": "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          }
        ]
      },
      "activity_type": {
        "broadcastFacet": false,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\"OwnerId\"]).asEquality(\"OwnerId\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by 'ActivityType';q = foreach q generate 'ActivityType' as 'ActivityType' , count() as 'count';q = order q by 'count' desc;",
            "autoFilter": false,
            "groups": ["ActivityType"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "none",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "pie"
        }
      },
      "card_telephonyDuration_step_kpi": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["avg", "CallDurationInSeconds"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by 'IsCall' == \"Yes\"; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by all; q = foreach q generate avg('CallDurationInSeconds') as 'avg_CallDurationInSeconds',(case when avg('CallDurationInSeconds') < {{coalesce(cell(card_telephonyDuration_step_teamAvg.result, 0, \"avg_CallDurationInSeconds\"),0).asObject()}} then \"#f2536d\" when avg('CallDurationInSeconds') > {{coalesce(cell(card_telephonyDuration_step_teamAvg.result, 0, \"avg_CallDurationInSeconds\"),0).asObject()}} then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "average_activities_over_time": {
        "broadcastFacet": false,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*", null]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}}; r = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; r = filter r by {{column(OwnerId_hidden.selection, [\"OwnerId\"]).asEquality(\"OwnerId\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count() as 'count', (case when (\"{{cell(filter_agent.selection,0, \"Owner_Name\").asString()}}\" == \"all\" && \"{{cell(OwnerId_hidden.selection,0, \"OwnerId\").asString()}}\" == \"all\") then \"ALL\" else \"My Performance\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count()/unique('OwnerId') as 'count', \"All Agents - Team\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \"ALL\"; u = group u by ({{cell(Time_Selection.selection,0,\"FullGroup\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection,0,\"Grouping\").asObject()}}, 'Performance' as 'Performance', sum('count') as 'count';",
            "groups": [
              "{{cell(Time_Selection.selection,0,\"compactGroup\").asObject()}}",
              "Performance"
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "none",
          "steps": []
        },
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "time"
        }
      },
      "card_CSAT_step_prior_period": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by 'CSAT' >= -10; q = filter q by 'IsClosed' == \"true\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') as 'perc_Percent', (case when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') < 0 then \"#f2536d\" when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_duration_prev": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["unique", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"IsClosed\")}}; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}') as 'unique_Percent', (case when 100*(avg(s.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}') < 0 then \"#3CAF6D\" when 100*(avg(s.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(Static_Duration.selection, 0, \"pigql_value\").asObject()}}') > 0 then \"#f2536d\"  else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "average_case_count_over_time": {
        "broadcastFacet": false,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*", null]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Reason\")}};r = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; r = filter r by {{column(OwnerId_hidden.selection, [\"OwnerId\"]).asEquality(\"OwnerId\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count() as 'count', (case when (\"{{cell(filter_agent.selection,0, \"Owner_Name\").asString()}}\" == \"all\" && \"{{cell(OwnerId_hidden.selection,0, \"OwnerId\").asString()}}\" == \"all\") then \"ALL\" else \"My Performance\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count()/unique('OwnerId') as 'count', \"All Agents - Team\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \"ALL\"; u = group u by ({{cell(Time_Selection.selection, 0, \"FullGroup\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection, 0, \"Grouping\").asObject()}}, 'Performance' as 'Performance', sum('count') as 'count';",
            "autoFilter": true,
            "groups": [
              "{{cell(Time_Selection.selection,0,\"compactGroup\").asObject()}}",
              "Performance"
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "time"
        }
      },
      "filter_account": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["Account_Name"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "Activities_PrevPeriod": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}};r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(count(s)-count(r))/count(r) as 'perc_Percent', (case when 100*(count(s)-count(r))/count(r) < 0 then \"#f2536d\" when 100*(count(s)-count(r))/count(r) > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_avg_activities_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}};q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; q = group q by ('Owner_Name','OwnerId'); q = foreach q generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()) as 'rank_position';q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "IsClosed_42": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["ActivityIsClosed"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "start": ["Completed"],
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "CaseCount_PrevPeriod": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["unique", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\";  ENDTOTAL = filter q by 'IsClosed' == \"false\"; updcreatedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \"BacklogCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; updclosedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \"BacklogCompare\").asDateRange(\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\")}};compare = group updcreatedTOTAL by all full, updclosedTOTAL by all full, ENDTOTAL by all; compare = foreach compare generate (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 as 'unique_Percent', (case when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 < 0 then \"#3CAF6D\" when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 > 0 then \"#f2536d\" else \"#7D98B3\" end) as 'color';",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "filter_agent": {
        "broadcastFacet": false,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["Owner_Name"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "none",
          "steps": []
        },
        "selectMode": "single",
        "start": [],
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_ChatHandleTime_step_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceChatTranscript_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceChatTranscript_tp.FullyQualifiedName}\";  q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}}; q = group q by 'OwnerId'; q = foreach q generate 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('ChatDuration')) as 'rank_position';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_avg_prev_activities": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = filter q by {{column(activity_priority_type.selection, [\"Priority\"]).asEquality(\"Case_Priority\")}}; prevq = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; prevq = group prevq by all; prevq = foreach prevq generate coalesce(count(), 0)/coalesce(unique('Case_Id'), 0) as 'avg_activity'; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = group q by all; q = foreach q generate coalesce(count(), 0)/coalesce(unique('Case_Id'), 0) as 'avg_activity'; t = group prevq by all, q by all; t = foreach t generate 100*(avg(q.'avg_activity')-avg(prevq.'avg_activity'))/avg(prevq.'avg_activity') as 'perc_Percent'; "
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "kpi_escalation_team_percent": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["perc", "Percent"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \"true\"; ",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "pie"
        }
      },
      "card_FCR_step_prior_period": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; prevq = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; preva = filter prevq by 'IsClosed' == \"true\"; preva = filter preva by 'First_Contact_Close__c' == \"true\";  prevb = filter prevq by 'IsClosed' == \"true\"; prevc = cogroup preva by all full, prevb by all; prevc = foreach prevc generate coalesce((count(preva)/ count(prevb)) * 100, 0) as 'avg_Percent'; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; a = filter q by 'IsClosed' == \"true\"; a = filter a by 'First_Contact_Close__c' == \"true\";  b = filter q by 'IsClosed' == \"true\"; c = cogroup a by all full, b by all; c = foreach c generate coalesce((count(a)/ count(b)) * 100, 0) as 'avg_Percent'; t = group prevc by all, c by all; t = foreach t generate 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') as 'perc_Percent', (case when 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') < 0 then \"#f2536d\" when 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "measures": [["perc", "Percent"]],
            "measuresMap": {},
            "groups": []
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "activity_priority_type": {
        "broadcastFacet": false,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceActivity_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "pigql": "q = load \"${App.Datasets.ServiceActivity_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_record_type.selection, [\"RecordType_Name\"]).asEquality(\"Case_RecordType_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(IsClosed_42.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\"OwnerId\"]).asEquality(\"OwnerId\")}};q = filter q by {{column(activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}}; q = group q by 'Priority';q = foreach q generate 'Priority' as 'Priority' , count() as 'count';q = order q by 'count' desc;",
            "autoFilter": false,
            "groups": ["Priority"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "none",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "pie"
        }
      },
      "card_SLA_step_kpi": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["MilestoneStatus__c"],
            "filters": [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ],
              [
                "Owner_Name",
                "{{column(filter_agent.selection, [\"Owner_Name\"]).asObject()}}"
              ]
            ],
            "order": [
              [
                -1,
                {
                  "ascending": false
                }
              ]
            ]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_FCR_step_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; q = filter q by 'IsClosed' == \"true\"; q = group q by ('Owner_Name', 'OwnerId', 'First_Contact_Close__c'); q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', count() as 'count'; r = filter q by 'First_Contact_Close__c' == \"true\"; s = group q by ('Owner_Name','OwnerId') left, r by ('Owner_Name','OwnerId'); s = foreach s generate q.'Owner_Name' as 'Owner_Name', q.'OwnerId' as 'OwnerId', coalesce(count(r)/count(q),0) as 'fcr'; s = group s by ('Owner_Name', 'OwnerId'); s = foreach s generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('fcr')*(-1)) as 'rank_position'; s = filter s by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_ChatCount_step_kpi": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceChatTranscript_tp.Name}"
          }
        ],
        "isGlobal": false,
        "label": "",
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "pigql": "q = load \"${App.Datasets.ServiceChatTranscript_tp.FullyQualifiedName}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}};  q = group q by all; q = foreach q generate count() as 'count', (case when count() < {{coalesce(cell(card_ChatCount_step_teamAvg.result, 0, \"team_avg\"),0).asObject()}} then \"#f2536d\" when count() > {{coalesce(cell(card_ChatCount_step_teamAvg.result, 0, \"team_avg\"),0).asObject()}} then \"#3CAF6D\" else \"#7D98B3\" end) as 'color'; ",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "card_CSAT_step_rank": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["rank", "position"]],
            "pigql": "q = load \"${App.Datasets.ServiceCase_tp.FullyQualifiedName}\"; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Role_Name\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by 'IsClosed' == \"true\"; q = group q by ('Owner_Name','OwnerId'); q = foreach q generate 'Owner_Name' as 'Owner_Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('CSAT')*(-1)) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\"Owner_Name\"]).asEquality(\"Owner_Name\")}};",
            "autoFilter": true
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "static_case_open_closed": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceCase_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["count", "*"]],
            "groups": ["IsClosed"]
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {}
      },
      "card_ChatCount_step_teamAvg": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.Datasets.ServiceChatTranscript_tp.Name}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": {
            "measures": [["team", "avg"]],
            "pigql": "q = load \"${App.Datasets.ServiceChatTranscript_tp.FullyQualifiedName}\";  q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by {{column(static_case_open_closed.selection, [\"IsClosed\"]).asEquality(\"Case_IsClosed\")}}; q = filter q by {{column(filter_origin.selection, [\"Origin\"]).asEquality(\"Case_Origin\")}}; q = filter q by {{column(filter_product.selection, [\"Product_Family_KB__c\"]).asEquality(\"Case_Product_Family_KB__c\")}}; q = filter q by {{column(filter_account.selection, [\"Account_Name\"]).asEquality(\"Case_Account_Name\")}}; q = filter q by {{column(filter_reason.selection, [\"Reason\"]).asEquality(\"Case_Reason\")}}; q = filter q by {{column(filter_role.selection, [\"Role_Name\"]).asEquality(\"Case_Role_Name\")}};  q = group q by all; q = foreach q generate count()/unique('OwnerId') as 'team_avg';"
          },
          "version": -1.0
        },
        "receiveFacetSource": {
          "mode": "all",
          "steps": []
        },
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "card_telephonyCount_number_prior_period": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_telephonyCount_step_prior_period",
          "textAlignment": "left",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_ChatCount_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "No. of Chats"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "number_kpi_duration_prev": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "unique_Percent",
          "numberColor": "#FFFFFF",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "kpi_duration_prev",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_telephonyDuration_number_kpi": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_CallDurationInSeconds",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "showActionMenu": true,
          "step": "card_telephonyDuration_step_kpi",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "card_ChatCount_number_prior_period": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "unique_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_ChatCount_step_prior_period",
          "textAlignment": "right",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_13": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_kpi_unique_owner_count": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "team_avg",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "showActionMenu": true,
          "step": "kpi_unique_owner_count",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Team Average",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "card_CSAT_number_teamAvg": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CSAT",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_CSAT_step_teamAvg",
          "textAlignment": "left",
          "title": "Team average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "listselector_filter_role": {
        "parameters": {
          "compact": false,
          "displayMode": "combo",
          "expanded": false,
          "exploreLink": false,
          "filterStyle": {
            "titleColor": "#091A3E",
            "valueColor": "#17324D"
          },
          "instant": false,
          "measureField": "none",
          "showActionMenu": false,
          "step": "filter_role",
          "title": "Role"
        },
        "type": "listselector"
      },
      "number_DurationCalculatedField_41": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "avg_Duration",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "showActionMenu": true,
          "step": "DurationCalculatedField_41",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)",
          "title": "Team Average",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "card_CSAT_number_prior_period": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_CSAT_step_prior_period",
          "textAlignment": "left",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "text__Escalated": {
        "parameters": {
          "content": {
            "displayTemplate": "% Escalated"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "text_3": {
        "parameters": {
          "content": {
            "displayTemplate": "Duration"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "container_22": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_2": {
        "parameters": {
          "content": {
            "displayTemplate": "Cases"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "text_4": {
        "parameters": {
          "content": {
            "displayTemplate": "Activities"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "card_telephonyCount_container": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "card_FCR_container": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "card_ChatHandleTime_number_kpi": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "avg_ChatDuration",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "showActionMenu": true,
          "step": "card_ChatHandleTime_step_kpi",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "listselector_filter_origin": {
        "parameters": {
          "compact": false,
          "displayMode": "combo",
          "expanded": false,
          "exploreLink": false,
          "filterStyle": {
            "titleColor": "#091A3E",
            "valueColor": "#17324D"
          },
          "instant": false,
          "measureField": "none",
          "showActionMenu": false,
          "step": "filter_origin",
          "title": "Case Origin"
        },
        "type": "listselector"
      },
      "card_telephonyDuration_container": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "card_ChatHandleTime_number_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_ChatHandleTime_step_rank",
          "textAlignment": "right",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_owner_rank": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "showActionMenu": true,
          "step": "owner_rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Rank",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "container_11": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "pillbox_IsClosed_42": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "count",
          "selectedTab": {
            "backgroundColor": "#677A97",
            "borderColor": "#C6D3E1",
            "borderEdges": [],
            "borderWidth": 1,
            "textColor": "#FFFFFF"
          },
          "showActionMenu": true,
          "step": "IsClosed_42",
          "textColor": "#5C7A99",
          "title": ""
        },
        "type": "pillbox"
      },
      "number_count_activities": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "count",
          "numberColor": "#FFFFFF",
          "numberSize": 32,
          "showActionMenu": true,
          "step": "count_activities",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "ScoreCard_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "My Scorecard"
          },
          "fontSize": 16,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "card_telephonyDuration_number_teamAvg": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CallDurationInSeconds",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_telephonyDuration_step_teamAvg",
          "textAlignment": "left",
          "title": "Team average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "listselector_filter_product": {
        "parameters": {
          "compact": false,
          "displayMode": "combo",
          "expanded": false,
          "exploreLink": false,
          "filterStyle": {
            "titleColor": "#091A3E",
            "valueColor": "#17324D"
          },
          "instant": false,
          "measureField": "count",
          "showActionMenu": false,
          "step": "filter_product",
          "title": "Product"
        },
        "type": "listselector"
      },
      "chart_average_case_duration_over_time": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "descOrder": false,
            "showHeader": false,
            "show": true,
            "customSize": "auto",
            "position": "bottom-center",
            "inside": false
          },
          "axisMode": "multi",
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "time",
          "missingValue": "connect",
          "dashLine": {
            "measures": "",
            "showDashLine": false
          },
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": ""
          },
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [100, 100],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": true,
          "showActionMenu": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "customDomain": {
              "showDomain": false
            }
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": false,
            "title": "",
            "customDomain": {
              "showDomain": false
            }
          },
          "valueType": "none",
          "step": "average_case_duration_over_time",
          "theme": "dark",
          "applyConditionalFormatting": false,
          "drawArea": {
            "measure": "",
            "showDrawArea": false,
            "bounding1": "",
            "bounding2": ""
          }
        },
        "type": "chart"
      },
      "card_ChatCount_container": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "card_ChatCount_chart_kpi": {
        "parameters": {
          "max": 100,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false
          },
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "flatgauge",
          "exploreLink": true,
          "medium": 33,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [150, 80],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "colors": {
            "mediumColor2": "{{coalesce(cell(card_ChatCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "mediumColor1": "{{coalesce(cell(card_ChatCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor1": "{{coalesce(cell(card_ChatCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor2": "{{coalesce(cell(card_ChatCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor1": "{{coalesce(cell(card_ChatCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor2": "{{coalesce(cell(card_ChatCount_step_kpi.result, 0, \"color\"),0).asObject()}}"
          },
          "high": 66,
          "min": 0,
          "showActionMenu": true,
          "valueType": "none",
          "theme": "wave",
          "step": "card_ChatCount_step_kpi",
          "referenceLines": [
            {
              "color": "rgb(0, 161, 224)",
              "label": {
                "data": "Team",
                "type": "static"
              },
              "value": {
                "data": "{{coalesce(cell(card_ChatCount_step_teamAvg.result, 0, \"team_avg\"),0).asObject()}}",
                "type": "static"
              }
            }
          ],
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "card_telephonyDuration_number_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_telephonyDuration_step_rank",
          "textAlignment": "left",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_ChatHandleTime_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "Avg Chat Handle Time"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "card_CSAT_container": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "number_kpi_escalation_team_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "kpi_escalation_team_percent",
          "textAlignment": "left",
          "title": "Team average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_kpi_escalation_percent_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "kpi_escalation_percent_rank",
          "textAlignment": "left",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_ChatHandleTime_container": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "listselector_static_case_open_closed": {
        "parameters": {
          "compact": false,
          "displayMode": "combo",
          "expanded": true,
          "exploreLink": false,
          "filterStyle": {
            "titleColor": "#091A3E",
            "valueColor": "#17324D"
          },
          "instant": true,
          "measureField": "count",
          "showActionMenu": false,
          "step": "static_case_open_closed",
          "title": "Open/Closed"
        },
        "type": "listselector"
      },
      "chart_average_activities_over_time": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "descOrder": false,
            "showHeader": false,
            "show": true,
            "customSize": "auto",
            "position": "bottom-center",
            "inside": false
          },
          "axisMode": "multi",
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "time",
          "missingValue": "connect",
          "dashLine": {
            "measures": "",
            "showDashLine": false
          },
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": ""
          },
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [100, 100],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": false,
          "showActionMenu": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "customDomain": {
              "showDomain": false
            }
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": false,
            "title": "",
            "customDomain": {
              "showDomain": false
            }
          },
          "valueType": "none",
          "step": "average_activities_over_time",
          "theme": "dark",
          "applyConditionalFormatting": false,
          "drawArea": {
            "measure": "",
            "showDrawArea": false,
            "bounding1": "",
            "bounding2": ""
          }
        },
        "type": "chart"
      },
      "card_CSAT_chart_kpi": {
        "parameters": {
          "max": 100,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false
          },
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "flatgauge",
          "exploreLink": true,
          "medium": 33,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [150, 80],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "colors": {
            "mediumColor2": "{{coalesce(cell(card_CSAT_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "mediumColor1": "{{coalesce(cell(card_CSAT_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor1": "{{coalesce(cell(card_CSAT_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor2": "{{coalesce(cell(card_CSAT_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor1": "{{coalesce(cell(card_CSAT_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor2": "{{coalesce(cell(card_CSAT_step_kpi.result, 0, \"color\"),0).asObject()}}"
          },
          "high": 66,
          "min": 0,
          "showActionMenu": true,
          "valueType": "none",
          "theme": "wave",
          "step": "card_CSAT_step_kpi",
          "referenceLines": [
            {
              "color": "rgb(0, 161, 224)",
              "label": {
                "data": "Team",
                "type": "static"
              },
              "value": {
                "data": "{{coalesce(cell(card_CSAT_step_teamAvg.result, 0, \"avg_CSAT\"),0).asObject()}}",
                "type": "static"
              }
            }
          ],
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "card_telephonyDuration_number_prior_period": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_telephonyDuration_step_prior_period",
          "textAlignment": "left",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_caseDuration_container": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "listselector_Time_Selection": {
        "parameters": {
          "compact": false,
          "displayMode": "combo",
          "expanded": false,
          "exploreLink": false,
          "filterStyle": {
            "titleColor": "#091A3E",
            "valueColor": "#17324D"
          },
          "instant": true,
          "measureField": "",
          "showActionMenu": false,
          "step": "Time_Selection",
          "title": "Date Range"
        },
        "type": "listselector"
      },
      "card_ChatHandleTime_number_teamAvg": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "team_avg",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_ChatHandleTime_step_teamAvg",
          "textAlignment": "right",
          "title": "Team average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_27": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "card_CSAT_number_kpi": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_CSAT",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "showActionMenu": true,
          "step": "card_CSAT_step_kpi",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "card_FCR_number_teamAvg": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_FCR_step_teamAvg",
          "textAlignment": "left",
          "title": "Team average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "chart_average_case_count_over_time": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "descOrder": false,
            "showHeader": false,
            "show": true,
            "customSize": "auto",
            "position": "bottom-center",
            "inside": false
          },
          "axisMode": "multi",
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "time",
          "missingValue": "connect",
          "dashLine": {
            "measures": "",
            "showDashLine": false
          },
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": ""
          },
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [100, 100],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": false,
          "showActionMenu": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "customDomain": {
              "showDomain": false
            }
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": false,
            "title": "",
            "customDomain": {
              "showDomain": false
            }
          },
          "valueType": "none",
          "step": "average_case_count_over_time",
          "theme": "dark",
          "applyConditionalFormatting": false,
          "drawArea": {
            "measure": "",
            "showDrawArea": false,
            "bounding1": "",
            "bounding2": ""
          }
        },
        "type": "chart"
      },
      "number_CaseCount_PrevPeriod": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "unique_Percent",
          "numberColor": "#FFFFFF",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "CaseCount_PrevPeriod",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_DurationCalculatedField_37": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "avg_Duration",
          "numberColor": "#FFFFFF",
          "numberSize": 32,
          "showActionMenu": true,
          "step": "DurationCalculatedField_37",
          "textAlignment": "center",
          "textColor": "rgb(0, 0, 0)",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "card_ChatCount_number_kpi": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "showActionMenu": true,
          "step": "card_ChatCount_step_kpi",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_number_cases": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "count",
          "numberColor": "#FFFFFF",
          "numberSize": 32,
          "showActionMenu": true,
          "step": "number_cases",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "card_caseDuration_chart_kpi": {
        "parameters": {
          "autoFitMode": "keepLabels",
          "showValues": true,
          "bins": {
            "breakpoints": {
              "high": 100,
              "low": 0
            },
            "bands": {
              "high": {
                "color": "#008000",
                "label": ""
              },
              "low": {
                "color": "#B22222",
                "label": ""
              },
              "medium": {
                "color": "#ffa500",
                "label": ""
              }
            }
          },
          "legend": {
            "descOrder": false,
            "showHeader": false,
            "show": true,
            "customSize": "auto",
            "position": "bottom-center",
            "inside": false
          },
          "axisMode": "multi",
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "vbar",
          "exploreLink": false,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "binValues": false,
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [100, 100],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "showActionMenu": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "customDomain": {
              "showDomain": false
            }
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "customDomain": {
              "showDomain": false
            }
          },
          "theme": "dark",
          "step": "card_caseDuration_step_kpi",
          "dimensionAxis": {
            "showTitle": true,
            "customSize": "auto",
            "showAxis": true,
            "title": "",
            "icons": {
              "useIcons": false,
              "iconProps": {
                "fit": "cover",
                "column": "",
                "type": "round",
                "parameters": {}
              }
            }
          },
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "card_ChatHandleTime_number_prior_period": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "unique_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_ChatHandleTime_step_prior_period",
          "textAlignment": "right",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_CSAT_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "CSAT"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "card_telephonyCount_number_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_telephonyCount_step_rank",
          "textAlignment": "left",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_telephonyCount_number_kpi": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "showActionMenu": true,
          "step": "card_telephonyCount_step_kpi",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "card_FCR_number_prior_period": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_FCR_step_prior_period",
          "textAlignment": "left",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_Duration_Rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "showActionMenu": true,
          "step": "Duration_Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Rank",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "card_telephonyCount_number_teamAvg": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_telephonyCount_step_teamAvg",
          "textAlignment": "left",
          "title": "Team average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_telephonyCount_chart_kpi": {
        "parameters": {
          "max": 100,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false
          },
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "flatgauge",
          "exploreLink": false,
          "medium": 33,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [150, 80],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "colors": {
            "mediumColor2": "{{coalesce(cell(card_telephonyCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "mediumColor1": "{{coalesce(cell(card_telephonyCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor1": "{{coalesce(cell(card_telephonyCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor2": "{{coalesce(cell(card_telephonyCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor1": "{{coalesce(cell(card_telephonyCount_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor2": "{{coalesce(cell(card_telephonyCount_step_kpi.result, 0, \"color\"),0).asObject()}}"
          },
          "high": 66,
          "min": 0,
          "showActionMenu": true,
          "valueType": "none",
          "theme": "wave",
          "step": "card_telephonyCount_step_kpi",
          "referenceLines": [
            {
              "color": "rgb(0, 161, 224)",
              "label": {
                "data": "Team",
                "type": "static"
              },
              "value": {
                "data": "{{coalesce(cell(card_telephonyCount_step_teamAvg.result, 0, \"count\"),0).asObject()}}",
                "type": "static"
              }
            }
          ],
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "container_1": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "card_FCR_chart_kpi": {
        "parameters": {
          "max": 100,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false
          },
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "flatgauge",
          "exploreLink": false,
          "medium": 33,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [150, 80],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "colors": {
            "mediumColor2": "{{coalesce(cell(card_FCR_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "mediumColor1": "{{coalesce(cell(card_FCR_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor1": "{{coalesce(cell(card_FCR_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor2": "{{coalesce(cell(card_FCR_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor1": "{{coalesce(cell(card_FCR_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor2": "{{coalesce(cell(card_FCR_step_kpi.result, 0, \"color\"),0).asObject()}}"
          },
          "high": 66,
          "min": 0,
          "showActionMenu": true,
          "valueType": "none",
          "theme": "wave",
          "step": "card_FCR_step_kpi",
          "referenceLines": [
            {
              "color": "rgb(0, 161, 224)",
              "label": {
                "data": "Team",
                "type": "static"
              },
              "value": {
                "data": "{{coalesce(cell(card_FCR_step_teamAvg.result, 0, \"perc_Percent\"),0).asObject()}}",
                "type": "static"
              }
            }
          ],
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "card_caseDuration_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "Case Duration In Each Stage Vs Team Average"
          },
          "fontSize": 16,
          "showActionMenu": true,
          "textAlignment": "left",
          "textColor": "rgb(255, 255, 255)"
        },
        "type": "text"
      },
      "container_2": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "card_telephonyDuration_chart_kpi": {
        "parameters": {
          "max": 100,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false
          },
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "flatgauge",
          "exploreLink": false,
          "medium": 33,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [150, 80],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "colors": {
            "mediumColor2": "{{coalesce(cell(card_telephonyDuration_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "mediumColor1": "{{coalesce(cell(card_telephonyDuration_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor1": "{{coalesce(cell(card_telephonyDuration_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor2": "{{coalesce(cell(card_telephonyDuration_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor1": "{{coalesce(cell(card_telephonyDuration_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor2": "{{coalesce(cell(card_telephonyDuration_step_kpi.result, 0, \"color\"),0).asObject()}}"
          },
          "high": 66,
          "min": 0,
          "showActionMenu": true,
          "valueType": "compactNumber",
          "theme": "wave",
          "step": "card_telephonyDuration_step_kpi",
          "referenceLines": [
            {
              "color": "rgb(0, 161, 224)",
              "label": {
                "data": "Team",
                "type": "static"
              },
              "value": {
                "data": "{{coalesce(cell(card_telephonyDuration_step_teamAvg.result, 0, \"avg_CallDurationInSeconds\"),0).asObject()}}",
                "type": "static"
              }
            }
          ],
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "card_FCR_number_kpi": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 18,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "showActionMenu": true,
          "step": "card_FCR_step_kpi",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "container_9": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "number_kpi_avg_activities_team": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_activity",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "kpi_avg_activities_team",
          "textAlignment": "left",
          "title": "Team average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_ChatCount_number_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_ChatCount_step_rank",
          "textAlignment": "right",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "listselector_filter_reason": {
        "parameters": {
          "compact": false,
          "displayMode": "combo",
          "expanded": false,
          "exploreLink": false,
          "filterStyle": {
            "titleColor": "#091A3E",
            "valueColor": "#17324D"
          },
          "instant": false,
          "measureField": "count",
          "showActionMenu": false,
          "step": "filter_reason",
          "title": "Case Reason"
        },
        "type": "listselector"
      },
      "number_kpi_escalation_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "showActionMenu": true,
          "step": "kpi_escalation_percent",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "card_FCR_number_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_FCR_step_rank",
          "textAlignment": "left",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_ChatHandleTime_chart_kpi": {
        "parameters": {
          "max": 100,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false
          },
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "flatgauge",
          "exploreLink": false,
          "medium": 33,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [150, 80],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "colors": {
            "mediumColor2": "{{coalesce(cell(card_ChatHandleTime_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "mediumColor1": "{{coalesce(cell(card_ChatHandleTime_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor1": "{{coalesce(cell(card_ChatHandleTime_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "lowColor2": "{{coalesce(cell(card_ChatHandleTime_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor1": "{{coalesce(cell(card_ChatHandleTime_step_kpi.result, 0, \"color\"),0).asObject()}}",
            "highColor2": "{{coalesce(cell(card_ChatHandleTime_step_kpi.result, 0, \"color\"),0).asObject()}}"
          },
          "high": 66,
          "min": 0,
          "showActionMenu": true,
          "valueType": "none",
          "theme": "wave",
          "step": "card_ChatHandleTime_step_kpi",
          "referenceLines": [
            {
              "color": "rgb(0, 161, 224)",
              "label": {
                "data": "Team",
                "type": "static"
              },
              "value": {
                "data": "{{coalesce(cell(card_ChatHandleTime_step_teamAvg.result, 0, \"team_avg\"),0).asObject()}}",
                "type": "static"
              }
            }
          ],
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "text_My_Performance_Summary": {
        "parameters": {
          "content": {
            "displayTemplate": "My Performance Summary"
          },
          "fontSize": 24,
          "showActionMenu": true,
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "number_kpi_avg_activities_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "kpi_avg_activities_rank",
          "textAlignment": "left",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_SLA_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "SLA"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "number_kpi_escalation_prev_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "kpi_escalation_prev_percent",
          "textAlignment": "left",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_Activities_PrevPeriod": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "perc_Percent",
          "numberColor": "#FFFFFF",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "Activities_PrevPeriod",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_kpi_avg_prev_activities": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "kpi_avg_prev_activities",
          "textAlignment": "left",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "card_SLA_container": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "card_SLA_chart_kpi": {
        "parameters": {
          "centerText": "",
          "legend": {
            "descOrder": false,
            "showHeader": false,
            "show": true,
            "customSize": "auto",
            "position": "bottom-center",
            "inside": false
          },
          "showMeasureTitle": false,
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "pie",
          "exploreLink": true,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [100, 100],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "inner": 70,
          "showActionMenu": true,
          "centerValueType": "none",
          "valueType": "compactNumber",
          "step": "card_SLA_step_kpi",
          "theme": "light",
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "card_ChatCount_number_teamAvg": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "team_avg",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_ChatCount_step_teamAvg",
          "textAlignment": "right",
          "title": "Team average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_Activities_teamavg": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "team_avg",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "showActionMenu": true,
          "step": "Activities_teamavg",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Team Average",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "card_FCR_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "FCR"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "listselector_filter_account": {
        "parameters": {
          "compact": false,
          "displayMode": "combo",
          "expanded": false,
          "exploreLink": false,
          "filterStyle": {
            "titleColor": "#091A3E",
            "valueColor": "#17324D"
          },
          "instant": false,
          "measureField": "count",
          "showActionMenu": false,
          "step": "filter_account",
          "title": "Account"
        },
        "type": "listselector"
      },
      "text_desktop_only": {
        "parameters": {
          "content": {
            "displayTemplate": "This dashboard is designed for \n desktop viewing only"
          },
          "fontSize": 20,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "card_telephonyCount_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "No. of Calls"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "card_telephonyDuration_text_title": {
        "parameters": {
          "content": {
            "displayTemplate": "Avg Call Duration"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "number_kpi_avg_activities": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_activity",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "showActionMenu": true,
          "step": "kpi_avg_activities",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_rank_activities": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "showActionMenu": true,
          "step": "rank_activities",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Rank",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "chart_kpi_avg_activities": {
        "parameters": {
          "max": 100,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false
          },
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "flatgauge",
          "exploreLink": false,
          "medium": 33,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [150, 80],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "colors": {
            "mediumColor2": "{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}",
            "mediumColor1": "{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}",
            "lowColor1": "{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}",
            "lowColor2": "{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}",
            "highColor1": "{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}",
            "highColor2": "{{coalesce(cell(kpi_avg_activities.result, 0, \"color\"),0).asObject()}}"
          },
          "high": 66,
          "min": 0,
          "showActionMenu": true,
          "valueType": "none",
          "theme": "wave",
          "step": "kpi_avg_activities",
          "referenceLines": [
            {
              "color": "rgb(0, 161, 224)",
              "label": {
                "data": "Team",
                "type": "static"
              },
              "value": {
                "data": "{{coalesce(cell(kpi_avg_activities_team.result, 0, \"avg_activity\"),0).asObject()}}",
                "type": "static"
              }
            }
          ],
          "applyConditionalFormatting": false
        },
        "type": "chart"
      },
      "card_CSAT_number_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "showActionMenu": true,
          "step": "card_CSAT_step_rank",
          "textAlignment": "left",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "text_Activities_per_case": {
        "parameters": {
          "content": {
            "displayTemplate": "Activities per case"
          },
          "fontSize": 14,
          "showActionMenu": true,
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "chart_kpi_escalation_percent": {
        "parameters": {
          "max": 100,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false
          },
          "tooltip": {
            "showBinLabel": true,
            "measures": "",
            "showNullValues": true,
            "showPercentage": true,
            "showDimensions": true,
            "showMeasures": true,
            "customizeTooltip": false,
            "dimensions": ""
          },
          "visualizationType": "flatgauge",
          "exploreLink": false,
          "medium": 33,
          "title": {
            "fontSize": 14,
            "subtitleFontSize": 11,
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "flipLabels": false,
            "showGridLines": true,
            "size": [150, 80],
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "colors": {
            "mediumColor2": "{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}",
            "mediumColor1": "{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}",
            "lowColor1": "{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}",
            "lowColor2": "{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}",
            "highColor1": "{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}",
            "highColor2": "{{coalesce(cell(kpi_escalation_vs_team_color.result, 0, \"color\"),0).asObject()}}"
          },
          "high": 66,
          "min": 0,
          "showActionMenu": true,
          "valueType": "none",
          "theme": "wave",
          "step": "kpi_escalation_percent",
          "referenceLines": [
            {
              "color": "rgb(0, 161, 224)",
              "label": {
                "data": "Team",
                "type": "static"
              },
              "value": {
                "data": "{{coalesce(cell(kpi_escalation_team_percent.result, 0, \"perc_Percent\"),0).asObject()}}",
                "type": "static"
              }
            }
          ],
          "applyConditionalFormatting": false
        },
        "type": "chart"
      }
    }
  }
}
